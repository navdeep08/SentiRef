Extract Method	Translation	Positive	Negative	EmotionRationale
599 commit f73ad1c2e27d2418e428eb80d5047c5bf2b2770d bugfix/rewrite: algorithm to determine adaptor boundaries the algorithm wasn't accounting for the case where the read is the reverse strand and the insert size is negative. * fixed and rewrote for more clarity (with ryan, mark and eric). * restructured the code to handle gatksamrecords only * cleaned up the other structures and functions around it to minimize clutter and potential for error. * added unit tests for all 4 cases of adaptor boundaries. 	599 commit f73ad1c2e27d2418e428eb80d5047c5bf2b2770d bugfix/rewrite: algorithm to determine adaptor boundaries the algorithm wasn't accounting for the case where the read is the reverse strand and the insert size is negative.<br> * fixed and rewrote for more clarity (with ryan, mark and eric)<br> * restructured the code to handle gatksamrecords only * cleaned up the other structures and functions around it to minimize clutter and potential for error.<br> * added unit tests for all 4 cases of adaptor boundaries.	1	-2	 599[0] commit[0] f73ad1c2e27d2418e428eb80d5047c5bf2b2770d[0] bugfix/rewrite[0] algorithm[0] to[0] determine[0] adaptor[0] boundaries[0] the[0] algorithm[0] wasn't[0] accounting[0] for[0] the[0] case[0] where[0] the[0] read[0] is[0] the[0] reverse[0] strand[0] and[0] the[0] insert[0] size[0] is[0] negative[-1] [[Sentence=-2,1=word max, 1-5]] fixed[0] and[0] rewrote[0] for[0] more[0] clarity[0] with[0] ryan[0] mark[0] and[0] eric[0] [[Sentence=-1,1=word max, 1-5]] restructured[0] the[0] code[0] to[0] handle[0] gatksamrecords[0] only[0] cleaned[0] up[0] the[0] other[0] structures[0] and[0] functions[0] around[0] it[0] to[0] minimize[0] clutter[-1] and[0] potential[0] for[0] error[0] [[Sentence=-2,1=word max, 1-5]] added[0] unit[0] tests[0] for[0] all[0] 4[0] cases[0] of[0] adaptor[0] boundaries[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
848 commit 7d09c0064b29ae0b502fbc4b76f505e0f5a3c4a3 bug fixes and code cleanup throughout -- chromosomecounts now takes builder as well, cleaning up a lot of code throughout the codebase. 	848 commit 7d09c0064b29ae0b502fbc4b76f505e0f5a3c4a3 bug fixes and code cleanup throughout - chromosomecounts now takes builder as well, cleaning up a lot of code throughout the codebase.	1	-1	 848[0] commit[0] 7d09c0064b29ae0b502fbc4b76f505e0f5a3c4a3[0] bug[0] fixes[0] and[0] code[0] cleanup[0] throughout[0] chromosomecounts[0] now[0] takes[0] builder[0] as[0] well[0] cleaning[0] up[0] a[0] lot[0] of[0] code[0] throughout[0] the[0] codebase[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
851 commit b7b57ef39a313ca2c743a96f92d5951b8e2b390a updating md5 to reflect canonical ordering of calculation -- we should no longer have md5s changing because of hashmaps changing their sort order on us -- added genotypelikelihoodsunittests -- refactored exactafcaclculation to put the pl -  qual calculation in the genotypelikelihoods class to avoid the code copy. 	851 commit b7b57ef39a313ca2c743a96f92d5951b8e2b390a updating md5 to reflect canonical ordering of calculation - we should no longer have md5s changing because of hashmaps changing their sort order on us - added genotypelikelihoodsunittests - refactored exactafcaclculation to put the pl -  qual calculation in the genotypelikelihoods class to avoid the code copy.	1	-2	 851[0] commit[0] b7b57ef39a313ca2c743a96f92d5951b8e2b390a[0] updating[0] md5[0] to[0] reflect[0] canonical[0] ordering[0] of[0] calculation[0] we[0] should[0] no[0] longer[0] have[0] md5s[0] changing[0] because[0] of[0] hashmaps[0] changing[0] their[0] sort[0] order[0] on[0] us[0] added[0] genotypelikelihoodsunittests[0] refactored[0] exactafcaclculation[0] to[0] put[0] the[0] pl[0] qual[0] calculation[0] in[0] the[0] genotypelikelihoods[0] class[0] to[0] avoid[-1] the[0] code[0] copy[0] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
1093 commit 389380a590e7ec98c8736be99d4135f5b5e50c32 reducereads ref bases are now output as ' ' to save space restructured the sliding window framework to manipulate a wrapped version of the samrecord that contains information about the reference. 	1093 commit 389380a590e7ec98c8736be99d4135f5b5e50c32 reducereads ref bases are now output as ' ' to save space restructured the sliding window framework to manipulate a wrapped version of the samrecord that contains information about the reference.	2	-2	 1093[0] commit[0] 389380a590e7ec98c8736be99d4135f5b5e50c32[0] reducereads[0] ref[0] bases[0] are[0] now[0] output[0] as[0] '[0] '[0] to[0] save[1] space[0] restructured[0] the[0] sliding[0] window[0] framework[0] to[0] manipulate[-1] a[0] wrapped[0] version[0] of[0] the[0] samrecord[0] that[0] contains[0] information[0] about[0] the[0] reference[0] [[Sentence=-2,2=word max, 1-5]][[[2,-2 max of sentences]]]
1452 commit fa0efbc4ca9b304e6e67326912e65263a996c56a refactoring of pairhmm to support reduced reads 	1452 commit fa0efbc4ca9b304e6e67326912e65263a996c56a refactoring of pairhm to support reduced reads	1	-1	 1452[0] commit[0] fa0efbc4ca9b304e6e67326912e65263a996c56a[0] refactoring[0] of[0] pairhmm/pairhm[0] to[0] support[0] reduced[0] reads[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
1459 commit 9afccd11b1b52bbf37c639e7944f7d1b12ba0a20 minor refactoring: add ability to mathutils.normalizefromlog10 to not go to linear domain but just substract max value from log values and return. use this function in snp and indel gl computation. 	1459 commit 9afccd11b1b52bbf37c639e7944f7d1b12ba0a20 minor refactoring: add ability to mathutils.<br>normalizefromlog10 to not go to linear domain but just substract max value from log values and return.<br> use this function in snp and indel gl computation.	2	-1	 1459[0] commit[0] 9afccd11b1b52bbf37c639e7944f7d1b12ba0a20[0] minor[0] refactoring[0] add[0] ability[0] to[0] mathutils[0] [[Sentence=-1,1=word max, 1-5]] normalizefromlog10[0] to[0] not[0] go[0] to[0] linear[0] domain[0] but[0] just[0] substract[0] max[0] value[0] from[0] log[0] values[1] and[0] return[0] [[Sentence=-1,2=word max, 1-5]] use[0] this[0] function[0] in[0] snp[0] and[0] indel[0] gl[0] computation[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
2206 commit e36994e36bd9028601f75dff4939809fe8747c76 refactored a featuremanager class from rmdtrackbuilder new class handles (vastly more cleanly) the db of tribble codecs, features, and names for use throughout the gatk. added selfscopingfeaturecodec interface that allows a featurecodec to examine a file and determine if the file can be parsed. this is the first step towards allowing the gatk to dynamically determine the type of a rodbinding. 	2206 commit e36994e36bd9028601f75dff4939809fe8747c76 refactored a featuremanager class from rmdtrackbuilder new class handles (vastly more cleanly) the db of tribble codecs, features, and names for use throughout the gatk.<br> added selfscopingfeaturecodec interface that allows a featurecodec to examine a file and determine if the file can be parsed.<br> this is the first step towards allowing the gatk to dynamically determine the type of a rodbinding.	1	-1	 2206[0] commit[0] e36994e36bd9028601f75dff4939809fe8747c76[0] refactored[0] a[0] featuremanager[0] class[0] from[0] rmdtrackbuilder[0] new[0] class[0] handles[0] vastly[0] more[0] cleanly[0] the[0] db[0] of[0] tribble[0] codecs[0] features[0] and[0] names[0] for[0] use[0] throughout[0] the[0] gatk[0] [[Sentence=-1,1=word max, 1-5]] added[0] selfscopingfeaturecodec[0] interface[0] that[0] allows[0] a[0] featurecodec[0] to[0] examine[0] a[0] file[0] and[0] determine[0] if[0] the[0] file[0] can[0] be[0] parsed[0] [[Sentence=-1,1=word max, 1-5]] this[0] is[0] the[0] first[0] step[0] towards[0] allowing[0] the[0] gatk[0] to[0] dynamically[0] determine[0] the[0] type[0] of[0] a[0] rodbinding[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
2432 commit 7420ed098e722610dbf9dcac00320a30ca1ba073 semi-working version of extradocs tag in annotation to refer to one capability being accessible in another required a significant refactoring of the gatkdoclet, which now has a unified place where the classdoc, class, annotation, and handler are all stored together. 	2432 commit 7420ed098e722610dbf9dcac00320a30ca1ba073 semi-working version of extradocs tag in annotation to refer to one capability being accessible in another required a significant refactoring of the gatkdoclet, which now has a unified place where the classdoc, class, annotation, and handler are all stored together.	1	-1	 2432[0] commit[0] 7420ed098e722610dbf9dcac00320a30ca1ba073[0] semi[0] working[0] version[0] of[0] extradocs[0] tag[0] in[0] annotation[0] to[0] refer[0] to[0] one[0] capability[0] being[0] accessible[0] in[0] another[0] required[0] a[0] significant[0] refactoring[0] of[0] the[0] gatkdoclet[0] which[0] now[0] has[0] a[0] unified[0] place[0] where[0] the[0] classdoc[0] class[0] annotation[0] and[0] handler[0] are[0] all[0] stored[0] together[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3645 commit 8ca3390ee06c33febbf2e641fb6bf6f73f32e5a3 low level plumbing work required to have a context dependent error model with the new indel probabilistic alignment model. this just adds an extra input argument and does some refactoring so that when an actual model is ready it will be easy to plug in. 	3645 commit 8ca3390ee06c33febbf2e641fb6bf6f73f32e5a3 low level plumbing work required to have a context dependent error model with the new indel probabilistic alignment model.<br> this just adds an extra input argument and does some refactoring so that when an actual model is ready it will be easy to plug in.	1	-2	 3645[0] commit[0] 8ca3390ee06c33febbf2e641fb6bf6f73f32e5a3[0] low[-1] level[0] plumbing[0] work[0] required[0] to[0] have[0] a[0] context[0] dependent[-1] error[0] model[0] with[0] the[0] new[0] indel[0] probabilistic[0] alignment[0] model[0] [[Sentence=-2,1=word max, 1-5]] this[0] just[0] adds[0] an[0] extra[0] input[0] argument[-1] and[0] does[0] some[0] refactoring[0] so[0] that[0] when[0] an[0] actual[0] model[0] is[0] ready[0] it[0] will[0] be[0] easy[0] to[0] plug[0] in[0] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
4268 commit 16e1bbd380de4b82859016d311c31d10c4b686a5 hidden command line option to control baq gap open penalty for testing by me and eric. validatebaqwalker has misc. useful improvements. printreads now adds baq tags on output, if requested. baq has generally useful improvements. refactor code to make it easier for baqunittest to run. minbasequality enforced on output, as well as input now. added baqunittest that checks that the baq calculation is performing as expected. still needs to be expanded significantly. 	4268 commit 16e1bbd380de4b82859016d311c31d10c4b686a5 hidden command line option to control baq gap open penalty for testing by me and eric.<br> validatebaqwalker has misc.<br> useful improvements.<br> printreads now adds baq tags on output, if requested.<br> baq has generally useful improvements.<br> refactor code to make it easier for baqunittest to run.<br> minbasequality enforced on output, as well as input now.<br> added baqunittest that checks that the baq calculation is performing as expected.<br> still needs to be expanded significantly.	2	-2	 4268[0] commit[0] 16e1bbd380de4b82859016d311c31d10c4b686a5[0] hidden[0] command[0] line[0] option[0] to[0] control[0] baq[0] gap[0] open[0] penalty[0] for[0] testing[0] by[0] me[0] and[0] eric[0] [[Sentence=-1,1=word max, 1-5]] validatebaqwalker[0] has[0] misc[0] [[Sentence=-1,1=word max, 1-5]] useful[1] improvements[1] [[Sentence=-1,2=word max, 1-5]] printreads[0] now[0] adds[0] baq[0] tags[0] on[0] output[0] if[0] requested[0] [[Sentence=-1,1=word max, 1-5]] baq[0] has[0] generally[0] useful[1] improvements[1] [[Sentence=-1,2=word max, 1-5]] refactor[0] code[0] to[0] make[0] it[0] easier[0] for[0] baqunittest[0] to[0] run[0] [[Sentence=-1,1=word max, 1-5]] minbasequality[0] enforced[-1] on[0] output[0] as[0] well[0] as[0] input[0] now[0] [[Sentence=-2,1=word max, 1-5]] added[0] baqunittest[0] that[0] checks[0] that[0] the[0] baq[0] calculation[0] is[0] performing[0] as[0] expected[0] [[Sentence=-1,1=word max, 1-5]] still[0] needs[0] to[0] be[0] expanded[0] significantly[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
4328 commit 102c8b1f596bb4266f1f5557423e832c1361d597 large refactoring of the ugv2 engine so that it is now truly separated into 2 distict phases: gl calculation and af calculation, where each can be done independently. this is not yet enabled in ugv2 itself though because i need to work out one last issue or two. tested on 1mb of 1000g aug allpops low-pass and results are identical as before. also, making bq capping by mq mandatory. 	4328 commit 102c8b1f596bb4266f1f557423e832c1361d597 large refactoring of the ugv2 engine so that it is now truly separated into 2 distict phases: gl calculation and af calculation, where each can be done independently.<br> this is not yet enabled in ugv2 itself though because i need to work out one last issue or two.<br> tested on 1mb of 100g aug allpops low-pass and results are identical as before.<br> also, making bq capping by mq mandatory.	2	-2	 4328[0] commit[0] 102c8b1f596bb4266f1f5557423e832c1361d597/102c8b1f596bb4266f1f557423e832c1361d597[0] large[0] refactoring[0] of[0] the[0] ugv2[0] engine[0] so[0] that[0] it[0] is[0] now[0] truly[1] separated[0] into[0] 2[0] distict[0] phases[0] gl[0] calculation[0] and[0] af[0] calculation[0] where[0] each[0] can[0] be[0] done[0] independently[0] [[Sentence=-1,2=word max, 1-5]] this[0] is[0] not[0] yet[0] enabled[0] in[0] ugv2[0] itself[0] though[0] because[0] i[0] need[0] to[0] work[0] out[0] one[0] last[0] issue[0] or[0] two[0] [[Sentence=-1,1=word max, 1-5]] tested[0] on[0] 1mb[0] of[0] 1000g/100g[0] aug[0] allpops[0] low[-1] pass[0] and[0] results[0] are[0] identical[0] as[0] before[0] [[Sentence=-2,1=word max, 1-5]] also[0] making[0] bq[0] capping[0] by[0] mq[0] mandatory[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
4388 commit ef2f6d90d20e8d261e88f7a78f204a185232619f vqsr now operates on lod scores in the info field directly, and doesn't adjust the qual field. new format for tranches file uses lod score. old file format no longer supported. log10sumlog10() function, a very useful utility in mathutils. no more extendedpileupelement! robust math calculations in gmm so that no infinities are generated! haplotypescore refactored to enable use of filtered context. not yet enabled... inferredcontext getdouble and getinteger arguments now parse values from strings if necessary 	4388 commit ef2f6d90d20e8d261e88f7a78f204a185232619f vqsr now operates on lod scores in the info field directly, and doesn't adjust the qual field.<br> new format for tranches file uses lod score.<br> old file format no longer supported.<br> log10sumlog10( function, a very useful utility in mathutils.<br> no more extendedpileupelement!<br> robust math calculations in gm so that no infinities are generated!<br> haplotypescore refactored to enable use of filtered context.<br> not yet enabled.<br> inferredcontext getdouble and getinteger arguments now parse values from strings if necessary	3	-2	 4388[0] commit[0] ef2f6d90d20e8d261e88f7a78f204a185232619f[0] vqsr[0] now[0] operates[0] on[0] lod[0] scores[0] in[0] the[0] info[0] field[0] directly[0] and[0] doesn't[0] adjust[0] the[0] qual[0] field[0] [[Sentence=-1,1=word max, 1-5]] new[0] format[0] for[0] tranches[0] file[0] uses[0] lod[0] score[0] [[Sentence=-1,1=word max, 1-5]] old[0] file[0] format[0] no[0] longer[0] supported[1] [[Sentence=-1,2=word max, 1-5]] log10sumlog10[0] function[0] a[0] very[0] useful[1][1 LastWordBoosterStrength] utility[0] in[0] mathutils[0] [[Sentence=-1,3=word max, 1-5]] no[0] more[0] extendedpileupelement[0] [[Sentence=-1,1=word max, 1-5]] robust[0] math[0] calculations[0] in[0] gmm/gm[0] so[0] that[0] no[0] infinities[0] are[0] generated[0] [[Sentence=-1,1=word max, 1-5]] haplotypescore[0] refactored[0] to[0] enable[0] use[0] of[0] filtered[0] context[0] [[Sentence=-1,1=word max, 1-5]] not[0] yet[0] enabled[0] [[Sentence=-1,1=word max, 1-5]] inferredcontext[0] getdouble[0] and[0] getinteger[0] arguments[-1] now[0] parse[0] values[1] from[0] strings[0] if[0] necessary[0] [[Sentence=-2,2=word max, 1-5]][[[3,-2 max of sentences]]]
4729 commit 4ed9f437e963ff5c93edf3dd2800c6b6d4ffbdee sliced the gae in half like a gordian knot to avoid the constant merge conflicts. the gae half has all the walker specific code. the new "abstract" gae has the rest of the logic. more refactoring to come, with the end goal of having a tool that other java analysis programs (queue, etc.) can use to read in genomic data. 	4729 commit 4ed9f437e963ff5c93edf3dd2800c6b6d4ffbdee sliced the gae in half like a gordian knot to avoid the constant merge conflicts.<br> the gae half has all the walker specific code.<br> the new "abstract" gae has the rest of the logic.<br> more refactoring to come, with the end goal of having a tool that other java analysis programs (queue, etc.<br> can use to read in genomic data.	1	-2	 4729[0] commit[0] 4ed9f437e963ff5c93edf3dd2800c6b6d4ffbdee[0] sliced[0] the[0] gae[0] in[0] half[0] like[0] a[0] gordian[0] knot[0] to[0] avoid[-1] the[0] constant[0] merge[0] conflicts[0] [[Sentence=-2,1=word max, 1-5]] the[0] gae[0] half[0] has[0] all[0] the[0] walker[0] specific[0] code[0] [[Sentence=-1,1=word max, 1-5]] the[0] new[0] abstract[0] gae[0] has[0] the[0] rest[0] of[0] the[0] logic[0] [[Sentence=-1,1=word max, 1-5]] more[0] refactoring[0] to[0] come[0] with[0] the[0] end[0] goal[0] of[0] having[0] a[0] tool[0] that[0] other[0] java[0] analysis[0] programs[0] queue[0] etc[0] [[Sentence=-1,1=word max, 1-5]] can[0] use[0] to[0] read[0] in[0] genomic[0] data[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
5230 commit 693672a46132235590ccf482a5c418b03dc7ba21 refactoring the vcf writer code; now no longer uses vcfrecord or any of its related classes, instead writing directly to the writer. integration tests pass, but some are actually broken and will be fixed this week. 	5230 commit 693672a46132235590ccf482a5c418b03dc7ba21 refactoring the vcf writer code; now no longer uses vcfrecord or any of its related classes, instead writing directly to the writer.<br> integration tests pass, but some are actually broken and will be fixed this week.	1	-2	 5230[0] commit[0] 693672a46132235590ccf482a5c418b03dc7ba21[0] refactoring[0] the[0] vcf[0] writer[0] code[0] now[0] no[0] longer[0] uses[0] vcfrecord[0] or[0] any[0] of[0] its[0] related[0] classes[0] instead[0] writing[0] directly[0] to[0] the[0] writer[0] [[Sentence=-1,1=word max, 1-5]] integration[0] tests[0] pass[0] but[0] some[0] are[0] actually[0] broken[-1] and[0] will[0] be[0] fixed[0] this[0] week[0] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
5675 commit e016491a3db9b6c71e5537b68152c9648d9fee50 major refactoring of depth of coverage to allow for more extensible partitions of data (now can do read group, sample, and library; in any combination; adding more is fairly easy). changed the by-gene code to use clones of stats objects, rather than munging the interval docs. (fix for avinash. who, hilariously, thinks my name is carl.) added sorting methods to ensure static ordering of header and body fields. 	5675 commit e016491a3db9b6c71e5537b68152c9648d9fee50 major refactoring of depth of coverage to allow for more extensible partitions of data (now can do read group, sample, and library; in any combination; adding more is fairly easy)<br> changed the by-gene code to use clones of stats objects, rather than munging the interval docs.<br> (fix for avinash.<br> who, hilariously, thinks my name is carl.<br> added sorting methods to ensure static ordering of header and body fields.	3	-2	 5675[0] commit[0] e016491a3db9b6c71e5537b68152c9648d9fee50[0] major[0] refactoring[0] of[0] depth[0] of[0] coverage[0] to[0] allow[0] for[0] more[0] extensible[0] partitions[-1] of[0] data[0] now[0] can[0] do[0] read[0] group[0] sample[0] and[0] library[0] in[0] any[0] combination[0] adding[0] more[0] is[0] fairly[0] easy[0] [[Sentence=-2,1=word max, 1-5]] changed[0] the[0] by[0] gene[0] code[0] to[0] use[0] clones[0] of[0] stats[0] objects[0] rather[0] than[0] munging[0] the[0] interval[0] docs[0] [[Sentence=-1,1=word max, 1-5]] fix[0] for[0] avinash[0] [[Sentence=-1,1=word max, 1-5]] who[0] hilariously[2] thinks[0] my[0] name[0] is[0] carl[0] [[Sentence=-1,3=word max, 1-5]] added[0] sorting[0] methods[0] to[0] ensure[0] static[0] ordering[0] of[0] header[0] and[0] body[0] fields[0] [[Sentence=-1,1=word max, 1-5]][[[3,-2 max of sentences]]]
5680 commit 35b4bba35e685b9ef3d76a89598905aa33071f3f refactored so it could be used for knowngene and ccds as well as refgene 	5680 commit 35b4bba35e685b9ef3d76a89598905a33071f3f refactored so it could be used for knowngene and ccds as well as refgene	1	-1	 5680[0] commit[0] 35b4bba35e685b9ef3d76a89598905aa33071f3f/35b4bba35e685b9ef3d76a89598905a33071f3f[0] refactored[0] so[0] it[0] could[0] be[0] used[0] for[0] knowngene[0] and[0] ccds[0] as[0] well[0] as[0] refgene[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5787 commit 5dce16a8f1231ca2a7872c1efdee083bb85dc76c better genotype concordance module. code refactoring for clarity (please see below/after for educational purposes). now reports variant sensitivity, concordance, and genotype error rate by default. also aggregates this data across all samples, so you get a per sample and overall stats for each of these in the allsamples row. 	5787 commit 5dce16a8f1231ca2a7872c1efdee083bb85dc76c better genotype concordance module.<br> code refactoring for clarity (please see below/after for educational purposes)<br> now reports variant sensitivity, concordance, and genotype error rate by default.<br> also aggregates this data across all samples, so you get a per sample and overall stats for each of these in the allsamples row.	2	-2	 5787[0] commit[0] 5dce16a8f1231ca2a7872c1efdee083bb85dc76c[0] better[0] genotype[0] concordance[0] module[0] [[Sentence=-1,1=word max, 1-5]] code[0] refactoring[0] for[0] clarity[0] please[1] see[0] below/after[0] for[0] educational[0] purposes[0] [[Sentence=-1,2=word max, 1-5]] now[0] reports[0] variant[0] sensitivity[0] concordance[0] and[0] genotype[0] error[0] rate[0] by[0] default[-1] [[Sentence=-2,1=word max, 1-5]] also[0] aggregates[0] this[0] data[0] across[0] all[0] samples[0] so[0] you[0] get[0] a[0] per[0] sample[0] and[0] overall[0] stats[0] for[0] each[0] of[0] these[0] in[0] the[0] allsamples[0] row[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
5841 commit 01e6492ba9ae932c9ee7e34a98d232b984d57611 updated to work correctly with extended pileups. clogged and uses some dirty tricks; pileups/extended pileups need to be redesigned someday 	5841 commit 01e6492ba9ae932c9ee7e34a98d232b984d57611 updated to work correctly with extended pileups.<br> clogged and uses some dirty tricks; pileups/extended pileups need to be redesigned someday	1	-2	 5841[0] commit[0] 01e6492ba9ae932c9ee7e34a98d232b984d57611[0] updated[0] to[0] work[0] correctly[0] with[0] extended[0] pileups[0] [[Sentence=-1,1=word max, 1-5]] clogged[0] and[0] uses[0] some[0] dirty[-1][--1 LastWordBoosterStrength] tricks[-1] pileups/extended[0] pileups[0] need[0] to[0] be[0] redesigned[0] someday[0] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
6009 commit 7b17bcd0af2c4609a5dd3e83b007d3f383cf7ae9 refactoring a few useful routines for detecting mendelian violations 	6009 commit 7b17bcd0af2c4609a5dd3e83b007d3f383cf7ae9 refactoring a few useful routines for detecting mendelian violations	2	-1	 6009[0] commit[0] 7b17bcd0af2c4609a5dd3e83b007d3f383cf7ae9[0] refactoring[0] a[0] few[0] useful[1] routines[0] for[0] detecting[0] mendelian[0] violations[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
6141 commit 7578678f9933bd82fdf5996fec16052929445078 refactored to provide a sum of mismatch quality scores capability as well (used by cancer) 	6141 commit 7578678f9933bd82fdf5996fec16052929445078 refactored to provide a sum of mismatch quality scores capability as well (used by cancer)	1	-4	 6141[0] commit[0] 7578678f9933bd82fdf5996fec16052929445078[0] refactored[0] to[0] provide[0] a[0] sum[0] of[0] mismatch[0] quality[0] scores[0] capability[0] as[0] well[0] used[0] by[0] cancer[-3] [[Sentence=-4,1=word max, 1-5]][[[1,-4 max of sentences]]]
6158 commit 1017a38f387b0b6ab114ff231692bb38a35bd411 initial refactoring of read traversal to make it easier to drop in intervalled reads traversal. 	6158 commit 1017a38f387b0b6ab114ff231692bb38a35bd411 initial refactoring of read traversal to make it easier to drop in intervalled reads traversal.	1	-2	 6158[0] commit[0] 1017a38f387b0b6ab114ff231692bb38a35bd411[0] initial[0] refactoring[0] of[0] read[0] traversal[0] to[0] make[0] it[0] easier[0] to[0] drop[-1] in[0] intervalled[0] reads[0] traversal[0] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
6773 commit c0528cd88e18851c44dbc693bbf49f066491d5a7 updated the callsetconcordance classes to use new vcf variation code... and uncovered a whole bunch of vcf bugs in the process. i'm not convinced that i got them all, so i'll unit test like crazy when the refactoring is done. 	6773 commit c0528cd88e18851c44dbc693bbf49f066491d5a7 updated the callsetconcordance classes to use new vcf variation code.<br> and uncovered a whole bunch of vcf bugs in the process.<br> i'm not convinced that i got them all, so i'll unit test like crazy when the refactoring is done.	1	-2	 6773[0] commit[0] c0528cd88e18851c44dbc693bbf49f066491d5a7[0] updated[0] the[0] callsetconcordance[0] classes[0] to[0] use[0] new[0] vcf[0] variation[0] code[0] [[Sentence=-1,1=word max, 1-5]] and[0] uncovered[0] a[0] whole[0] bunch[0] of[0] vcf[0] bugs[0] in[0] the[0] process[0] [[Sentence=-1,1=word max, 1-5]] i'm[0] not[0] convinced[0] that[0] i[0] got[0] them[0] all[0] so[0] i'll[0] unit[0] test[0] like[0] crazy[-1] when[0] the[0] refactoring[0] is[0] done[0] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
6776 commit 08f2214f1463c4efbc2be3439d7ad5f95cef9445 stage 1 of massive variation/genotype refactoring. this stage consists only of the code originating in the genotyper and flowing through to the genotype writers. i haven't finished refactoring the writers and haven't even touched the readers at all. the major changes here are that 1. variations which are backedbygenotypes are now correctly associated with those genotypes 2. genotypes which have an associated variation can actually be associated with it (and then return it when tovariation() is called). the only integration tests which need to be updated are msg-related (because the refactoring now made it easy for me to prevent msg from emitting tri-allelic sites). 	6776 commit 08f2214f1463c4efbc2be3439d7ad5f95cef9445 stage 1 of massive variation/genotype refactoring.<br> this stage consists only of the code originating in the genotyper and flowing through to the genotype writers.<br> i haven't finished refactoring the writers and haven't even touched the readers at all.<br> the major changes here are that 1.<br> variations which are backedbygenotypes are now correctly associated with those genotypes 2.<br> genotypes which have an associated variation can actually be associated with it (and then return it when tovariation( is called)<br> the only integration tests which need to be updated are msg-related (because the refactoring now made it easy for me to prevent msg from emitting tri-allelic sites)	1	-1	 6776[0] commit[0] 08f2214f1463c4efbc2be3439d7ad5f95cef9445[0] stage[0] 1[0] of[0] massive[0] variation/genotype[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]] this[0] stage[0] consists[0] only[0] of[0] the[0] code[0] originating[0] in[0] the[0] genotyper[0] and[0] flowing[0] through[0] to[0] the[0] genotype[0] writers[0] [[Sentence=-1,1=word max, 1-5]] i[0] haven't[0] finished[0] refactoring[0] the[0] writers[0] and[0] haven't[0] even[0] touched[0] the[0] readers[0] at[0] all[0] [[Sentence=-1,1=word max, 1-5]] the[0] major[0] changes[0] here[0] are[0] that[0] 1[0] [[Sentence=-1,1=word max, 1-5]] variations[0] which[0] are[0] backedbygenotypes[0] are[0] now[0] correctly[0] associated[0] with[0] those[0] genotypes[0] 2[0] [[Sentence=-1,1=word max, 1-5]] genotypes[0] which[0] have[0] an[0] associated[0] variation[0] can[0] actually[0] be[0] associated[0] with[0] it[0] and[0] then[0] return[0] it[0] when[0] tovariation[0] is[0] called[0] [[Sentence=-1,1=word max, 1-5]] the[0] only[0] integration[0] tests[0] which[0] need[0] to[0] be[0] updated[0] are[0] msg[0] related[0] because[0] the[0] refactoring[0] now[0] made[0] it[0] easy[0] for[0] me[0] to[0] prevent[0] msg[0] from[0] emitting[0] tri[0] allelic[0] sites[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6920 commit 70059a0fc95f5fa707d0ac76c319bf562ac9511f refactored joint estimation model to allow subclasses to overload pofd calculation over all frequencies. pooled model now takes only 20% of time that it used to. added integration test for pooled model and updated other joint estimation tests to be more comprehensive now that they are faster. 	6920 commit 70059a0fc95f5fa707d0ac76c319bf562ac9511f refactored joint estimation model to allow subclasses to overload pofd calculation over all frequencies.<br> pooled model now takes only 20% of time that it used to.<br> added integration test for pooled model and updated other joint estimation tests to be more comprehensive now that they are faster.	1	-1	 6920[0] commit[0] 70059a0fc95f5fa707d0ac76c319bf562ac9511f[0] refactored[0] joint[0] estimation[0] model[0] to[0] allow[0] subclasses[0] to[0] overload[0] pofd[0] calculation[0] over[0] all[0] frequencies[0] [[Sentence=-1,1=word max, 1-5]] pooled[0] model[0] now[0] takes[0] only[0] 20%[0] of[0] time[0] that[0] it[0] used[0] to[0] [[Sentence=-1,1=word max, 1-5]] added[0] integration[0] test[0] for[0] pooled[0] model[0] and[0] updated[0] other[0] joint[0] estimation[0] tests[0] to[0] be[0] more[0] comprehensive[0] now[0] that[0] they[0] are[0] faster[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6935 commit 98f921fe24f87e4987bf67195cc5917d44437417 the refactored countcovariates now hashes the read object into a hashmap which holds all the properties the covariates pull out of the read over and over again such as read group string, bases string and its complement string, quality scores, etc. this results in a big speed up. countcovariatesrefactored is now just slightly slower than countcovariates (perhaps 1.07x according to my latest time trial). thanks to alec for suggesting identityhashmap. cyclecovariate now warns the user that is is defaulting to the solexa definition of cycle when the platform string pulled out of the read is unrecognized instead of halting with an exception. 	6935 commit 98f921fe24f87e4987bf67195cc5917d4437417 the refactored countcovariates now hashes the read object into a hashmap which holds all the properties the covariates pull out of the read over and over again such as read group string, bases string and its complement string, quality scores, etc.<br> this results in a big speed up.<br> countcovariatesrefactored is now just slightly slower than countcovariates (perhaps 1.07x according to my latest time trial)<br> thanks to alec for suggesting identityhashmap.<br> cyclecovariate now warns the user that is is defaulting to the solexa definition of cycle when the platform string pulled out of the read is unrecognized instead of halting with an exception.	2	-1	 6935[0] commit[0] 98f921fe24f87e4987bf67195cc5917d44437417/98f921fe24f87e4987bf67195cc5917d4437417[0] the[0] refactored[0] countcovariates[0] now[0] hashes[0] the[0] read[0] object[0] into[0] a[0] hashmap[0] which[0] holds[0] all[0] the[0] properties[0] the[0] covariates[0] pull[0] out[0] of[0] the[0] read[0] over[0] and[0] over[0] again[0] such[0] as[0] read[0] group[0] string[0] bases[0] string[0] and[0] its[0] complement[0] string[0] quality[0] scores[0] etc[0] [[Sentence=-1,1=word max, 1-5]] this[0] results[0] in[0] a[0] big[0] speed[0] up[0] [[Sentence=-1,1=word max, 1-5]] countcovariatesrefactored[0] is[0] now[0] just[0] slightly[0] slower[0] than[0] countcovariates[0] perhaps[0] 1[0] .07x[0] according[0] to[0] my[0] latest[0] time[0] trial[0] [[Sentence=-1,1=word max, 1-5]] thanks[1] to[0] alec[0] for[0] suggesting[0] identityhashmap[0] [[Sentence=-1,2=word max, 1-5]] cyclecovariate[0] now[0] warns[0] the[0] user[0] that[0] is[0] is[0] defaulting[0] to[0] the[0] solexa[0] definition[0] of[0] cycle[0] when[0] the[0] platform[0] string[0] pulled[0] out[0] of[0] the[0] read[0] is[0] unrecognized[0] instead[0] of[0] halting[0] with[0] an[0] exception[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
6984 commit a048f5cdf118e260096def612f8fe3fa4ef35a18 -refactored jointestimation code so that pooled calling will work -use phred-scale for fisher strand test -use only 2n allele frequency estimation points 	6984 commit a048f5cdf118e260096def612f8fe3fa4ef35a18 -refactored jointestimation code so that pooled calling will work -use phred-scale for fisher strand test -use only 2n allele frequency estimation points	1	-1	 6984[0] commit[0] a048f5cdf118e260096def612f8fe3fa4ef35a18[0] refactored[0] jointestimation[0] code[0] so[0] that[0] pooled[0] calling[0] will[0] work[0] use[0] phred[0] scale[0] for[0] fisher[0] strand[0] test[0] use[0] only[0] 2n[0] allele[0] frequency[0] estimation[0] points[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7065 commit d549347f252c64eed3da575c339b56de50427afc refactored genotypelikelihoods to use an underlying 4-base model. it needs to be modified a bit and then hooked up to a pooled model, but that is now possible. at this point, there is no difference to the unified genotyper. 	7065 commit d549347f252c64eed3da575c339b56de50427afc refactored genotypelikelihoods to use an underlying 4-base model.<br> it needs to be modified a bit and then hooked up to a pooled model, but that is now possible.<br> at this point, there is no difference to the unified genotyper.	1	-1	 7065[0] commit[0] d549347f252c64eed3da575c339b56de50427afc[0] refactored[0] genotypelikelihoods[0] to[0] use[0] an[0] underlying[0] 4[0] base[0] model[0] [[Sentence=-1,1=word max, 1-5]] it[0] needs[0] to[0] be[0] modified[0] a[0] bit[0] and[0] then[0] hooked[0] up[0] to[0] a[0] pooled[0] model[0] but[0] that[0] is[0] now[0] possible[0] [[Sentence=-1,1=word max, 1-5]] at[0] this[0] point[0] there[0] is[0] no[0] difference[0] to[0] the[0] unified[0] genotyper[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7296 commit d3b1732cca338ce032ce9e5818cfe1d28f509d68 start of refactoring effort. make construction of alignment object simpler. 	7296 commit d3b1732cca338ce032ce9e5818cfe1d28f509d68 start of refactoring effort.<br> make construction of alignment object simpler.	1	-1	 7296[0] commit[0] d3b1732cca338ce032ce9e5818cfe1d28f509d68[0] start[0] of[0] refactoring[0] effort[0] [[Sentence=-1,1=word max, 1-5]] make[0] construction[0] of[0] alignment[0] object[0] simpler[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7808 commit a1d33f8791a522ae58e45e7cece5128ecb2a7e8d -added walker to dump strand test results to file -refactored strand filter to handle calls from the walker 	7808 commit a1d33f8791a522ae58e45e7cece5128ecb2a7e8d -added walker to dump strand test results to file -refactored strand filter to handle calls from the walker	1	-1	 7808[0] commit[0] a1d33f8791a522ae58e45e7cece5128ecb2a7e8d[0] added[0] walker[0] to[0] dump[0] strand[0] test[0] results[0] to[0] file[0] refactored[0] strand[0] filter[0] to[0] handle[0] calls[0] from[0] the[0] walker[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7888 commit c2e5a68aaf5f86125b3f3c70c64c616365fc8a44 output format changed in --verbose --somatic mode: now also prints the  #reads with indels / coverage  for normal samples, rather than only for the tumor; also, code cleaned up a little 	788 commit c2e5a68af5f86125b3f3c70c64c616365fc8a44 output format changed in -verbose -somatic mode: now also prints the  #reads with indels / coverage  for normal samples, rather than only for the tumor; also, code cleaned up a little	1	-1	 7888/788[0] commit[0] c2e5a68aaf5f86125b3f3c70c64c616365fc8a44/c2e5a68af5f86125b3f3c70c64c616365fc8a44[0] output[0] format[0] changed[0] in[0] verbose[0] somatic[0] mode[0] now[0] also[0] prints[0] the[0] #reads[0] with[0] indels[0] /[0] coverage[0] for[0] normal[0] samples[0] rather[0] than[0] only[0] for[0] the[0] tumor[0] also[0] code[0] cleaned[0] up[0] a[0] little[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8029 commit 9eeb5f79d42cec0f2a2af587eab965c70fa62990 various refactoring to achieve hapmap and dbsnp awareness, the ability to set pop-gen and secondary base priors from the command-line, and general code cleanup. 	8029 commit 9eeb5f79d42cec0f2a2af587eab965c70fa62990 various refactoring to achieve hapmap and dbsnp awareness, the ability to set pop-gen and secondary base priors from the command-line, and general code cleanup.	1	-1	 8029[0] commit[0] 9eeb5f79d42cec0f2a2af587eab965c70fa62990[0] various[0] refactoring[0] to[0] achieve[0] hapmap[0] and[0] dbsnp[0] awareness[0] the[0] ability[0] to[0] set[0] pop[0] gen[0] and[0] secondary[0] base[0] priors[0] from[0] the[0] command[0] line[0] and[0] general[0] code[0] cleanup[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8030 commit f2946fa3e8d047f28431f8a324b59689aea27729 various refactoring to achieve hapmap and dbsnp awareness, the ability to set pop-gen and secondary base priors from the command-line, and general code cleanup. 	8030 commit f2946fa3e8d047f28431f8a324b59689aea27729 various refactoring to achieve hapmap and dbsnp awareness, the ability to set pop-gen and secondary base priors from the command-line, and general code cleanup.	1	-1	 8030[0] commit[0] f2946fa3e8d047f28431f8a324b59689aea27729[0] various[0] refactoring[0] to[0] achieve[0] hapmap[0] and[0] dbsnp[0] awareness[0] the[0] ability[0] to[0] set[0] pop[0] gen[0] and[0] secondary[0] base[0] priors[0] from[0] the[0] command[0] line[0] and[0] general[0] code[0] cleanup[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8119 commit 819862e04e7475d06a01161cad83e3bda25672c8 major restructuring of generalized variant analysis framework. now trivally easy to add additional analyses. easy partitioning of all analyses by features, such as singleton status. now has transition/transversional bias, counting, dbsnp coverage, hwe violation, selecting of variants by presence/absense in dbs. also restructured the rod system to make it easier to add tracks. also, added the interval track -- if you provide an interval list, then the system autoatmically makese this available to you as a bound rod -- you can always find out where you are in the interval at every site. python scripts improved to handle more merging, etc, into population snps. 	8119 commit 819862e04e7475d06a01161cad83e3bda25672c8 major restructuring of generalized variant analysis framework.<br> now trivally easy to add additional analyses.<br> easy partitioning of all analyses by features, such as singleton status.<br> now has transition/transversional bias, counting, dbsnp coverage, hwe violation, selecting of variants by presence/absense in dbs.<br> also restructured the rod system to make it easier to add tracks.<br> also, added the interval track - if you provide an interval list, then the system autoatmically makese this available to you as a bound rod - you can always find out where you are in the interval at every site.<br> python scripts improved to handle more merging, etc, into population snps.	2	-2	 8119[0] commit[0] 819862e04e7475d06a01161cad83e3bda25672c8[0] major[0] restructuring[0] of[0] generalized[0] variant[0] analysis[0] framework[0] [[Sentence=-1,1=word max, 1-5]] now[0] trivally[0] easy[0] to[0] add[0] additional[0] analyses[0] [[Sentence=-1,1=word max, 1-5]] easy[0] partitioning[-1] of[0] all[0] analyses[0] by[0] features[0] such[0] as[0] singleton[0] status[0] [[Sentence=-2,1=word max, 1-5]] now[0] has[0] transition/transversional[0] bias[0] counting[0] dbsnp[0] coverage[0] hwe[0] violation[0] selecting[0] of[0] variants[0] by[0] presence/absense[0] in[0] dbs[0] [[Sentence=-1,1=word max, 1-5]] also[0] restructured[0] the[0] rod[0] system[0] to[0] make[0] it[0] easier[0] to[0] add[0] tracks[0] [[Sentence=-1,1=word max, 1-5]] also[0] added[0] the[0] interval[0] track[0] if[0] you[0] provide[0] an[0] interval[0] list[0] then[0] the[0] system[0] autoatmically[0] makese[0] this[0] available[0] to[0] you[0] as[0] a[0] bound[0] rod[0] you[0] can[0] always[0] find[0] out[0] where[0] you[0] are[0] in[0] the[0] interval[0] at[0] every[0] site[0] [[Sentence=-1,1=word max, 1-5]] python[0] scripts[0] improved[1] to[0] handle[0] more[0] merging[0] etc[0] into[0] population[0] snps[0] [[Sentence=-1,2=word max, 1-5]][[[2,-2 max of sentences]]]
8238 commit a9dfbfb30973e1a831997eee94cf655d8b782c58 internal changes and some refactoring. slightly different final report. now can take tracks that implement either genotype or genotypelist; takes an arg specifying what variants to look for (point - aka snp - or indel); takes an arg specifying whether default ref/ref call of one type (indel/point) should be implicitly assumed if another call (point/indel respectively) was made at the same position [this is probably most useful for indels and only (?) for sam pileups: if we have only point mutation call at a given position, it does mean that we do have coverage, and that there was no evidence whatsoever for an indel, so we have an implicit 'no-indel' call] 	8238 commit a9dfbfb30973e1a831997ee94cf655d8b782c58 internal changes and some refactoring.<br> slightly different final report.<br> now can take tracks that implement either genotype or genotypelist; takes an arg specifying what variants to look for (point - aka snp - or indel) takes an arg specifying whether default ref/ref call of one type (indel/point) should be implicitly assumed if another call (point/indel respectively) was made at the same position [this is probably most useful for indels and only (<br> for sam pileups: if we have only point mutation call at a given position, it does mean that we do have coverage, and that there was no evidence whatsoever for an indel, so we have an implicit 'no-indel' call]	3	-2	 8238[0] commit[0] a9dfbfb30973e1a831997eee94cf655d8b782c58/a9dfbfb30973e1a831997ee94cf655d8b782c58[0] internal[0] changes[0] and[0] some[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]] slightly[0] different[0] final[0] report[0] [[Sentence=-1,1=word max, 1-5]] now[0] can[0] take[0] tracks[0] that[0] implement[0] either[0] genotype[0] or[0] genotypelist[0] takes[0] an[0] arg[0] specifying[0] what[0] variants[0] to[0] look[0] for[0] point[0] aka[0] snp[0] or[0] indel[0] takes[0] an[0] arg[0] specifying[0] whether[0] default[-1] ref/ref[0] call[0] of[0] one[0] type[0] indel/point[0] should[0] be[0] implicitly[0] assumed[0] if[0] another[0] call[0] point/indel[0] respectively[2] was[0] made[0] at[0] the[0] same[0] position[0] [this[0] is[0] probably[0] most[0] useful[1] for[0] indels[0] and[0] only[0] [[Sentence=-2,3=word max, 1-5]] for[0] sam[0] pileups[0] if[0] we[0] have[0] only[0] point[0] mutation[0] call[0] at[0] a[0] given[0] position[0] it[0] does[0] mean[0] that[0] we[0] do[0] have[0] coverage[0] and[0] that[0] there[0] was[0] no[0] evidence[0] whatsoever[0] for[0] an[0] indel[0] so[0] we[0] have[0] an[0] implicit[0] 'no[0] indel'[0] call][0] [[Sentence=-1,1=word max, 1-5]][[[3,-2 max of sentences]]]
8284 commit e293d65edeea09e6f56b4e5c7244c2b7fb99555e refactored to allow the user to specify the range of cycles they wish to call. simply specify a single range (i.e. '0-75') or two ranges ('0-75,76-151'). this allows single and paired-end read processing to coexist happily. also implements annotation of an aligned bam file (which should hopefully fit in under two gigs now, but i'm waiting on a bug fix or a clarification from the picard team. 	8284 commit e293d65edeea09e6f56b4e5c7244c2b7fb9955e refactored to allow the user to specify the range of cycles they wish to call.<br> simply specify a single range (i.<br>e.<br> '0-75') or two ranges ('0-75,76-151')<br> this allows single and paired-end read processing to coexist happily.<br> also implements annotation of an aligned bam file (which should hopefully fit in under two gigs now, but i'm waiting on a bug fix or a clarification from the picard team.	3	-1	 8284[0] commit[0] e293d65edeea09e6f56b4e5c7244c2b7fb99555e/e293d65edeea09e6f56b4e5c7244c2b7fb9955e[0] refactored[0] to[0] allow[0] the[0] user[0] to[0] specify[0] the[0] range[0] of[0] cycles[0] they[0] wish[0] to[0] call[0] [[Sentence=-1,1=word max, 1-5]] simply[0] specify[0] a[0] single[0] range[0] i[0] [[Sentence=-1,1=word max, 1-5]] e[0] [[Sentence=-1,1=word max, 1-5]] '0[0] -75'[0] or[0] two[0] ranges[0] '0[0] -75[0] ,76[0] -151'[0] [[Sentence=-1,1=word max, 1-5]] this[0] allows[0] single[0] and[0] paired[0] end[0] read[0] processing[0] to[0] coexist[0] happily[2] [[Sentence=-1,3=word max, 1-5]] also[0] implements[0] annotation[0] of[0] an[0] aligned[0] bam[0] file[0] which[0] should[0] hopefully[0] fit[0] in[0] under[0] two[0] gigs[0] now[0] but[0] i'm[0] waiting[0] on[0] a[0] bug[0] fix[0] or[0] a[0] clarification[0] from[0] the[0] picard[0] team[0] [[Sentence=-1,1=word max, 1-5]][[[3,-1 max of sentences]]]
8839 commit 08ece8df79c8f23af2ed7a04f0e987692d23abb1 bug fixes and support for mutually exclusive options. still a bit rough, but will be easier to clean up after a walker refactoring. 	8839 commit 08ece8df79c8f23af2ed7a04f0e987692d23abb1 bug fixes and support for mutually exclusive options.<br> still a bit rough, but will be easier to clean up after a walker refactoring.	1	-2	 8839[0] commit[0] 08ece8df79c8f23af2ed7a04f0e987692d23abb1[0] bug[0] fixes[0] and[0] support[0] for[0] mutually[0] exclusive[0] options[0] [[Sentence=-1,1=word max, 1-5]] still[0] a[0] bit[0] rough[-1] but[0] will[0] be[0] easier[0] to[0] clean[0] up[0] after[0] a[0] walker[0] refactoring[0] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
8856 commit 30babbf5b9991c3ed4feca5368ce2c6b1f744563 restructured allelefrequencymetricswalker to correctly report hapmap concordance numbers for genotyping and added reporting for hapmap reference/variant calling. also, tiny bugfix in interval code. 	8856 commit 30babbf5b991c3ed4feca5368ce2c6b1f744563 restructured allelefrequencymetricswalker to correctly report hapmap concordance numbers for genotyping and added reporting for hapmap reference/variant calling.<br> also, tiny bugfix in interval code.	1	-1	 8856[0] commit[0] 30babbf5b9991c3ed4feca5368ce2c6b1f744563/30babbf5b991c3ed4feca5368ce2c6b1f744563[0] restructured[0] allelefrequencymetricswalker[0] to[0] correctly[0] report[0] hapmap[0] concordance[0] numbers[0] for[0] genotyping[0] and[0] added[0] reporting[0] for[0] hapmap[0] reference/variant[0] calling[0] [[Sentence=-1,1=word max, 1-5]] also[0] tiny[0] bugfix[0] in[0] interval[0] code[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8858 commit 919a86e8766cbaa7bc822e22aadce593c397ca48 cleaned up code for by interval traversals for jared. initialization code refactored and made clear. by loci and by loci by interval use the same underlying code now. everyone uses the same initialization code to set things up. it's a party in the traversalengine and everyone's invited... 	8858 commit 919a86e8766cba7bc822e22adce593c397ca48 cleaned up code for by interval traversals for jared.<br> initialization code refactored and made clear.<br> by loci and by loci by interval use the same underlying code now.<br> everyone uses the same initialization code to set things up.<br> it's a party in the traversalengine and everyone's invited.	2	-1	 8858[0] commit[0] 919a86e8766cbaa7bc822e22aadce593c397ca48/919a86e8766cba7bc822e22adce593c397ca48[0][+0.6 MultipleLetters] cleaned[0] up[0] code[0] for[0] by[0] interval[0] traversals[0] for[0] jared[0] [[Sentence=-1,2=word max, 1-5]] initialization[0] code[0] refactored[0] and[0] made[0] clear[0] [[Sentence=-1,1=word max, 1-5]] by[0] loci[0] and[0] by[0] loci[0] by[0] interval[0] use[0] the[0] same[0] underlying[0] code[0] now[0] [[Sentence=-1,1=word max, 1-5]] everyone[0] uses[0] the[0] same[0] initialization[0] code[0] to[0] set[0] things[0] up[0] [[Sentence=-1,1=word max, 1-5]] it's[0] a[0] party[0] in[0] the[0] traversalengine[0] and[0] everyone's[0] invited[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
