Move Method	Translation	Positive	Negative	EmotionRationale
49 commit 41068b698513ffafa38df40bb9b07ced2fcbd75b the commit constitutes a major refactoring of the ug as far as the genotype likelihoods are concerned. i hate to do this in stable, but the vcfs currently being produced by the ug are totally busted. i am trying to make just the necessary changes in stable, doing everything else in unstable later. now all gl calculations are unified into the genotypelikelihoods class - please try and use this functionality from now on instead of duplicating the code. 	49 commit 41068b698513ffafa38df40bb9b07ced2fcbd75b the commit constitutes a major refactoring of the ug as far as the genotype likelihoods are concerned.<br> i hate to do this in stable, but the vcfs currently being produced by the ug are totally busted.<br> i am trying to make just the necessary changes in stable, doing everything else in unstable later.<br> now all gl calculations are unified into the genotypelikelihoods class - please try and use this functionality from now on instead of duplicating the code.	2	-4	 49[0] commit[0] 41068b698513ffafa38df40bb9b07ced2fcbd75b[0] the[0] commit[0] constitutes[0] a[0] major[0] refactoring[0] of[0] the[0] ug[0] as[0] far[0] as[0] the[0] genotype[0] likelihoods[0] are[0] concerned[-1] [[Sentence=-2,1=word max, 1-5]] i[0] hate[-3] to[0] do[0] this[0] in[0] stable[-1] but[0] the[0] vcfs[0] currently[0] being[0] produced[0] by[0] the[0] ug[0] are[0] totally[0] busted[0] [[Sentence=-4,1=word max, 1-5]] i[0] am[0] trying[0] to[0] make[0] just[0] the[0] necessary[0] changes[0] in[0] stable[-1] doing[0] everything[0] else[0] in[0] unstable[-1] later[0] [[Sentence=-2,1=word max, 1-5]] now[0] all[0] gl[0] calculations[0] are[0] unified[0] into[0] the[0] genotypelikelihoods[0] class[0] please[1] try[0] and[0] use[0] this[0] functionality[0] from[0] now[0] on[0] instead[0] of[0] duplicating[0] the[0] code[0] [[Sentence=-1,2=word max, 1-5]][[[2,-4 max of sentences]]]
1454 commit 4f09453470d3f86cd985eb31215623ae8d62a1d8 refactored reduced read utilities -- unittests for key functions on reduced reads -- pileupelement calls static functions in readutils -- simple routine that takes a reduced read and fills in its quals with its reduced qual 	1454 commit 4f09453470d3f86cd985eb31215623ae8d62a1d8 refactored reduced read utilities - unittests for key functions on reduced reads - pileupelement calls static functions in readutils - simple routine that takes a reduced read and fills in its quals with its reduced qual	1	-1	 1454[0] commit[0] 4f09453470d3f86cd985eb31215623ae8d62a1d8[0] refactored[0] reduced[0] read[0] utilities[0] unittests[0] for[0] key[0] functions[0] on[0] reduced[0] reads[0] pileupelement[0] calls[0] static[0] functions[0] in[0] readutils[0] simple[0] routine[0] that[0] takes[0] a[0] reduced[0] read[0] and[0] fills[0] in[0] its[0] quals[0] with[0] its[0] reduced[0] qual[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
2081 commit 36c7f832082c57281d21ba9e2fa023ad2b47f5a0 refactoring ve stratifications so that they don't pass around bulky data; instead just pull needed data from the ve parent. this allows us stop using deprecated features of the rod system. 	2081 commit 36c7f832082c57281d21ba9e2fa023ad2b47f5a0 refactoring ve stratifications so that they don't pass around bulky data; instead just pull needed data from the ve parent.<br> this allows us stop using deprecated features of the rod system.	1	-1	 2081[0] commit[0] 36c7f832082c57281d21ba9e2fa023ad2b47f5a0[0] refactoring[0] ve[0] stratifications[0] so[0] that[0] they[0] don't[0] pass[0] around[0] bulky[0] data[0] instead[0] just[0] pull[0] needed[0] data[0] from[0] the[0] ve[0] parent[0] [[Sentence=-1,1=word max, 1-5]] this[0] allows[0] us[0] stop[0] using[0] deprecated[0] features[0] of[0] the[0] rod[0] system[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3245 commit e16bc2cbd9ff13bdb96e90c2d083908099aa82e8 contracts for java now write for genomeloc and genomelocparser. the semantics of genomeloc are now much clearer. it is no longer allowed to create invalid genomelocs -- you can only create them with well formed start, end, and contigs, with respect to the mater dictionary. where one previously created an invalid genomeloc, and asked is this valid, you must now provide the raw arguments to helper functions to assess this. providing bad arguments to genomeloc generates userexceptions now. added utilty functions contigisindictionary and indexisindictionary to help with this. refactored several interval utilties from genomelocparser to intervalutils, as one might expect they go removed genomeloc.clone() method, as this was not correctly implemented, and actually unnecessary, as genomelocs are immutable. several iterator classes have changed to remove their use of clone() removed misc. unnecessary imports disabled, temporarily, the validating pileup integration test, as it uses reads mapped to an different reference sequence for ecoli, and this now does not satisfy the contracts for genomeloc 	3245 commit e16bc2cbd9ff13bdb96e90c2d083908099a82e8 contracts for java now write for genomeloc and genomelocparser.<br> the semantics of genomeloc are now much clearer.<br> it is no longer allowed to create invalid genomelocs - you can only create them with well formed start, end, and contigs, with respect to the mater dictionary.<br> where one previously created an invalid genomeloc, and asked is this valid, you must now provide the raw arguments to helper functions to assess this.<br> providing bad arguments to genomeloc generates userexceptions now.<br> added utilty functions contigisindictionary and indexisindictionary to help with this.<br> refactored several interval utilties from genomelocparser to intervalutils, as one might expect they go removed genomeloc.<br>clone( method, as this was not correctly implemented, and actually unnecessary, as genomelocs are immutable.<br> several iterator classes have changed to remove their use of clone( removed misc.<br> unnecessary imports disabled, temporarily, the validating pileup integration test, as it uses reads mapped to an different reference sequence for ecoli, and this now does not satisfy the contracts for genomeloc	3	-2	 3245[0] commit[0] e16bc2cbd9ff13bdb96e90c2d083908099aa82e8/e16bc2cbd9ff13bdb96e90c2d083908099a82e8[0] contracts[0] for[0] java[0] now[0] write[0] for[0] genomeloc[0] and[0] genomelocparser[0] [[Sentence=-1,1=word max, 1-5]] the[0] semantics[0] of[0] genomeloc[0] are[0] now[0] much[0] clearer[0] [[Sentence=-1,1=word max, 1-5]] it[0] is[0] no[0] longer[0] allowed[0] to[0] create[0] invalid[-1] genomelocs[0] you[0] can[0] only[0] create[0] them[0] with[0] well[0] formed[0] start[0] end[0] and[0] contigs[0] with[0] respect[2] to[0] the[0] mater[0] dictionary[0] [[Sentence=-2,3=word max, 1-5]] where[0] one[0] previously[0] created[0] an[0] invalid[-1] genomeloc[0] and[0] asked[0] is[0] this[0] valid[0] you[0] must[0] now[0] provide[0] the[0] raw[0] arguments[-1] to[0] helper[0] functions[0] to[0] assess[0] this[0] [[Sentence=-2,1=word max, 1-5]] providing[0] bad[-1] arguments[-1] to[0] genomeloc[0] generates[0] userexceptions[0] now[0] [[Sentence=-2,1=word max, 1-5]] added[0] utilty[0] functions[0] contigisindictionary[0] and[0] indexisindictionary[0] to[0] help[0] with[0] this[0] [[Sentence=-1,1=word max, 1-5]] refactored[0] several[0] interval[0] utilties[0] from[0] genomelocparser[0] to[0] intervalutils[0] as[0] one[0] might[0] expect[0] they[0] go[0] removed[0] genomeloc[0] [[Sentence=-1,1=word max, 1-5]] clone[0] method[0] as[0] this[0] was[0] not[0] correctly[0] implemented[0] and[0] actually[0] unnecessary[-1] as[0] genomelocs[0] are[0] immutable[0] [[Sentence=-2,1=word max, 1-5]] several[0] iterator[0] classes[0] have[0] changed[0] to[0] remove[0] their[0] use[0] of[0] clone[0] removed[0] misc[0] [[Sentence=-1,1=word max, 1-5]] unnecessary[-1] imports[0] disabled[0] temporarily[-1] the[0] validating[0] pileup[0] integration[0] test[0] as[0] it[0] uses[0] reads[0] mapped[0] to[0] an[0] different[0] reference[0] sequence[0] for[0] ecoli[0] and[0] this[0] now[0] does[0] not[0] satisfy[1][NegatedDueToPreviousWord] the[0] contracts[0] for[0] genomeloc[0] [[Sentence=-2,1=word max, 1-5]][[[3,-2 max of sentences]]]
3683 commit 8c262eb605ae1bb3f2766c1fadde1096ae2789c2 initial commit of new likelihood model to evaluate indel quality. principle is simple, a plain pair hmm with affine gap penalties (in log space) that does quasi-local alignment between reads and candidate haplotypes and which in theory should be more solid and more reliable than the older dindel-based model. it also allows to be easily extensible in the future if we decide to introduce either context-dependent and/or read-dependent gap penalties. model is disabled by default and we're still using the old dindel model until i'm more confident that new model is a definitive improvement, so right now this is enabled by hidden command line arguments, and it's not to be used yet. in detail: a) several refactorings to share softmax() available to other modules, so its now part of mathutils. b) refactored a couple of read utilities and moved from baq to readutils. c) new pairhmmindelerrormodel class implementing new likelihood model d) several new hidden debug arguments in uac. 	3683 commit 8c262eb605ae1bb3f2766c1fadde1096ae2789c2 initial commit of new likelihood model to evaluate indel quality.<br> principle is simple, a plain pair hm with affine gap penalties (in log space) that does quasi-local alignment between reads and candidate haplotypes and which in theory should be more solid and more reliable than the older dindel-based model.<br> it also allows to be easily extensible in the future if we decide to introduce either context-dependent and/or read-dependent gap penalties.<br> model is disabled by default and we're still using the old dindel model until i'm more confident that new model is a definitive improvement, so right now this is enabled by hidden command line arguments, and it's not to be used yet.<br> in detail: a) several refactorings to share softmax( available to other modules, so its now part of mathutils.<br> b) refactored a couple of read utilities and moved from baq to readutils.<br> c) new pairhmmindelerrormodel class implementing new likelihood model d) several new hidden debug arguments in uac.	2	-2	 3683[0] commit[0] 8c262eb605ae1bb3f2766c1fadde1096ae2789c2[0] initial[0] commit[0] of[0] new[0] likelihood[0] model[0] to[0] evaluate[0] indel[0] quality[0] [[Sentence=-1,1=word max, 1-5]] principle[0] is[0] simple[0] a[0] plain[0] pair[0] hmm/hm[0] with[0] affine[0] gap[0] penalties[0] in[0] log[0] space[0] that[0] does[0] quasi[0] local[0] alignment[0] between[0] reads[0] and[0] candidate[0] haplotypes[0] and[0] which[0] in[0] theory[0] should[0] be[0] more[0] solid[0] and[0] more[0] reliable[0] than[0] the[0] older[0] dindel[0] based[0] model[0] [[Sentence=-1,1=word max, 1-5]] it[0] also[0] allows[0] to[0] be[0] easily[0] extensible[0] in[0] the[0] future[0] if[0] we[0] decide[0] to[0] introduce[0] either[0] context[0] dependent[-1] and/or[0] read[0] dependent[-1] gap[0] penalties[0] [[Sentence=-2,1=word max, 1-5]] model[0] is[0] disabled[0] by[0] default[-1] and[0] we're[0] still[0] using[0] the[0] old[0] dindel[0] model[0] until[0] i'm[0] more[0] confident[1] that[0] new[0] model[0] is[0] a[0] definitive[0] improvement[1] so[0] right[0] now[0] this[0] is[0] enabled[0] by[0] hidden[0] command[0] line[0] arguments[-1] and[0] it's[0] not[0] to[0] be[0] used[0] yet[0] [[Sentence=-2,2=word max, 1-5]] in[0] detail[0] a[0] several[0] refactorings[0] to[0] share[0] softmax[0] available[0] to[0] other[0] modules[0] so[0] its[0] now[0] part[0] of[0] mathutils[0] [[Sentence=-1,1=word max, 1-5]] b[0] refactored[0] a[0] couple[0] of[0] read[0] utilities[0] and[0] moved[0] from[0] baq[0] to[0] readutils[0] [[Sentence=-1,1=word max, 1-5]] c[0] new[0] pairhmmindelerrormodel[0] class[0] implementing[0] new[0] likelihood[0] model[0] d[0] several[0] new[0] hidden[0] debug[0] arguments[-1] in[0] uac[0] [[Sentence=-2,1=word max, 1-5]][[[2,-2 max of sentences]]]
4042 commit cacdac391486f7ee4a3b9f5bcc4730ac310721b8 major refactoring of shards. no longer uses interfaces but is now an actual object hierarchy with most of the important and common functionality pushed up to base classes. eliminated a lot of duplicated code, and the shards are much more understandable now. also now require a genomelocparser to work with their own genomelocs. 	4042 commit cacdac391486f7ee4a3b9f5bcc4730ac310721b8 major refactoring of shards.<br> no longer uses interfaces but is now an actual object hierarchy with most of the important and common functionality pushed up to base classes.<br> eliminated a lot of duplicated code, and the shards are much more understandable now.<br> also now require a genomelocparser to work with their own genomelocs.	1	-1	 4042[0] commit[0] cacdac391486f7ee4a3b9f5bcc4730ac310721b8[0] major[0] refactoring[0] of[0] shards[0] [[Sentence=-1,1=word max, 1-5]] no[0] longer[0] uses[0] interfaces[0] but[0] is[0] now[0] an[0] actual[0] object[0] hierarchy[0] with[0] most[0] of[0] the[0] important[0] and[0] common[0] functionality[0] pushed[0] up[0] to[0] base[0] classes[0] [[Sentence=-1,1=word max, 1-5]] eliminated[0] a[0] lot[0] of[0] duplicated[0] code[0] and[0] the[0] shards[0] are[0] much[0] more[0] understandable[0] now[0] [[Sentence=-1,1=word max, 1-5]] also[0] now[0] require[0] a[0] genomelocparser[0] to[0] work[0] with[0] their[0] own[0] genomelocs[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4157 commit cba18116e4dbb56c6ce91f8c6b5de70959d9842e a significant refactoring of the rod system, done largely to simplify the process of streaming/piping vcfs into the gatk. notable changes: - public interface to rmdtrackbuilder is greatly simplified; users can use it only to build rmdtracks and lookup codecs. - roddatasource and rmdtrack are no longer functionally at the same level; roddatasources now manage rmdtracks on behalf of the gatk, and the only direct consumers of the rmdtrack class are the walkers that feel the need to access the rod system directly. (we need to stamp out this access pattern. a few minor warts were introduced as part of this process, labeled with todos. these'll be fixed as part of the vcf streaming project. 	4157 commit cba18116e4dbb56c6ce91f8c6b5de70959d9842e a significant refactoring of the rod system, done largely to simplify the process of streaming/piping vcfs into the gatk.<br> notable changes: - public interface to rmdtrackbuilder is greatly simplified; users can use it only to build rmdtracks and lookup codecs.<br> - roddatasource and rmdtrack are no longer functionally at the same level; roddatasources now manage rmdtracks on behalf of the gatk, and the only direct consumers of the rmdtrack class are the walkers that feel the need to access the rod system directly.<br> (we need to stamp out this access pattern.<br> a few minor warts were introduced as part of this process, labeled with todos.<br> these'll be fixed as part of the vcf streaming project.	3	-1	 4157[0] commit[0] cba18116e4dbb56c6ce91f8c6b5de70959d9842e[0] a[0] significant[0] refactoring[0] of[0] the[0] rod[0] system[0] done[0] largely[0] to[0] simplify[0] the[0] process[0] of[0] streaming/piping[0] vcfs[0] into[0] the[0] gatk[0] [[Sentence=-1,1=word max, 1-5]] notable[0] changes[0] public[0] interface[0] to[0] rmdtrackbuilder[0] is[0] greatly[2] simplified[0] users[0] can[0] use[0] it[0] only[0] to[0] build[0] rmdtracks[0] and[0] lookup[0] codecs[0] [[Sentence=-1,3=word max, 1-5]] roddatasource[0] and[0] rmdtrack[0] are[0] no[0] longer[0] functionally[0] at[0] the[0] same[0] level[0] roddatasources[0] now[0] manage[0] rmdtracks[0] on[0] behalf[0] of[0] the[0] gatk[0] and[0] the[0] only[0] direct[0] consumers[0] of[0] the[0] rmdtrack[0] class[0] are[0] the[0] walkers[0] that[0] feel[0] the[0] need[0] to[0] access[0] the[0] rod[0] system[0] directly[0] [[Sentence=-1,1=word max, 1-5]] we[0] need[0] to[0] stamp[0] out[0] this[0] access[0] pattern[0] [[Sentence=-1,1=word max, 1-5]] a[0] few[0] minor[0] warts[0] were[0] introduced[0] as[0] part[0] of[0] this[0] process[0] labeled[0] with[0] todos[0] [[Sentence=-1,1=word max, 1-5]] these'll[0] be[0] fixed[0] as[0] part[0] of[0] the[0] vcf[0] streaming[0] project[0] [[Sentence=-1,1=word max, 1-5]][[[3,-1 max of sentences]]]
4328 commit 102c8b1f596bb4266f1f5557423e832c1361d597 large refactoring of the ugv2 engine so that it is now truly separated into 2 distict phases: gl calculation and af calculation, where each can be done independently. this is not yet enabled in ugv2 itself though because i need to work out one last issue or two. tested on 1mb of 1000g aug allpops low-pass and results are identical as before. also, making bq capping by mq mandatory. 	4328 commit 102c8b1f596bb4266f1f557423e832c1361d597 large refactoring of the ugv2 engine so that it is now truly separated into 2 distict phases: gl calculation and af calculation, where each can be done independently.<br> this is not yet enabled in ugv2 itself though because i need to work out one last issue or two.<br> tested on 1mb of 100g aug allpops low-pass and results are identical as before.<br> also, making bq capping by mq mandatory.	2	-2	 4328[0] commit[0] 102c8b1f596bb4266f1f5557423e832c1361d597/102c8b1f596bb4266f1f557423e832c1361d597[0] large[0] refactoring[0] of[0] the[0] ugv2[0] engine[0] so[0] that[0] it[0] is[0] now[0] truly[1] separated[0] into[0] 2[0] distict[0] phases[0] gl[0] calculation[0] and[0] af[0] calculation[0] where[0] each[0] can[0] be[0] done[0] independently[0] [[Sentence=-1,2=word max, 1-5]] this[0] is[0] not[0] yet[0] enabled[0] in[0] ugv2[0] itself[0] though[0] because[0] i[0] need[0] to[0] work[0] out[0] one[0] last[0] issue[0] or[0] two[0] [[Sentence=-1,1=word max, 1-5]] tested[0] on[0] 1mb[0] of[0] 1000g/100g[0] aug[0] allpops[0] low[-1] pass[0] and[0] results[0] are[0] identical[0] as[0] before[0] [[Sentence=-2,1=word max, 1-5]] also[0] making[0] bq[0] capping[0] by[0] mq[0] mandatory[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
7015 commit 61b5fb82ce093634da5892fd514067eb1924e6ec 2 major changes: 1. add dbsnp rs id to vcf output from genotyper; to do this i needed to fix the dbsnp rod which did not correctly return this value. 2. remove allelebalancebacked and instead generalize the arbitrary info fields backing vcfs (and potentially others) in preparation for refactoring variantfiltration next week. 	7015 commit 61b5fb82ce093634da5892fd514067eb1924e6ec 2 major changes: 1.<br> add dbsnp rs id to vcf output from genotyper; to do this i needed to fix the dbsnp rod which did not correctly return this value.<br> 2.<br> remove allelebalancebacked and instead generalize the arbitrary info fields backing vcfs (and potentially others) in preparation for refactoring variantfiltration next week.	1	-1	 7015[0] commit[0] 61b5fb82ce093634da5892fd514067eb1924e6ec[0] 2[0] major[0] changes[0] 1[0] [[Sentence=-1,1=word max, 1-5]] add[0] dbsnp[0] rs[0] id[0] to[0] vcf[0] output[0] from[0] genotyper[0] to[0] do[0] this[0] i[0] needed[0] to[0] fix[0] the[0] dbsnp[0] rod[0] which[0] did[0] not[0] correctly[0] return[0] this[0] value[0] [[Sentence=-1,1=word max, 1-5]] 2[0] [[Sentence=-1,1=word max, 1-5]] remove[0] allelebalancebacked[0] and[0] instead[0] generalize[0] the[0] arbitrary[0] info[0] fields[0] backing[0] vcfs[0] and[0] potentially[0] others[0] in[0] preparation[0] for[0] refactoring[0] variantfiltration[0] next[0] week[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
