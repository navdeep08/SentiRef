Extract Superclass	Translation	Positive	Negative	EmotionRationale
1689 commit fe5724b6ea7c77f3f38f35b2d29d118860b6fc2a refactored indexing part of standardvcfwriter into superclass -- now other implementations of the vcfwriter can easily share common functions, such as writing an index on the fly 	1689 commit fe5724b6ea7c77f3f38f35b2d29d118860b6fc2a refactored indexing part of standardvcfwriter into superclass - now other implementations of the vcfwriter can easily share common functions, such as writing an index on the fly	1	-1	 1689[0] commit[0] fe5724b6ea7c77f3f38f35b2d29d118860b6fc2a[0] refactored[0] indexing[0] part[0] of[0] standardvcfwriter[0] into[0] superclass[0] now[0] other[0] implementations[0] of[0] the[0] vcfwriter[0] can[0] easily[0] share[0] common[0] functions[0] such[0] as[0] writing[0] an[0] index[0] on[0] the[0] fly[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
2407 commit 1a268ff1fd97108dd6394b54536fe537fab60dc0 refactor so that genotypeannotation and infofieldannotation share common superclass variantannotatorannotation 	2407 commit 1a268ff1fd97108dd6394b54536fe537fab60dc0 refactor so that genotypeannotation and infofieldannotation share common superclass variantannotatorannotation	1	-1	 2407[0] commit[0] 1a268ff1fd97108dd6394b54536fe537fab60dc0[0] refactor[0] so[0] that[0] genotypeannotation[0] and[0] infofieldannotation[0] share[0] common[0] superclass[0] variantannotatorannotation[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3312 commit 5c6965575e49ca7d692c0b77bb3d5fac1f910e27 some refactoring that mauricio and i worked through together. changed filters to extend from org.broadinstitute.sting.gatk.filters.readfilter rather than directly from net.sf.picard.filter.samrecordfilter, which allows us to add an initialize(gatkengine) method so that filters can do any initialization they'd like based on cl arguments, sam headers, etc. 	3312 commit 5c6965575e49ca7d692c0b77bb3d5fac1f910e27 some refactoring that mauricio and i worked through together.<br> changed filters to extend from org.<br>broadinstitute.<br>sting.<br>gatk.<br>filters.<br>readfilter rather than directly from net.<br>sf.<br>picard.<br>filter.<br>samrecordfilter, which allows us to add an initialize(gatkengine) method so that filters can do any initialization they'd like based on cl arguments, sam headers, etc.	1	-2	 3312[0] commit[0] 5c6965575e49ca7d692c0b77bb3d5fac1f910e27[0] some[0] refactoring[0] that[0] mauricio[0] and[0] i[0] worked[0] through[0] together[0] [[Sentence=-1,1=word max, 1-5]] changed[0] filters[0] to[0] extend[0] from[0] org[0] [[Sentence=-1,1=word max, 1-5]] broadinstitute[0] [[Sentence=-1,1=word max, 1-5]] sting[-1] [[Sentence=-2,1=word max, 1-5]] gatk[0] [[Sentence=-1,1=word max, 1-5]] filters[0] [[Sentence=-1,1=word max, 1-5]] readfilter[0] rather[0] than[0] directly[0] from[0] net[0] [[Sentence=-1,1=word max, 1-5]] sf[0] [[Sentence=-1,1=word max, 1-5]] picard[0] [[Sentence=-1,1=word max, 1-5]] filter[0] [[Sentence=-1,1=word max, 1-5]] samrecordfilter[0] which[0] allows[0] us[0] to[0] add[0] an[0] initialize[0] gatkengine[0] method[0] so[0] that[0] filters[0] can[0] do[0] any[0] initialization[0] they'd[0] like[0] based[0] on[0] cl[0] arguments[-1] sam[0] headers[0] etc[0] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
4729 commit 4ed9f437e963ff5c93edf3dd2800c6b6d4ffbdee sliced the gae in half like a gordian knot to avoid the constant merge conflicts. the gae half has all the walker specific code. the new "abstract" gae has the rest of the logic. more refactoring to come, with the end goal of having a tool that other java analysis programs (queue, etc.) can use to read in genomic data. 	4729 commit 4ed9f437e963ff5c93edf3dd2800c6b6d4ffbdee sliced the gae in half like a gordian knot to avoid the constant merge conflicts.<br> the gae half has all the walker specific code.<br> the new "abstract" gae has the rest of the logic.<br> more refactoring to come, with the end goal of having a tool that other java analysis programs (queue, etc.<br> can use to read in genomic data.	1	-2	 4729[0] commit[0] 4ed9f437e963ff5c93edf3dd2800c6b6d4ffbdee[0] sliced[0] the[0] gae[0] in[0] half[0] like[0] a[0] gordian[0] knot[0] to[0] avoid[-1] the[0] constant[0] merge[0] conflicts[0] [[Sentence=-2,1=word max, 1-5]] the[0] gae[0] half[0] has[0] all[0] the[0] walker[0] specific[0] code[0] [[Sentence=-1,1=word max, 1-5]] the[0] new[0] abstract[0] gae[0] has[0] the[0] rest[0] of[0] the[0] logic[0] [[Sentence=-1,1=word max, 1-5]] more[0] refactoring[0] to[0] come[0] with[0] the[0] end[0] goal[0] of[0] having[0] a[0] tool[0] that[0] other[0] java[0] analysis[0] programs[0] queue[0] etc[0] [[Sentence=-1,1=word max, 1-5]] can[0] use[0] to[0] read[0] in[0] genomic[0] data[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
6940 commit 4fbb6d05d0441e21490a5b0ec032bb8c2200955b refactoring. push the revisions to the common aligner interface down into the aligner base classes. hack the managed implementation to support the new interface. 	6940 commit 4fbb6d05d0441e21490a5b0ec032bb8c2200955b refactoring.<br> push the revisions to the common aligner interface down into the aligner base classes.<br> hack the managed implementation to support the new interface.	1	-2	 6940[0] commit[0] 4fbb6d05d0441e21490a5b0ec032bb8c2200955b[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]] push[0] the[0] revisions[0] to[0] the[0] common[0] aligner[0] interface[0] down[0] into[0] the[0] aligner[0] base[0] classes[0] [[Sentence=-1,1=word max, 1-5]] hack[-1] the[0] managed[0] implementation[0] to[0] support[0] the[0] new[0] interface[0] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
8119 commit 819862e04e7475d06a01161cad83e3bda25672c8 major restructuring of generalized variant analysis framework. now trivally easy to add additional analyses. easy partitioning of all analyses by features, such as singleton status. now has transition/transversional bias, counting, dbsnp coverage, hwe violation, selecting of variants by presence/absense in dbs. also restructured the rod system to make it easier to add tracks. also, added the interval track -- if you provide an interval list, then the system autoatmically makese this available to you as a bound rod -- you can always find out where you are in the interval at every site. python scripts improved to handle more merging, etc, into population snps. 	8119 commit 819862e04e7475d06a01161cad83e3bda25672c8 major restructuring of generalized variant analysis framework.<br> now trivally easy to add additional analyses.<br> easy partitioning of all analyses by features, such as singleton status.<br> now has transition/transversional bias, counting, dbsnp coverage, hwe violation, selecting of variants by presence/absense in dbs.<br> also restructured the rod system to make it easier to add tracks.<br> also, added the interval track - if you provide an interval list, then the system autoatmically makese this available to you as a bound rod - you can always find out where you are in the interval at every site.<br> python scripts improved to handle more merging, etc, into population snps.	2	-2	 8119[0] commit[0] 819862e04e7475d06a01161cad83e3bda25672c8[0] major[0] restructuring[0] of[0] generalized[0] variant[0] analysis[0] framework[0] [[Sentence=-1,1=word max, 1-5]] now[0] trivally[0] easy[0] to[0] add[0] additional[0] analyses[0] [[Sentence=-1,1=word max, 1-5]] easy[0] partitioning[-1] of[0] all[0] analyses[0] by[0] features[0] such[0] as[0] singleton[0] status[0] [[Sentence=-2,1=word max, 1-5]] now[0] has[0] transition/transversional[0] bias[0] counting[0] dbsnp[0] coverage[0] hwe[0] violation[0] selecting[0] of[0] variants[0] by[0] presence/absense[0] in[0] dbs[0] [[Sentence=-1,1=word max, 1-5]] also[0] restructured[0] the[0] rod[0] system[0] to[0] make[0] it[0] easier[0] to[0] add[0] tracks[0] [[Sentence=-1,1=word max, 1-5]] also[0] added[0] the[0] interval[0] track[0] if[0] you[0] provide[0] an[0] interval[0] list[0] then[0] the[0] system[0] autoatmically[0] makese[0] this[0] available[0] to[0] you[0] as[0] a[0] bound[0] rod[0] you[0] can[0] always[0] find[0] out[0] where[0] you[0] are[0] in[0] the[0] interval[0] at[0] every[0] site[0] [[Sentence=-1,1=word max, 1-5]] python[0] scripts[0] improved[1] to[0] handle[0] more[0] merging[0] etc[0] into[0] population[0] snps[0] [[Sentence=-1,2=word max, 1-5]][[[2,-2 max of sentences]]]
