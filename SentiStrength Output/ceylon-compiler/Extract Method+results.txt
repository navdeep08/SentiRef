Extract Method	Translation	Positive	Negative	EmotionRationale
678 commit abfd2cea8f3fb9fcd6ffc7de639ef9effb010a98 issue #2130: more refactoring 	678 commit abfd2cea8f3fb9fcd6ffc7de639ef9effb010a98 issue #2130: more refactoring	1	-1	 678[0] commit[0] abfd2cea8f3fb9fcd6ffc7de639ef9effb010a98[0] issue[0] #2130[0] more[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
1105 commit deaebb86a23ccf53bb9e5adcc69dd6b9619eb043 minor code cleanup 	1105 commit deaebb86a23ccf53bb9e5adcc69dd6b9619eb043 minor code cleanup	1	-1	 1105[0] commit[0] deaebb86a23ccf53bb9e5adcc69dd6b9619eb043[0] minor[0] code[0] cleanup[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
1131 commit 63d4d9da1562a5b7441f2df1bed444aac80ebfb7 small refactoring to help resynchronizing the  jdtmodelloader . 	1131 commit 63d4d9da1562a5b7441f2df1bed44ac80ebfb7 small refactoring to help resynchronizing the  jdtmodelloader .	2	-1	 1131[0] commit[0] 63d4d9da1562a5b7441f2df1bed444aac80ebfb7/63d4d9da1562a5b7441f2df1bed44ac80ebfb7[0][+0.6 MultipleLetters] small[0] refactoring[0] to[0] help[0] resynchronizing[0] the[0] jdtmodelloader[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
2138 commit 1d2769908af8183e1e654dcbf2e970431e282abb issue #1817: refactor makename() and makequalifiedname() so we can generate a string or a jcexpression is much the same way as we do with maketypedeclarationexpression()/maketypedeclarationname() 	2138 commit 1d2769908af8183e1e654dcbf2e970431e282abb issue #1817: refactor makename( and makequalifiedname( so we can generate a string or a jcexpression is much the same way as we do with maketypedeclarationexpression()/maketypedeclarationname(	1	-1	 2138[0] commit[0] 1d2769908af8183e1e654dcbf2e970431e282abb[0] issue[0] #1817[0] refactor[0] makename[0] and[0] makequalifiedname[0] so[0] we[0] can[0] generate[0] a[0] string[0] or[0] a[0] jcexpression[0] is[0] much[0] the[0] same[0] way[0] as[0] we[0] do[0] with[0] maketypedeclarationexpression[0] ()/maketypedeclarationname[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
2903 commit 35584aef5649df60bb98c06f41bb8e57f514790b very minor refactor 	2903 commit 35584aef5649df60bb98c06f41bb8e57f514790b very minor refactor	1	-1	 2903[0] commit[0] 35584aef5649df60bb98c06f41bb8e57f514790b[0] very[0] minor[0] refactor[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3280 commit 0a2a795e0053c86d2f300a56c831a3f8883765cc callablebuilder: refactor callablebuilder to remove a lot of copy and pasted code and generally make it less crazy. 	3280 commit 0a2a795e0053c86d2f300a56c831a3f883765c callablebuilder: refactor callablebuilder to remove a lot of copy and pasted code and generally make it less crazy.	2	-2	 3280[0] commit[0] 0a2a795e0053c86d2f300a56c831a3f8883765cc/0a2a795e0053c86d2f300a56c831a3f883765c[0][+0.6 MultipleLetters] callablebuilder[0] refactor[0] callablebuilder[0] to[0] remove[0] a[0] lot[0] of[0] copy[0] and[0] pasted[0] code[0] and[0] generally[0] make[0] it[0] less[0] crazy[-1] [[Sentence=-2,2=word max, 1-5]][[[2,-2 max of sentences]]]
4300 commit 1256696ff6a9e4f63c2ab75cea69c72035710400 issues #1247, #1254: refactor how we build the model, to support sequenceenumerations, and maybe tuples, and also refactor how we build the annotations for the dpms. 	4300 commit 1256696ff6a9e4f63c2ab75cea69c72035710400 issues #1247, #1254: refactor how we build the model, to support sequenceenumerations, and maybe tuples, and also refactor how we build the annotations for the dpms.	1	-1	 4300[0] commit[0] 1256696ff6a9e4f63c2ab75cea69c72035710400[0] issues[0] #1247[0] #1254[0] refactor[0] how[0] we[0] build[0] the[0] model[0] to[0] support[0] sequenceenumerations[0] and[0] maybe[0] tuples[0] and[0] also[0] refactor[0] how[0] we[0] build[0] the[0] annotations[0] for[0] the[0] dpms[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4604 commit 8cb785b3b902f1bb4c2532e65c197154ad6e6e24 codegen: fix compile errors in codegen caused by the remodelling refactoring. 	4604 commit 8cb785b3b902f1bb4c2532e65c197154ad6e6e24 codegen: fix compile errors in codegen caused by the remodelling refactoring.	1	-1	 4604[0] commit[0] 8cb785b3b902f1bb4c2532e65c197154ad6e6e24[0] codegen[0] fix[0] compile[0] errors[0] in[0] codegen[0] caused[0] by[0] the[0] remodelling[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4880 commit ecc3d607c76cb42a94f0f8fd0b6082a22701d54f classtransformer.transformmethod(): refactor how we call transformmethod so the different ways it is called are more apparent (i.e. the different transformations it does) are more apparent 	4880 commit ecc3d607c76cb42a94f0f8fd0b6082a22701d54f classtransformer.<br>transformmethodtransformmethod refactor how we call transformmethod so the different ways it is called are more apparent (i.<br>e.<br> the different transformations it does) are more apparent	1	-2	 4880[0] commit[0] ecc3d607c76cb42a94f0f8fd0b6082a22701d54f[0] classtransformer[0] [[Sentence=-1,1=word max, 1-5]] transformmethod[0][-1 Emoticon] refactor[0] how[0] we[0] call[0] transformmethod[0] so[0] the[0] different[0] ways[0] it[0] is[0] called[0] are[0] more[0] apparent[0] i[0] [[Sentence=-2,1=word max, 1-5]] e[0] [[Sentence=-1,1=word max, 1-5]] the[0] different[0] transformations[0] it[0] does[0] are[0] more[0] apparent[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
4904 commit fa47b5b35ef41c8e39db88f2ace84448649c5b0b model loader: refactored how we report model loader errors and produce less exceptions 	4904 commit fa47b5b35ef41c8e39db88f2ace8448649c5b0b model loader: refactored how we report model loader errors and produce less exceptions	1	-1	 4904[0] commit[0] fa47b5b35ef41c8e39db88f2ace84448649c5b0b/fa47b5b35ef41c8e39db88f2ace8448649c5b0b[0] model[0] loader[0] refactored[0] how[0] we[0] report[0] model[0] loader[0] errors[0] and[0] produce[0] less[0] exceptions[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5712 commit e169d669a962006e52fab806f59ac350327bb3ac naming: refactored getcompanionfield name to accept a name param 	5712 commit e169d669a962006e52fab806f59ac350327bb3ac naming: refactored getcompanionfield name to accept a name param	1	-1	 5712[0] commit[0] e169d669a962006e52fab806f59ac350327bb3ac[0] naming[0] refactored[0] getcompanionfield[0] name[0] to[0] accept[0] a[0] name[0] param[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5847 commit ddc6b34cd2e705c2ca862880c4925778646c5836 issue #959: naming: rename methods, and fix a todo about a method called clone() and replace a chained if/else if with a set lookup. 	5847 commit ddc6b34cd2e705c2ca862880c4925778646c5836 issue #959: naming: rename methods, and fix a todo about a method called clone( and replace a chained if/else if with a set lookup.	1	-1	 5847[0] commit[0] ddc6b34cd2e705c2ca862880c4925778646c5836[0] issue[0] #959[0] naming[0] rename[0] methods[0] and[0] fix[0] a[0] todo[0] about[0] a[0] method[0] called[0] clone[0] and[0] replace[0] a[0] chained[0] if/else[0] if[0] with[0] a[0] set[0] lookup[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6545 commit 52e584e5441e0c5b31204cc01bf02ab629d818c3 ceylondoc: test refactoring 	6545 commit 52e584e5441e0c5b31204cc01bf02ab629d818c3 ceylondoc: test refactoring	1	-1	 6545[0] commit[0] 52e584e5441e0c5b31204cc01bf02ab629d818c3[0] ceylondoc[0] test[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6689 commit 3e11e6d26654e095c5065ba54871f01ae67dbf26 ceylontool: refactor so we can generate more helpful messages when the arguments are incompatible with the tool model. somewhat thwarted by the fact that the ceylontool itself does not use the subtool infrastructure, and nor does the ceylonhelptool understand it properly, but i think this is still a lot better than what we had before 	6689 commit 3e11e6d26654e095c5065ba54871f01ae67dbf26 ceylontool: refactor so we can generate more helpful messages when the arguments are incompatible with the tool model.<br> somewhat thwarted by the fact that the ceylontool itself does not use the subtool infrastructure, and nor does the ceylonhelptool understand it properly, but i think this is still a lot better than what we had before	2	-3	 6689[0] commit[0] 3e11e6d26654e095c5065ba54871f01ae67dbf26[0] ceylontool[0] refactor[0] so[0] we[0] can[0] generate[0] more[0] helpful[1] messages[0] when[0] the[0] arguments[-1] are[0] incompatible[-2] with[0] the[0] tool[0] model[0] [[Sentence=-3,2=word max, 1-5]] somewhat[0] thwarted[-1] by[0] the[0] fact[0] that[0] the[0] ceylontool[0] itself[0] does[0] not[0] use[0] the[0] subtool[0] infrastructure[0] and[0] nor[0] does[0] the[0] ceylonhelptool[0] understand[0] it[0] properly[0] but[0] i[0] think[0] this[0] is[0] still[0] a[0] lot[0] better[0] than[0] what[0] we[0] had[0] before[0] [[Sentence=-2,1=word max, 1-5]][[[2,-3 max of sentences]]]
6768 commit aa7c9e3e22ef9deef291504089c367ece9a157df conditions: refactoring how we do substitutions when transforming condition blocks. 	6768 commit a7c9e3e22ef9deef291504089c367ece9a157df conditions: refactoring how we do substitutions when transforming condition blocks.	1	-1	 6768[0] commit[0] aa7c9e3e22ef9deef291504089c367ece9a157df/a7c9e3e22ef9deef291504089c367ece9a157df[0] conditions[0] refactoring[0] how[0] we[0] do[0] substitutions[0] when[0] transforming[0] condition[0] blocks[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6830 commit 953215d2a530a5bff2e12ef442014f87e51e3e9a classtransformer: refactored transform(tree.classorinterface) into smaller methods 	6830 commit 953215d2a530a5bff2e12ef442014f87e51e3e9a classtransformer: refactored transform(tree.<br>classorinterface) into smaller methods	1	-1	 6830[0] commit[0] 953215d2a530a5bff2e12ef442014f87e51e3e9a[0] classtransformer[0] refactored[0] transform[0] tree[0] [[Sentence=-1,1=word max, 1-5]] classorinterface[0] into[0] smaller[0] methods[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6940 commit 14b10901180210b25dd317ad2cfad027552d5159 tools: refactor doc model so that we can describe subtools 	6940 commit 14b10901180210b25dd317ad2cfad027552d5159 tools: refactor doc model so that we can describe subtools	1	-1	 6940[0] commit[0] 14b10901180210b25dd317ad2cfad027552d5159[0] tools[0] refactor[0] doc[0] model[0] so[0] that[0] we[0] can[0] describe[0] subtools[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6992 commit bd9f01edc03543b336be57e3967de5d5fea844ce issue #754: statementtransformer: refactor 	6992 commit bd9f01edc03543b336be57e3967de5d5fea844ce issue #754: statementtransformer: refactor	1	-1	 6992[0] commit[0] bd9f01edc03543b336be57e3967de5d5fea844ce[0] issue[0] #754[0] statementtransformer[0] refactor[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6999 commit 537b42fbfe3f5239913432460f7a0ea9aad803ab statementtransformer: refactor transformcondition() so it doesn't return a crazy list with different bits of the transformed condition at different indices. let's do something sane like using a class (transformedcondition). (precursor to issue #754) 	699 commit 537b42fbfe3f5239913432460f7a0ea9ad803ab statementtransformer: refactor transformcondition( so it doesn't return a crazy list with different bits of the transformed condition at different indices.<br> let's do something sane like using a class (transformedcondition)<br> (precursor to issue #754)	1	-2	 6999/699[0] commit[0] 537b42fbfe3f5239913432460f7a0ea9aad803ab/537b42fbfe3f5239913432460f7a0ea9ad803ab[0] statementtransformer[0] refactor[0] transformcondition[0] so[0] it[0] doesn't[0] return[0] a[0] crazy[-1] list[0] with[0] different[0] bits[0] of[0] the[0] transformed[0] condition[0] at[0] different[0] indices[0] [[Sentence=-2,1=word max, 1-5]] let's[0] do[0] something[0] sane[0] like[0] using[0] a[0] class[0] transformedcondition[0] [[Sentence=-1,1=word max, 1-5]] precursor[0] to[0] issue[0] #754[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
7045 commit d365ebe49ecf62636b2e9344b9adc3fe9ae6f7d5 transform  assert  statements to fix #753 refactored  transformcondition  to reuse some of it for assertions 	7045 commit d365ebe49ecf62636b2e9344b9adc3fe9ae6f7d5 transform  assert  statements to fix #753 refactored  transformcondition  to reuse some of it for assertions	1	-1	 7045[0] commit[0] d365ebe49ecf62636b2e9344b9adc3fe9ae6f7d5[0] transform[0] assert[0] statements[0] to[0] fix[0] #753[0] refactored[0] transformcondition[0] to[0] reuse[0] some[0] of[0] it[0] for[0] assertions[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7053 commit bf816f6972a70785837ccb7dc43f041ab4347b7d model loader: refactored setcontainer code into a method 	7053 commit bf816f6972a70785837ccb7dc43f041ab4347b7d model loader: refactored setcontainer code into a method	1	-1	 7053[0] commit[0] bf816f6972a70785837ccb7dc43f041ab4347b7d[0] model[0] loader[0] refactored[0] setcontainer[0] code[0] into[0] a[0] method[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7243 commit e442f669288d128a1184a44f67c31bf0476f0a22 expressiontransformer: refactored the hex/bin hack 	7243 commit e442f669288d128a1184a44f67c31bf0476f0a22 expressiontransformer: refactored the hex/bin hack	1	-2	 7243[0] commit[0] e442f669288d128a1184a44f67c31bf0476f0a22[0] expressiontransformer[0] refactored[0] the[0] hex/bin[0] hack[-1] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
7295 commit 67e5503f3e149f44ffd93be3df1bfc13de5bb540 refactoring: tidy some of the classdefinitionbuilder.parameter() and methoddefinitionbuilder.parameter() methods. we can use the parameterdefinitionbuilder now. 	7295 commit 67e5503f3e149f44ffd93be3df1bfc13de5bb540 refactoring: tidy some of the classdefinitionbuilder.<br>parameter( and methoddefinitionbuilder.<br>parameter( methods.<br> we can use the parameterdefinitionbuilder now.	1	-1	 7295[0] commit[0] 67e5503f3e149f44ffd93be3df1bfc13de5bb540[0] refactoring[0] tidy[0] some[0] of[0] the[0] classdefinitionbuilder[0] [[Sentence=-1,1=word max, 1-5]] parameter[0] and[0] methoddefinitionbuilder[0] [[Sentence=-1,1=word max, 1-5]] parameter[0] methods[0] [[Sentence=-1,1=word max, 1-5]] we[0] can[0] use[0] the[0] parameterdefinitionbuilder[0] now[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7302 commit 84d2c28ec9b24ef25abb76e8eb4d20372138c675 issue #580: refactor methoddefinitionbuilder and classdefinitionbuilder to use the parameterdefinitionbuilder 	7302 commit 84d2c28ec9b24ef25abb76e8eb4d20372138c675 issue #580: refactor methoddefinitionbuilder and classdefinitionbuilder to use the parameterdefinitionbuilder	1	-1	 7302[0] commit[0] 84d2c28ec9b24ef25abb76e8eb4d20372138c675[0] issue[0] #580[0] refactor[0] methoddefinitionbuilder[0] and[0] classdefinitionbuilder[0] to[0] use[0] the[0] parameterdefinitionbuilder[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7312 commit b59caf25a9149ae9a7da17f5c412893a01bfc57c issue #580: methoddefinitionbuilder: internal refactoring 	7312 commit b59caf25a9149ae9a7da17f5c412893a01bfc57c issue #580: methoddefinitionbuilder: internal refactoring	1	-1	 7312[0] commit[0] b59caf25a9149ae9a7da17f5c412893a01bfc57c[0] issue[0] #580[0] methoddefinitionbuilder[0] internal[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7362 commit b4dce0c7d86f02760a32054e5ee3dc2bb6552b5b issue #691: ceylondoc bug in abbreviated optional generic type (refactored into method and explaining comment) 	7362 commit b4dce0c7d86f02760a32054e5ee3dc2bb6552b5b issue #691: ceylondoc bug in abbreviated optional generic type (refactored into method and explaining comment)	1	-1	 7362[0] commit[0] b4dce0c7d86f02760a32054e5ee3dc2bb6552b5b[0] issue[0] #691[0] ceylondoc[0] bug[0] in[0] abbreviated[0] optional[0] generic[0] type[0] refactored[0] into[0] method[0] and[0] explaining[0] comment[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7419 commit 71f73461687622b0807fe33f44c35eff1062d6ea update and refactor makeatmodule/makeatpackage these two methods return the module or package annotation that must be added to a class for ceylon metadata availability, which was previously contained in an object but now is only an annotation. 	7419 commit 71f73461687622b0807fe33f44c35eff1062d6ea update and refactor makeatmodule/makeatpackage these two methods return the module or package annotation that must be added to a class for ceylon metadata availability, which was previously contained in an object but now is only an annotation.	1	-1	 7419[0] commit[0] 71f73461687622b0807fe33f44c35eff1062d6ea[0] update[0] and[0] refactor[0] makeatmodule/makeatpackage[0] these[0] two[0] methods[0] return[0] the[0] module[0] or[0] package[0] annotation[0] that[0] must[0] be[0] added[0] to[0] a[0] class[0] for[0] ceylon[0] metadata[0] availability[0] which[0] was[0] previously[0] contained[0] in[0] an[0] object[0] but[0] now[0] is[0] only[0] an[0] annotation[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7982 commit 41e54f296649a04f887dacc8241e4de047ac2eea classtransformer: method transformation: more refactoring 	7982 commit 41e54f296649a04f887dacc8241e4de047ac2eea classtransformer: method transformation: more refactoring	1	-1	 7982[0] commit[0] 41e54f296649a04f887dacc8241e4de047ac2eea[0] classtransformer[0] method[0] transformation[0] more[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8181 commit bec1f4eefad5dbfab015a6cd9c47d24ba35174c5 issue #564: refactor classtransformer a little more, so now we have a transformmethod(method); note this changes the order of method declarations in the transformed java 	8181 commit bec1f4eefad5dbfab015a6cd9c47d24ba35174c5 issue #564: refactor classtransformer a little more, so now we have a transformmethod(method) note this changes the order of method declarations in the transformed java	1	-1	 8181[0] commit[0] bec1f4eefad5dbfab015a6cd9c47d24ba35174c5[0] issue[0] #564[0] refactor[0] classtransformer[0] a[0] little[0] more[0] so[0] now[0] we[0] have[0] a[0] transformmethod[0] method[0] note[0] this[0] changes[0] the[0] order[0] of[0] method[0] declarations[0] in[0] the[0] transformed[0] java[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8184 commit fda0c8297f8fbdcf3f5841c3e88594b83e95e572 issue #564: refactor classtransformer.transform(tree.anymethod) so that most of it works with just the method model 	8184 commit fda0c8297f8fbdcf3f5841c3e88594b83e95e572 issue #564: refactor classtransformer.<br>transform(tree.<br>anymethod) so that most of it works with just the method model	1	-1	 8184[0] commit[0] fda0c8297f8fbdcf3f5841c3e88594b83e95e572[0] issue[0] #564[0] refactor[0] classtransformer[0] [[Sentence=-1,1=word max, 1-5]] transform[0] tree[0] [[Sentence=-1,1=word max, 1-5]] anymethod[0] so[0] that[0] most[0] of[0] it[0] works[0] with[0] just[0] the[0] method[0] model[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8281 commit 9aea88ab2043305f5910e7a41d1235c0550f3865 refactor the transformation of methods so it can be done using a separate specifier 	8281 commit 9aea88ab2043305f5910e7a41d1235c0550f3865 refactor the transformation of methods so it can be done using a separate specifier	1	-1	 8281[0] commit[0] 9aea88ab2043305f5910e7a41d1235c0550f3865[0] refactor[0] the[0] transformation[0] of[0] methods[0] so[0] it[0] can[0] be[0] done[0] using[0] a[0] separate[0] specifier[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8362 commit e939b31660c460daea63b837bec9ebc0ea57cc3e refactoring to reuse concretemembersfromsuperinterfaces() for objectdefinition and objectarguments as well as classes. 	8362 commit e939b31660c460daea63b837bec9ebc0ea57cc3e refactoring to reuse concretemembersfromsuperinterfaces( for objectdefinition and objectarguments as well as classes.	1	-1	 8362[0] commit[0] e939b31660c460daea63b837bec9ebc0ea57cc3e[0] refactoring[0] to[0] reuse[0] concretemembersfromsuperinterfaces[0] for[0] objectdefinition[0] and[0] objectarguments[0] as[0] well[0] as[0] classes[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8374 commit 10e888884e30d89778841910b733e63a393f1aad concrete interface members: refactoring to allow generating overload methods when one a model (no tree.*) is available. 	8374 commit 10e884e30d89778841910b733e63a393f1ad concrete interface members: refactoring to allow generating overload methods when one a model (no treetree is available.	2	-1	 8374[0] commit[0] 10e888884e30d89778841910b733e63a393f1aad/10e884e30d89778841910b733e63a393f1ad[0][+0.6 MultipleLetters] concrete[0] interface[0] members[0] refactoring[0] to[0] allow[0] generating[0] overload[0] methods[0] when[0] one[0] a[0] model[0] no[0] tree[0] is[0] available[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
8409 commit a43ca456869d420d87dbfc38c3ec06d8ee314b2d refactor the invocation builder, especially the namedargumentinvocationbuilder because it was getting beyond a joke. 	8409 commit a43ca456869d420d87dbfc38c3ec06d8ee314b2d refactor the invocation builder, especially the namedargumentinvocationbuilder because it was getting beyond a joke.	2	-1	 8409[0] commit[0] a43ca456869d420d87dbfc38c3ec06d8ee314b2d[0] refactor[0] the[0] invocation[0] builder[0] especially[0] the[0] namedargumentinvocationbuilder[0] because[0] it[0] was[0] getting[0] beyond[0] a[0] joke[1] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
8412 commit 75f9dc1a97ddb30851a3cdd33cbbc65cfc21bcc4 ceylontransformer: refactor transform(anyattribute) so we can construct an attribute with only an attribute model available (as is the case for a attributeargument). 	8412 commit 75f9dc1a97ddb30851a3cdd33cbbc65cfc21bcc4 ceylontransformer: refactor transform(anyattribute) so we can construct an attribute with only an attribute model available (as is the case for a attributeargument)	1	-1	 8412[0] commit[0] 75f9dc1a97ddb30851a3cdd33cbbc65cfc21bcc4[0] ceylontransformer[0] refactor[0] transform[0] anyattribute[0] so[0] we[0] can[0] construct[0] an[0] attribute[0] with[0] only[0] an[0] attribute[0] model[0] available[0] as[0] is[0] the[0] case[0] for[0] a[0] attributeargument[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8434 commit 275a6f10856246347c6d5a6b12c224eded9aeeb4 reflectionmodelloader: refactored class loading in every module into findclassinmodules() (#495) 	8434 commit 275a6f10856246347c6d5a6b12c224eded9aeeb4 reflectionmodelloader: refactored class loading in every module into findclassinmodules( (#495)	1	-1	 8434[0] commit[0] 275a6f10856246347c6d5a6b12c224eded9aeeb4[0] reflectionmodelloader[0] refactored[0] class[0] loading[0] in[0] every[0] module[0] into[0] findclassinmodules[0] (#495[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8446 commit 71d095963287e7eaf9ffc7be548eaf37186e3a53 abstracttransformer: refactor getdeclarationname() -  makedeclarationname() and getfqdeclarationname() -  getdeclarationname(); rewrite what was getfqdeclarationname() so that it's at least vaguely understandable. 	8446 commit 71d095963287e7eaf9ffc7be548eaf37186e3a53 abstracttransformer: refactor getdeclarationname( -  makedeclarationname( and getfqdeclarationname( -  getdeclarationname( rewrite what was getfqdeclarationname( so that it's at least vaguely understandable.	1	-2	 8446[0] commit[0] 71d095963287e7eaf9ffc7be548eaf37186e3a53[0] abstracttransformer[0] refactor[0] getdeclarationname[0] makedeclarationname[0] and[0] getfqdeclarationname[0] getdeclarationname[0] rewrite[0] what[0] was[0] getfqdeclarationname[0] so[0] that[0] it's[0] at[0] least[0] vaguely[-1] understandable[0] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
8512 commit 82e2eb92d62e0a2dcc98b4042c36c9e879082608 refactor 	8512 commit 82e2eb92d62e0a2dcc98b4042c36c9e879082608 refactor	1	-1	 8512[0] commit[0] 82e2eb92d62e0a2dcc98b4042c36c9e879082608[0] refactor[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8513 commit 91260f442e21d54f55a62bf3af9ad0bd5b7dce85 refactor 	8513 commit 91260f442e21d54f55a62bf3af9ad0bd5b7dce85 refactor	1	-1	 8513[0] commit[0] 91260f442e21d54f55a62bf3af9ad0bd5b7dce85[0] refactor[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8514 commit 6826e651afb31aa9a93c35c62fab4044ddde4a25 refactor 	8514 commit 6826e651afb31a9a93c35c62fab4044dde4a25 refactor	2	-1	 8514[0] commit[0] 6826e651afb31aa9a93c35c62fab4044ddde4a25/6826e651afb31a9a93c35c62fab4044dde4a25[0][+0.6 MultipleLetters] refactor[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
8515 commit 74be2c3b77e25b6b79a32282f2a960d902b09c33 refactor 	8515 commit 74be2c3b77e25b6b79a32282f2a960d902b09c33 refactor	1	-1	 8515[0] commit[0] 74be2c3b77e25b6b79a32282f2a960d902b09c33[0] refactor[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8516 commit f14f8f621f0a7d23cdfc2ba88581de4ffe246d4d refactor 	8516 commit f14f8f621f0a7d23cdfc2ba88581de4ffe246d4d refactor	1	-1	 8516[0] commit[0] f14f8f621f0a7d23cdfc2ba88581de4ffe246d4d[0] refactor[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8521 commit 30ca70b5ff698a7ef445bd5405467c2eeb6df052 refactor how we build nested classes, so that it works for local as well as inner classes. 	8521 commit 30ca70b5ff698a7ef445bd5405467c2eeb6df052 refactor how we build nested classes, so that it works for local as well as inner classes.	1	-1	 8521[0] commit[0] 30ca70b5ff698a7ef445bd5405467c2eeb6df052[0] refactor[0] how[0] we[0] build[0] nested[0] classes[0] so[0] that[0] it[0] works[0] for[0] local[0] as[0] well[0] as[0] inner[0] classes[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8537 commit 7b10b877a09392d3cb60092a62fc49de856ee55f more refactoring, encapsulating generation of idents 	8537 commit 7b10b877a09392d3cb60092a62fc49de856ee55f more refactoring, encapsulating generation of idents	1	-1	 8537[0] commit[0] 7b10b877a09392d3cb60092a62fc49de856ee55f[0] more[0] refactoring[0] encapsulating[0] generation[0] of[0] idents[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8608 commit e2fd3a12648971f2d616230e41f003670c417e35 ceylondoctooltest - small refactoring 	8608 commit e2fd3a12648971f2d616230e41f003670c417e35 ceylondoctooltest - small refactoring	1	-1	 8608[0] commit[0] e2fd3a12648971f2d616230e41f003670c417e35[0] ceylondoctooltest[0] small[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8617 commit 94e3a9e6b8c910201acd686bae969d45b51046a7 issue #478: refactor makejavatype() so that it generates type parameters for qualifying types, not just the inner-most type 	8617 commit 94e3a9e6b8c910201acd686bae969d45b51046a7 issue #478: refactor makejavatype( so that it generates type parameters for qualifying types, not just the inner-most type	1	-1	 8617[0] commit[0] 94e3a9e6b8c910201acd686bae969d45b51046a7[0] issue[0] #478[0] refactor[0] makejavatype[0] so[0] that[0] it[0] generates[0] type[0] parameters[0] for[0] qualifying[0] types[0] not[0] just[0] the[0] inner[0] most[0] type[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8658 commit 381f38767a4d03111f036e7dceaf4dfb67dc883b invocationbuilder: more refactoring of invocationbuilder 	8658 commit 381f38767a4d0311f036e7dceaf4dfb67dc883b invocationbuilder: more refactoring of invocationbuilder	1	-1	 8658[0] commit[0] 381f38767a4d03111f036e7dceaf4dfb67dc883b/381f38767a4d0311f036e7dceaf4dfb67dc883b[0] invocationbuilder[0] more[0] refactoring[0] of[0] invocationbuilder[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8661 commit 43f24564322456abdf1e7c7e84e25edb393a0010 issue #453: refactor classdefinitionbuilder and invocationbuilder so that invocationbuilder is responsible for generating calls to super() 	8661 commit 43f24564322456abdf1e7c7e84e25edb393a0010 issue #453: refactor classdefinitionbuilder and invocationbuilder so that invocationbuilder is responsible for generating calls to super(	1	-1	 8661[0] commit[0] 43f24564322456abdf1e7c7e84e25edb393a0010[0] issue[0] #453[0] refactor[0] classdefinitionbuilder[0] and[0] invocationbuilder[0] so[0] that[0] invocationbuilder[0] is[0] responsible[0] for[0] generating[0] calls[0] to[0] super[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8703 commit c36aaaa4c946dc2310b702b2865a13a022c2ff1a tests: repofilehandler logging refactoring 	8703 commit c36a4c946dc2310b702b2865a13a022c2ff1a tests: repofilehandler logging refactoring	2	-1	 8703[0] commit[0] c36aaaa4c946dc2310b702b2865a13a022c2ff1a/c36a4c946dc2310b702b2865a13a022c2ff1a[0][+0.6 MultipleLetters] tests[0] repofilehandler[0] logging[0] refactoring[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
8865 commit d0c9575bfec990d74abade133fa79bbaa0f862fc abstracttransformer refactored makenonemptytest in two parts 	8865 commit d0c9575bfec990d74abade133fa79bba0f862fc abstracttransformer refactored makenonemptytest in two parts	1	-1	 8865[0] commit[0] d0c9575bfec990d74abade133fa79bbaa0f862fc/d0c9575bfec990d74abade133fa79bba0f862fc[0] abstracttransformer[0] refactored[0] makenonemptytest[0] in[0] two[0] parts[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8964 commit affdb619a5880ecb8f2b904ef38e329b7d883e96 ceylondoc - refactoring asserts in test 	8964 commit affdb619a5880ecb8f2b904ef38e329b7d883e96 ceylondoc - refactoring asserts in test	1	-1	 8964[0] commit[0] affdb619a5880ecb8f2b904ef38e329b7d883e96[0] ceylondoc[0] refactoring[0] asserts[0] in[0] test[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9572 commit e3f4b90c0bfe784ef977cbe8616398ae7b3ac415 big refactoring of expressiontransformer - reorganised methods into meaningful sections - replaced every reference of tree.* into qualified type names - made a few methods private - renamed some badly named methods and interfaces - added a few fixme - did not change a single line of code functionally 	9572 commit e3f4b90c0bfe784ef977cbe8616398ae7b3ac415 big refactoring of expressiontransformer - reorganised methods into meaningful sections - replaced every reference of tree.<br> into qualified type names - made a few methods private - renamed some badly named methods and interfaces - added a few fixme - did not change a single line of code functionally	1	-1	 9572[0] commit[0] e3f4b90c0bfe784ef977cbe8616398ae7b3ac415[0] big[0] refactoring[0] of[0] expressiontransformer[0] reorganised[0] methods[0] into[0] meaningful[0] sections[0] replaced[0] every[0] reference[0] of[0] tree[0] [[Sentence=-1,1=word max, 1-5]] into[0] qualified[0] type[0] names[0] made[0] a[0] few[0] methods[0] private[0] renamed[0] some[0] badly[-1][--1 LastWordBoosterStrength] named[0] methods[0] and[0] interfaces[0] added[0] a[0] few[0] fixme[0] did[0] not[0] change[0] a[0] single[0] line[0] of[0] code[0] functionally[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9787 commit 510da4f6d49b75188cfd8dfe04328552b83da106 some more refactoring for the creation of getter and setter calls in expressions. introduction of a flag that determines if we're currently handling an expressionstatement. 	9787 commit 510da4f6d49b75188cfd8dfe04328552b83da106 some more refactoring for the creation of getter and setter calls in expressions.<br> introduction of a flag that determines if we're currently handling an expressionstatement.	1	-1	 9787[0] commit[0] 510da4f6d49b75188cfd8dfe04328552b83da106[0] some[0] more[0] refactoring[0] for[0] the[0] creation[0] of[0] getter[0] and[0] setter[0] calls[0] in[0] expressions[0] [[Sentence=-1,1=word max, 1-5]] introduction[0] of[0] a[0] flag[0] that[0] determines[0] if[0] we're[0] currently[0] handling[0] an[0] expressionstatement[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9815 commit d9e147ddcc9de27e1a4f1ea653ef05f68bb611b8 expressiontransformer: #74: refactored transformbinaryoperation to be able to use it for #74 	9815 commit d9e147ddcc9de27e1a4f1ea653ef05f68bb611b8 expressiontransformer: #74: refactored transformbinaryoperation to be able to use it for #74	1	-1	 9815[0] commit[0] d9e147ddcc9de27e1a4f1ea653ef05f68bb611b8[0] expressiontransformer[0] #74[0] refactored[0] transformbinaryoperation[0] to[0] be[0] able[0] to[0] use[0] it[0] for[0] #74[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9905 commit d6c13b39cc8e66f663368161872403bf45f20e3e refactoring for #226: pass around a typeparameter rather than split it up in parts 	9905 commit d6c13b39cc8e66f663368161872403bf45f20e3e refactoring for #226: pass around a typeparameter rather than split it up in parts	1	-1	 9905[0] commit[0] d6c13b39cc8e66f663368161872403bf45f20e3e[0] refactoring[0] for[0] #226[0] pass[0] around[0] a[0] typeparameter[0] rather[0] than[0] split[0] it[0] up[0] in[0] parts[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
10031 commit 071e858472022a580ae4713dd9711145d61debff util: some refactoring and added getdoc for package/module 	10031 commit 071e858472022a580ae4713dd971145d61debff util: some refactoring and added getdoc for package/module	1	-1	 10031[0] commit[0] 071e858472022a580ae4713dd9711145d61debff/071e858472022a580ae4713dd971145d61debff[0] util[0] some[0] refactoring[0] and[0] added[0] getdoc[0] for[0] package/module[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
10167 commit 672695f92cd49c752296cf0400a1486acb3e38f4 structuretest: some refactoring for getting a module archive name (jar/car) 	10167 commit 672695f92cd49c752296cf0400a1486acb3e38f4 structuretest: some refactoring for getting a module archive name (jar/car)	1	-1	 10167[0] commit[0] 672695f92cd49c752296cf0400a1486acb3e38f4[0] structuretest[0] some[0] refactoring[0] for[0] getting[0] a[0] module[0] archive[0] name[0] jar/car[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
10173 commit 47dfa0eab47065df83ebb09f300377678a1be5b4 jaroutputrepositorymanager.progressivejar: refactoring some stuff 	10173 commit 47dfa0eab47065df83ebb09f300377678a1be5b4 jaroutputrepositorymanager.<br>progressivejar: refactoring some stuff	1	-1	 10173[0] commit[0] 47dfa0eab47065df83ebb09f300377678a1be5b4[0] jaroutputrepositorymanager[0] [[Sentence=-1,1=word max, 1-5]] progressivejar[0] refactoring[0] some[0] stuff[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
10352 commit 0da66f6f1f4c0f567ff283da37fe206fd78aac87 modelloader: refactored some methods 	10352 commit 0da66f6f1f4c0f567ff283da37fe206fd78ac87 modelloader: refactored some methods	1	-1	 10352[0] commit[0] 0da66f6f1f4c0f567ff283da37fe206fd78aac87/0da66f6f1f4c0f567ff283da37fe206fd78ac87[0] modelloader[0] refactored[0] some[0] methods[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
10460 commit bb6cab37026a07d5411012d33ff88bbdc471aaa6 refactor to eliminate copy/pasted blocks 	10460 commit bb6cab37026a07d5411012d33ff88bbdc471a6 refactor to eliminate copy/pasted blocks	2	-1	 10460[0] commit[0] bb6cab37026a07d5411012d33ff88bbdc471aaa6/bb6cab37026a07d5411012d33ff88bbdc471a6[0][+0.6 MultipleLetters] refactor[0] to[0] eliminate[0] copy/pasted[0] blocks[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
10690 commit 3fffb2177d310b5d994ec26739515b004dc85d40 major refactor of the transformers extracting as much common code into abstracttransformer. 	10690 commit 3ffb2177d310b5d994ec26739515b004dc85d40 major refactor of the transformers extracting as much common code into abstracttransformer.	1	-1	 10690[0] commit[0] 3fffb2177d310b5d994ec26739515b004dc85d40/3ffb2177d310b5d994ec26739515b004dc85d40[0] major[0] refactor[0] of[0] the[0] transformers[0] extracting[0] as[0] much[0] common[0] code[0] into[0] abstracttransformer[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
10750 commit 2ca56c7061f54199987871297f1cf4660fb0a499 refactor: change *transformer.convert* to transform* 	10750 commit 2ca56c7061f5419987871297f1cf4660fb0a499 refactor: change *transformer.<br>convert* to transform*	1	-1	 10750[0] commit[0] 2ca56c7061f54199987871297f1cf4660fb0a499/2ca56c7061f5419987871297f1cf4660fb0a499[0] refactor[0] change[0] transformer[0] [[Sentence=-1,1=word max, 1-5]] convert[0] to[0] transform[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
10862 commit 46092911ca5262d6d13ad6f8247c5856854c0536 refactored makeat* methods 	10862 commit 46092911ca5262d6d13ad6f8247c5856854c0536 refactored makeat* methods	1	-1	 10862[0] commit[0] 46092911ca5262d6d13ad6f8247c5856854c0536[0] refactored[0] makeat[0] methods[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
11479 commit 71e005f7f7a72bf9277a4447ea36299c273b70c9 refactor 	11479 commit 71e005f7f7a72bf9277a447ea36299c273b70c9 refactor	1	-1	 11479[0] commit[0] 71e005f7f7a72bf9277a4447ea36299c273b70c9/71e005f7f7a72bf9277a447ea36299c273b70c9[0] refactor[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
11483 commit 66cc58f5b1355820e105ba70ddf6583a18c2deed start refactoring 	11483 commit 66cc58f5b1355820e105ba70ddf6583a18c2deed start refactoring	1	-1	 11483[0] commit[0] 66cc58f5b1355820e105ba70ddf6583a18c2deed[0] start[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
