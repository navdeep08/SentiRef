Extract Method	Translation	Positive	Negative	EmotionRationale
130 commit 0a73451dd67a4ffe07e30196c78fd4e344386749 drools-1236 mbean aggregation of statistics mechanism (#877) * drools-1236 mbean aggregation of statistics mechanism * drools-1236 mbean aggregation of statistics mechanism refactoring mbean into different stateful, stateless providing tailored methods and also better performances. 	130 commit 0a73451dd67a4ffe07e30196c78fd4e344386749 drools-1236 mbean aggregation of statistics mechanism (#877) * drools-1236 mbean aggregation of statistics mechanism * drools-1236 mbean aggregation of statistics mechanism refactoring mbean into different stateful, stateless providing tailored methods and also better performances.	1	-1	 130[0] commit[0] 0a73451dd67a4ffe07e30196c78fd4e344386749[0] drools[0] -1236[0] mbean[0] aggregation[0] of[0] statistics[0] mechanism[0] (#877[0] drools[0] -1236[0] mbean[0] aggregation[0] of[0] statistics[0] mechanism[0] drools[0] -1236[0] mbean[0] aggregation[0] of[0] statistics[0] mechanism[0] refactoring[0] mbean[0] into[0] different[0] stateful[0] stateless[0] providing[0] tailored[0] methods[0] and[0] also[0] better[0] performances[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
145 commit b274c62d077b0651fe945b1075640af2a085c5c8 drools-1235 mbean naming rework (#866) * fixing kie-container monitoring * drools-1235 mbean naming rework * give kiecontainer an optional user defined name * kiecontainer mbean and various refactorings. * jargon: containerid * jargon: configuredreleaseid, resolvedreleaseid * unit testing * assuming the containerid can be "recycled" on dispose. * introducing test for kieservices api with containerid. * fixing other tests. * avoid using lock and leverage concurrentmap without java8 * fixing objectname conventions. 	145 commit b274c62d077b0651fe945b1075640af2a085c5c8 drools-1235 mbean naming rework (#866) * fixing kie-container monitoring * drools-1235 mbean naming rework * give kiecontainer an optional user defined name * kiecontainer mbean and various refactorings.<br> * jargon: containerid * jargon: configuredreleaseid, resolvedreleaseid * unit testing * assuming the containerid can be "recycled" on dispose.<br> * introducing test for kieservices api with containerid.<br> * fixing other tests.<br> * avoid using lock and leverage concurrentmap without java8 * fixing objectname conventions.	2	-2	 145[0] commit[0] b274c62d077b0651fe945b1075640af2a085c5c8[0] drools[0] -1235[0] mbean[0] naming[0] rework[0] (#866[0] fixing[0] kie[0] container[0] monitoring[0] drools[0] -1235[0] mbean[0] naming[0] rework[0] give[0] kiecontainer[0] an[0] optional[0] user[0] defined[0] name[0] kiecontainer[0] mbean[0] and[0] various[0] refactorings[0] [[Sentence=-1,1=word max, 1-5]] jargon[0] containerid[0] jargon[0] configuredreleaseid[0] resolvedreleaseid[1] unit[0] testing[0] assuming[0] the[0] containerid[0] can[0] be[0] recycled[0] on[0] dispose[-1] [[Sentence=-2,2=word max, 1-5]] introducing[0] test[0] for[0] kieservices[0] api[0] with[0] containerid[0] [[Sentence=-1,1=word max, 1-5]] fixing[0] other[0] tests[0] [[Sentence=-1,1=word max, 1-5]] avoid[-1] using[0] lock[0] and[0] leverage[0] concurrentmap[0] without[0] java8[0] fixing[0] objectname[0] conventions[0] [[Sentence=-2,1=word max, 1-5]][[[2,-2 max of sentences]]]
309 commit 8d52a6a3492cbf49354060a7bd80616fb2ed7f2a [drools-1025] incremental rule refactor   new tests 	309 commit 8d52a6a3492cbf49354060a7bd80616fb2ed7f2a [drools-1025] incremental rule refactor   new tests	1	-1	 309[0] commit[0] 8d52a6a3492cbf49354060a7bd80616fb2ed7f2a[0] [drools[0] -1025][0] incremental[0] rule[0] refactor[0] new[0] tests[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
410 commit 40e17580a1b121f15649e4bf712601872ba1e0d8 [guvnor-2279] exposing mavensession. * exposing mavensession from mavenembedder. * refactored mavenprojectloader.getmavenembedder() to expose mavenembedder. 	410 commit 40e17580a1b121f15649e4bf712601872ba1e0d8 [guvnor-2279] exposing mavensession.<br> * exposing mavensession from mavenembedder.<br> * refactored mavenprojectloader.<br>getmavenembedder( to expose mavenembedder.	1	-2	 410[0] commit[0] 40e17580a1b121f15649e4bf712601872ba1e0d8[0] [guvnor[0] -2279][0] exposing[0] mavensession[0] [[Sentence=-1,1=word max, 1-5]] exposing[0] mavensession[0] from[0] mavenembedder[0] [[Sentence=-1,1=word max, 1-5]] refactored[0] mavenprojectloader[0] [[Sentence=-1,1=word max, 1-5]] getmavenembedder[0] to[0] expose[-1] mavenembedder[0] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
424 commit eda1a8b54bf1f4c39d13a1c543227595036663a0 [bz-1267510] treat .gdst and .scgd as standard kie resources * .gdst (guided dtables) and .scgd (guided score cards) were treated in a special way using formatconverters which caused issues during compilation as the resulting drls were copied in the compiled kjar. the behavior was changed to be in line with other resources like .xls dtables where the drl representation is create at runtime, on the fly. * ruletemplateconverter was refactored to ruletemplateprovider to have the name in sync with the others * the formatconverter abstraction was removed completely. all supported resources should be treated equaly to avoid different behavior for different resources (very much like the related bz reported) * integration tests for .gdst with and without dsl sentectes added 	424 commit eda1a8b54bf1f4c39d13a1c54322759503663a0 [bz-1267510] treat .<br>gdst and .<br>scgd as standard kie resources * .<br>gdst (guided dtables) and .<br>scgd (guided score cards) were treated in a special way using formatconverters which caused issues during compilation as the resulting drls were copied in the compiled kjar.<br> the behavior was changed to be in line with other resources like .<br>xls dtables where the drl representation is create at runtime, on the fly.<br> * ruletemplateconverter was refactored to ruletemplateprovider to have the name in sync with the others * the formatconverter abstraction was removed completely.<br> all supported resources should be treated equaly to avoid different behavior for different resources (very much like the related bz reported) * integration tests for .<br>gdst with and without dsl sentectes added	2	-2	 424[0] commit[0] eda1a8b54bf1f4c39d13a1c543227595036663a0/eda1a8b54bf1f4c39d13a1c54322759503663a0[0] [bz[0] -1267510][0] treat[1] [[Sentence=-1,2=word max, 1-5]] gdst[0] and[0] [[Sentence=-1,1=word max, 1-5]] scgd[0] as[0] standard[0] kie[0] resources[0] [[Sentence=-1,1=word max, 1-5]] gdst[0] guided[0] dtables[0] and[0] [[Sentence=-1,1=word max, 1-5]] scgd[0] guided[0] score[0] cards[0] were[0] treated[0] in[0] a[0] special[1] way[0] using[0] formatconverters[0] which[0] caused[0] issues[0] during[0] compilation[0] as[0] the[0] resulting[0] drls[0] were[0] copied[0] in[0] the[0] compiled[0] kjar[0] [[Sentence=-1,2=word max, 1-5]] the[0] behavior[0] was[0] changed[0] to[0] be[0] in[0] line[0] with[0] other[0] resources[0] like[0] [[Sentence=-1,1=word max, 1-5]] xls[0] dtables[0] where[0] the[0] drl[0] representation[0] is[0] create[0] at[0] runtime[0] on[0] the[0] fly[0] [[Sentence=-1,1=word max, 1-5]] ruletemplateconverter[0] was[0] refactored[0] to[0] ruletemplateprovider[0] to[0] have[0] the[0] name[0] in[0] sync[0] with[0] the[0] others[0] the[0] formatconverter[0] abstraction[0] was[0] removed[0] completely[0] [[Sentence=-1,1=word max, 1-5]] all[0] supported[1] resources[0] should[0] be[0] treated[0] equaly[0] to[0] avoid[-1] different[0] behavior[0] for[0] different[0] resources[0] very[0] much[0] like[0] the[0] related[0] bz[0] reported[0] integration[0] tests[0] for[0] [[Sentence=-2,2=word max, 1-5]] gdst[0] with[0] and[0] without[0] dsl[0] sentectes[0] added[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
472 commit 71e9d102592a1054b4d55aa2736dedf790fc4c89 [drools-664] implement left tuple delete in reactiveobject   minor refactor 	472 commit 71e9d102592a1054b4d55a2736dedf790fc4c89 [drools-664] implement left tuple delete in reactiveobject   minor refactor	1	-1	 472[0] commit[0] 71e9d102592a1054b4d55aa2736dedf790fc4c89/71e9d102592a1054b4d55a2736dedf790fc4c89[0] [drools[0] -664][0] implement[0] left[0] tuple[0] delete[0] in[0] reactiveobject[0] minor[0] refactor[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
832 commit 3132b8febc5c316d5cc1b366df7af68db10c80c4 drools-488 "pluggable and encapsulated knowledge types" -refactored undecided to decided. drools-488 "pluggable and encapsulated knowledge types" -introduced _.neg and removed the dfl, jtms pos/neg fact handle and neg entry point drools-488 "pluggable and encapsulated knowledge types" -added correct handling of negconstraint for declared masks -fixed fh cloning and negconstraint cloning drools-488 "pluggable and encapsulated knowledge types" -negatable support must be turned on for !_.neg constraint injection drools-488 "pluggable and encapsulated knowledge types" -better wm and tms separation, as a pipeline drools-488 "pluggable and encapsulated knowledge types" -better wm and tms separation, as a pipeline -neg is now separate map in the objectstore 	832 commit 3132b8febc5c316d5cc1b366df7af68db10c80c4 drools-488 "pluggable and encapsulated knowledge types" -refactored undecided to decided.<br> drools-488 "pluggable and encapsulated knowledge types" -introduced _.<br>neg and removed the dfl, jtms pos/neg fact handle and neg entry point drools-488 "pluggable and encapsulated knowledge types" -added correct handling of negconstraint for declared masks -fixed fh cloning and negconstraint cloning drools-488 "pluggable and encapsulated knowledge types" -negatable support must be turned on for !_.<br>neg constraint injection drools-488 "pluggable and encapsulated knowledge types" -better wm and tms separation, as a pipeline drools-488 "pluggable and encapsulated knowledge types" -better wm and tms separation, as a pipeline -neg is now separate map in the objectstore	1	-1	 832[0] commit[0] 3132b8febc5c316d5cc1b366df7af68db10c80c4[0] drools[0] -488[0] pluggable[0] and[0] encapsulated[0] knowledge[0] types[0] refactored[0] undecided[0] to[0] decided[0] [[Sentence=-1,1=word max, 1-5]] drools[0] -488[0] pluggable[0] and[0] encapsulated[0] knowledge[0] types[0] introduced[0] _[0] [[Sentence=-1,1=word max, 1-5]] neg[0] and[0] removed[0] the[0] dfl[0] jtms[0] pos/neg[0] fact[0] handle[0] and[0] neg[0] entry[0] point[0] drools[0] -488[0] pluggable[0] and[0] encapsulated[0] knowledge[0] types[0] added[0] correct[0] handling[0] of[0] negconstraint[0] for[0] declared[0] masks[0] fixed[0] fh[0] cloning[0] and[0] negconstraint[0] cloning[0] drools[0] -488[0] pluggable[0] and[0] encapsulated[0] knowledge[0] types[0] negatable[0] support[0] must[0] be[0] turned[0] on[0] for[0] !_[0] [[Sentence=-1,1=word max, 1-5]] neg[0] constraint[0] injection[0] drools[0] -488[0] pluggable[0] and[0] encapsulated[0] knowledge[0] types[0] better[0] wm[0] and[0] tms[0] separation[0] as[0] a[0] pipeline[0] drools[0] -488[0] pluggable[0] and[0] encapsulated[0] knowledge[0] types[0] better[0] wm[0] and[0] tms[0] separation[0] as[0] a[0] pipeline[0] neg[0] is[0] now[0] separate[0] map[0] in[0] the[0] objectstore[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
959 commit f77a3fc01d171f1f58826beeac39ef7560ade5e9 drools-488 "pluggable and encapsulated knowledge types" -refactoring value to mode drools-488 "pluggable and encapsulated knowledge types" -refactoring value to mode 	959 commit f77a3fc01d171f1f58826beeac39ef7560ade5e9 drools-488 "pluggable and encapsulated knowledge types" -refactoring value to mode drools-488 "pluggable and encapsulated knowledge types" -refactoring value to mode	1	-1	 959[0] commit[0] f77a3fc01d171f1f58826beeac39ef7560ade5e9[0] drools[0] -488[0] pluggable[0] and[0] encapsulated[0] knowledge[0] types[0] refactoring[0] value[0] to[0] mode[0] drools[0] -488[0] pluggable[0] and[0] encapsulated[0] knowledge[0] types[0] refactoring[0] value[0] to[0] mode[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
1627 commit 5679cdc6936556c323044e5eb3a786cc04025ea9 refactor workingmemoryevent* to ruleruntimeevent* 	1627 commit 5679cdc6936556c323044e5eb3a786cc04025ea9 refactor workingmemoryevent* to ruleruntimeevent*	1	-1	 1627[0] commit[0] 5679cdc6936556c323044e5eb3a786cc04025ea9[0] refactor[0] workingmemoryevent[0] to[0] ruleruntimeevent[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
1955 commit 2b8c6d05b4ecd7e6789e3c5711667ddf5c6f22f6 drools-198 separate rete and phreak -going through classes removing isunlinkenabled, and refactoring the related code into phreak/rete separations 	1955 commit 2b8c6d05b4ecd7e6789e3c5711667ddf5c6f22f6 drools-198 separate rete and phreak -going through classes removing isunlinkenabled, and refactoring the related code into phreak/rete separations	1	-1	 1955[0] commit[0] 2b8c6d05b4ecd7e6789e3c5711667ddf5c6f22f6[0] drools[0] -198[0] separate[0] rete[0] and[0] phreak[0] going[0] through[0] classes[0] removing[0] isunlinkenabled[0] and[0] refactoring[0] the[0] related[0] code[0] into[0] phreak/rete[0] separations[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
1979 commit f74fa3dd014cc355f06112fb57badb49403c94d8 minor classpathkieproject refactor 	1979 commit f74fa3dd014cc355f06112fb57badb49403c94d8 minor classpathkieproject refactor	1	-1	 1979[0] commit[0] f74fa3dd014cc355f06112fb57badb49403c94d8[0] minor[0] classpathkieproject[0] refactor[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
2519 commit 0d9658473cdffa52406bc5d0fdee36510d095df3 singlesessioncommandservice.initksession(..) refactor - this makes eventual support for other transaction models (local, container) a lot easier 	2519 commit 0d9658473cdffa52406bc5d0fdee36510d095df3 singlesessioncommandservice.<br>initksession(<br> refactor - this makes eventual support for other transaction models (local, container) a lot easier	1	-1	 2519[0] commit[0] 0d9658473cdffa52406bc5d0fdee36510d095df3[0] singlesessioncommandservice[0] [[Sentence=-1,1=word max, 1-5]] initksession[0] [[Sentence=-1,1=word max, 1-5]] refactor[0] this[0] makes[0] eventual[0] support[0] for[0] other[0] transaction[0] models[0] local[0] container[0] a[0] lot[0] easier[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
2646 commit c095c8f95cadbd5fac7952da6aaa4c13aae1274e refactor gav to releaseid 	2646 commit c095c8f95cadbd5fac7952da6a4c13ae1274e refactor gav to releaseid	2	-1	 2646[0] commit[0] c095c8f95cadbd5fac7952da6aaa4c13aae1274e/c095c8f95cadbd5fac7952da6a4c13ae1274e[0][+0.6 MultipleLetters] refactor[0] gav[0] to[0] releaseid[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
2781 commit 9223077df78e03663b574766098258a6113974a6 refactoring tests to use only the drools 5 api, instead of old drools 4 api 	2781 commit 9223077df78e03663b574766098258a6113974a6 refactoring tests to use only the drools 5 api, instead of old drools 4 api	1	-1	 2781[0] commit[0] 9223077df78e03663b574766098258a6113974a6[0] refactoring[0] tests[0] to[0] use[0] only[0] the[0] drools[0] 5[0] api[0] instead[0] of[0] old[0] drools[0] 4[0] api[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
2823 commit cade627879545075e5ae68e7c1e7adfb0033768b jbrules-3664 beliefsystem should keep each logically asserted object -now keeps track of all logically inserted objects in the beliefset -big refactor and cleanup of logical insertions -tms per entrypoint. -better consistency 	2823 commit cade627879545075e5ae68e7c1e7adfb0033768b jbrules-3664 beliefsystem should keep each logically asserted object -now keeps track of all logically inserted objects in the beliefset -big refactor and cleanup of logical insertions -tms per entrypoint.<br> -better consistency	1	-1	 2823[0] commit[0] cade627879545075e5ae68e7c1e7adfb0033768b[0] jbrules[0] -3664[0] beliefsystem[0] should[0] keep[0] each[0] logically[0] asserted[0] object[0] now[0] keeps[0] track[0] of[0] all[0] logically[0] inserted[0] objects[0] in[0] the[0] beliefset[0] big[0] refactor[0] and[0] cleanup[0] of[0] logical[0] insertions[0] tms[0] per[0] entrypoint[0] [[Sentence=-1,1=word max, 1-5]] better[0] consistency[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3850 commit 117a421201a430869267336c912d83f649d5751b jbrules-3049 improve @typesafe @typesafe wasn't workign too well. so decided to simplify things. now it'll only apply to the pattern that matches the object type from the type declaration. also need to refactor things so that the mvelclassreader can take imports, for things like enums on map keys - without having to fall back to predicate. 	3850 commit 117a421201a430869267336c912d83f649d5751b jbrules-3049 improve @typesafe @typesafe wasn't workign too well.<br> so decided to simplify things.<br> now it'll only apply to the pattern that matches the object type from the type declaration.<br> also need to refactor things so that the mvelclassreader can take imports, for things like enums on map keys - without having to fall back to predicate.	2	-1	 3850[0] commit[0] 117a421201a430869267336c912d83f649d5751b[0] jbrules[0] -3049[0] improve[1] @typesafe[0] @typesafe[0] wasn't[0] workign[0] too[0] well[0] [[Sentence=-1,2=word max, 1-5]] so[0] decided[0] to[0] simplify[0] things[0] [[Sentence=-1,1=word max, 1-5]] now[0] it'll[0] only[0] apply[0] to[0] the[0] pattern[0] that[0] matches[0] the[0] object[0] type[0] from[0] the[0] type[0] declaration[0] [[Sentence=-1,1=word max, 1-5]] also[0] need[0] to[0] refactor[0] things[0] so[0] that[0] the[0] mvelclassreader[0] can[0] take[0] imports[0] for[0] things[0] like[0] enums[0] on[0] map[0] keys[0] without[0] having[0] to[0] fall[0] back[0] to[0] predicate[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
4212 commit 318b116667e631946d636d6f8d2f95c1bca198b9 jbrules-2642 getting tests working for new updated parser. -big refactor of javaconsequencebuilder rewrites to be mvel 'safe' 	4212 commit 318b11667e631946d636d6f8d2f95c1bca198b9 jbrules-2642 getting tests working for new updated parser.<br> -big refactor of javaconsequencebuilder rewrites to be mvel 'safe'	1	-1	 4212[0] commit[0] 318b116667e631946d636d6f8d2f95c1bca198b9/318b11667e631946d636d6f8d2f95c1bca198b9[0] jbrules[0] -2642[0] getting[0] tests[0] working[0] for[0] new[0] updated[0] parser[0] [[Sentence=-1,1=word max, 1-5]] big[0] refactor[0] of[0] javaconsequencebuilder[0] rewrites[0] to[0] be[0] mvel[0] 'safe'[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4261 commit 904381266a0e9d51f37646c0cf345af50d625250 refactored to a single build method to help structure things, will split up again later 	4261 commit 904381266a0e9d51f37646c0cf345af50d625250 refactored to a single build method to help structure things, will split up again later	1	-1	 4261[0] commit[0] 904381266a0e9d51f37646c0cf345af50d625250[0] refactored[0] to[0] a[0] single[0] build[0] method[0] to[0] help[0] structure[0] things[0] will[0] split[0] up[0] again[0] later[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4722 commit 1da47ab5cdd50df3c6e30e7f3d87c5cf839ecbe1 jbrules-2807 refactor workingmemory so all entry points use the same code 	4722 commit 1da47ab5cdd50df3c6e30e7f3d87c5cf839ecbe1 jbrules-2807 refactor workingmemory so all entry points use the same code	1	-1	 4722[0] commit[0] 1da47ab5cdd50df3c6e30e7f3d87c5cf839ecbe1[0] jbrules[0] -2807[0] refactor[0] workingmemory[0] so[0] all[0] entry[0] points[0] use[0] the[0] same[0] code[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6290 commit 388b29d3853777ed880d80675542dcd0f8e01a4d jbrules-1734 drools api -refactored to move org.drools.knowledge.defintions to org.drools.defintion 	6290 commit 388b29d385377ed880d80675542dcd0f8e01a4d jbrules-1734 drools api -refactored to move org.<br>drools.<br>knowledge.<br>defintions to org.<br>drools.<br>defintion	1	-1	 6290[0] commit[0] 388b29d3853777ed880d80675542dcd0f8e01a4d/388b29d385377ed880d80675542dcd0f8e01a4d[0] jbrules[0] -1734[0] drools[0] api[0] refactored[0] to[0] move[0] org[0] [[Sentence=-1,1=word max, 1-5]] drools[0] [[Sentence=-1,1=word max, 1-5]] knowledge[0] [[Sentence=-1,1=word max, 1-5]] defintions[0] to[0] org[0] [[Sentence=-1,1=word max, 1-5]] drools[0] [[Sentence=-1,1=word max, 1-5]] defintion[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7159 commit d436a0906e9ba253c4caba170f9f8decfb21ed46 jbrules-1408: refactoring of ruleflow to act as a pluggable process engine 	7159 commit d436a0906e9ba253c4caba170f9f8decfb21ed46 jbrules-1408: refactoring of ruleflow to act as a pluggable process engine	1	-1	 7159[0] commit[0] d436a0906e9ba253c4caba170f9f8decfb21ed46[0] jbrules[0] -1408[0] refactoring[0] of[0] ruleflow[0] to[0] act[0] as[0] a[0] pluggable[0] process[0] engine[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7161 commit 99d59787362ed96dbc5c73ba9e140221a17a377a jbrules-1408: refactoring of ruleflow to act as a pluggable process engine 	7161 commit 99d59787362ed96dbc5c73ba9e140221a17a377a jbrules-1408: refactoring of ruleflow to act as a pluggable process engine	1	-1	 7161[0] commit[0] 99d59787362ed96dbc5c73ba9e140221a17a377a[0] jbrules[0] -1408[0] refactoring[0] of[0] ruleflow[0] to[0] act[0] as[0] a[0] pluggable[0] process[0] engine[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7649 commit 17a3aa72cad6cb3e5ab5dfa9a69a9c571fcd1bc3 reports from missing ranges. a lot of package and code refactoring, cutting things to pieces. 	7649 commit 17a3a72cad6cb3e5ab5dfa9a69a9c571fcd1bc3 reports from missing ranges.<br> a lot of package and code refactoring, cutting things to pieces.	1	-1	 7649[0] commit[0] 17a3aa72cad6cb3e5ab5dfa9a69a9c571fcd1bc3/17a3a72cad6cb3e5ab5dfa9a69a9c571fcd1bc3[0] reports[0] from[0] missing[0] ranges[0] [[Sentence=-1,1=word max, 1-5]] a[0] lot[0] of[0] package[0] and[0] code[0] refactoring[0] cutting[0] things[0] to[0] pieces[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8231 commit cdb202eec3a3b7bf63b4612857547b2bc23119b9 jbrules-752 refactoring love 	8231 commit cdb202eec3a3b7bf63b4612857547b2bc23119b9 jbrules-752 refactoring love	3	-1	 8231[0] commit[0] cdb202eec3a3b7bf63b4612857547b2bc23119b9[0] jbrules[0] -752[0] refactoring[0] love[2] [[Sentence=-1,3=word max, 1-5]][[[3,-1 max of sentences]]]
8241 commit cdb8994eb6ea9e1eecdb50418c3e843a515f2ebe -refactor for more robust classloading 	8241 commit cdb8994eb6ea9e1eecdb50418c3e843a515f2ebe -refactor for more robust classloading	1	-1	 8241[0] commit[0] cdb8994eb6ea9e1eecdb50418c3e843a515f2ebe[0] refactor[0] for[0] more[0] robust[0] classloading[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8242 commit 32ffa27129735f1165cbb6234d8e7f7d1d71141f -refactor for more robust classloading 	8242 commit 32ffa27129735f1165cbb6234d8e7f7d1d71141f -refactor for more robust classloading	1	-1	 8242[0] commit[0] 32ffa27129735f1165cbb6234d8e7f7d1d71141f[0] refactor[0] for[0] more[0] robust[0] classloading[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8470 commit c739e2c9ea4d01c6a214901b9880ece4ec4d79fc jbrules-816 refactor column to be pattern 	8470 commit c739e2c9ea4d01c6a214901b9880ece4ec4d79fc jbrules-816 refactor column to be pattern	1	-1	 8470[0] commit[0] c739e2c9ea4d01c6a214901b9880ece4ec4d79fc[0] jbrules[0] -816[0] refactor[0] column[0] to[0] be[0] pattern[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8478 commit 7af0694e0e0e0ea4a1488b4ebea44f933a065574 jbrules-816 refactor column to be pattern 	8478 commit 7af0694e0e0e0ea4a1488b4ebea44f933a065574 jbrules-816 refactor column to be pattern	1	-1	 8478[0] commit[0] 7af0694e0e0e0ea4a1488b4ebea44f933a065574[0] jbrules[0] -816[0] refactor[0] column[0] to[0] be[0] pattern[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9214 commit 71ddf22fdc5318fe24ec757abd765c13fa5a7768 jbrules-484 refactor the core reteoo code for sinle and composite propagations -improved the alphanode hashing so it doesn't have to iterate a map on retract/modify 	9214 commit 71ddf22fdc5318fe24ec757abd765c13fa5a7768 jbrules-484 refactor the core reteoo code for sinle and composite propagations -improved the alphanode hashing so it doesn't have to iterate a map on retract/modify	2	-1	 9214[0] commit[0] 71ddf22fdc5318fe24ec757abd765c13fa5a7768[0] jbrules[0] -484[0] refactor[0] the[0] core[0] reteoo[0] code[0] for[0] sinle[0] and[0] composite[0] propagations[0] improved[1] the[0] alphanode[0] hashing[0] so[0] it[0] doesn't[0] have[0] to[0] iterate[0] a[0] map[0] on[0] retract/modify[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
9832 commit 12a3f764cb68a0c7a08c2c263e5c9f8491ac0277 -set consequence offset -stop code being generated if there is no code to compile -refactor examples for audit refactoring 	9832 commit 12a3f764cb68a0c7a08c2c263e5c9f8491ac0277 -set consequence offset -stop code being generated if there is no code to compile -refactor examples for audit refactoring	1	-1	 9832[0] commit[0] 12a3f764cb68a0c7a08c2c263e5c9f8491ac0277[0] set[0] consequence[0] offset[0] stop[0] code[0] being[0] generated[0] if[0] there[0] is[0] no[0] code[0] to[0] compile[0] refactor[0] examples[0] for[0] audit[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
10237 commit 7deac93dc1a6afee9e958ba82940288eaf34e32e -start of refactoring for parser/builder apis 	10237 commit 7deac93dc1a6afee9e958ba82940288eaf34e32e -start of refactoring for parser/builder apis	1	-1	 10237[0] commit[0] 7deac93dc1a6afee9e958ba82940288eaf34e32e[0] start[0] of[0] refactoring[0] for[0] parser/builder[0] apis[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
10291 commit 17b22f8ddb24f5ca46e58678af6fe3cbd2df03c8 refactor due to the main (reteoo/spi/rule) changes   retraction related changes   start of waltz code (initial development checkin) 	10291 commit 17b22f8ddb24f5ca46e58678af6fe3cbd2df03c8 refactor due to the main (reteoo/spi/rule) changes   retraction related changes   start of waltz code (initial development checkin)	1	-1	 10291[0] commit[0] 17b22f8ddb24f5ca46e58678af6fe3cbd2df03c8[0] refactor[0] due[0] to[0] the[0] main[0] reteoo/spi/rule[0] changes[0] retraction[0] related[0] changes[0] start[0] of[0] waltz[0] code[0] initial[0] development[0] checkin[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
10348 commit a94b1d0cb4207723d3a21dda63f2dac49581af25 refactoring 	10348 commit a94b1d0cb4207723d3a21dda63f2dac49581af25 refactoring	1	-1	 10348[0] commit[0] a94b1d0cb4207723d3a21dda63f2dac49581af25[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
10440 commit 691653dbda084f1bdeabccc0d26c907ac8fe982b -fist commit for the native manners example -refactoring due to issues uncovered implementing manners 	10440 commit 691653dbda084f1bdeabcc0d26c907ac8fe982b -fist commit for the native manners example -refactoring due to issues uncovered implementing manners	1	-2	 10440[0] commit[0] 691653dbda084f1bdeabccc0d26c907ac8fe982b/691653dbda084f1bdeabcc0d26c907ac8fe982b[0] fist[-1] commit[0] for[0] the[0] native[0] manners[0] example[0] refactoring[0] due[0] to[0] issues[0] uncovered[0] implementing[0] manners[0] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
