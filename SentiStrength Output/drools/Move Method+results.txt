Move Method	Translation	Positive	Negative	EmotionRationale
486 commit 0282bf6dbc9369ac11bf7805ead65fe21d6b91f2 [drools-264] refactor reteoo specific method out of core scheduler 	486 commit 0282bf6dbc9369ac11bf7805ead65fe21d6b91f2 [drools-264] refactor reteoo specific method out of core scheduler	1	-1	 486[0] commit[0] 0282bf6dbc9369ac11bf7805ead65fe21d6b91f2[0] [drools[0] -264][0] refactor[0] reteoo[0] specific[0] method[0] out[0] of[0] core[0] scheduler[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
832 commit 3132b8febc5c316d5cc1b366df7af68db10c80c4 drools-488 "pluggable and encapsulated knowledge types" -refactored undecided to decided. drools-488 "pluggable and encapsulated knowledge types" -introduced _.neg and removed the dfl, jtms pos/neg fact handle and neg entry point drools-488 "pluggable and encapsulated knowledge types" -added correct handling of negconstraint for declared masks -fixed fh cloning and negconstraint cloning drools-488 "pluggable and encapsulated knowledge types" -negatable support must be turned on for !_.neg constraint injection drools-488 "pluggable and encapsulated knowledge types" -better wm and tms separation, as a pipeline drools-488 "pluggable and encapsulated knowledge types" -better wm and tms separation, as a pipeline -neg is now separate map in the objectstore 	832 commit 3132b8febc5c316d5cc1b366df7af68db10c80c4 drools-488 "pluggable and encapsulated knowledge types" -refactored undecided to decided.<br> drools-488 "pluggable and encapsulated knowledge types" -introduced _.<br>neg and removed the dfl, jtms pos/neg fact handle and neg entry point drools-488 "pluggable and encapsulated knowledge types" -added correct handling of negconstraint for declared masks -fixed fh cloning and negconstraint cloning drools-488 "pluggable and encapsulated knowledge types" -negatable support must be turned on for !_.<br>neg constraint injection drools-488 "pluggable and encapsulated knowledge types" -better wm and tms separation, as a pipeline drools-488 "pluggable and encapsulated knowledge types" -better wm and tms separation, as a pipeline -neg is now separate map in the objectstore	1	-1	 832[0] commit[0] 3132b8febc5c316d5cc1b366df7af68db10c80c4[0] drools[0] -488[0] pluggable[0] and[0] encapsulated[0] knowledge[0] types[0] refactored[0] undecided[0] to[0] decided[0] [[Sentence=-1,1=word max, 1-5]] drools[0] -488[0] pluggable[0] and[0] encapsulated[0] knowledge[0] types[0] introduced[0] _[0] [[Sentence=-1,1=word max, 1-5]] neg[0] and[0] removed[0] the[0] dfl[0] jtms[0] pos/neg[0] fact[0] handle[0] and[0] neg[0] entry[0] point[0] drools[0] -488[0] pluggable[0] and[0] encapsulated[0] knowledge[0] types[0] added[0] correct[0] handling[0] of[0] negconstraint[0] for[0] declared[0] masks[0] fixed[0] fh[0] cloning[0] and[0] negconstraint[0] cloning[0] drools[0] -488[0] pluggable[0] and[0] encapsulated[0] knowledge[0] types[0] negatable[0] support[0] must[0] be[0] turned[0] on[0] for[0] !_[0] [[Sentence=-1,1=word max, 1-5]] neg[0] constraint[0] injection[0] drools[0] -488[0] pluggable[0] and[0] encapsulated[0] knowledge[0] types[0] better[0] wm[0] and[0] tms[0] separation[0] as[0] a[0] pipeline[0] drools[0] -488[0] pluggable[0] and[0] encapsulated[0] knowledge[0] types[0] better[0] wm[0] and[0] tms[0] separation[0] as[0] a[0] pipeline[0] neg[0] is[0] now[0] separate[0] map[0] in[0] the[0] objectstore[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
1027 commit 33a88c0dca003f9d712c21964c1c74e5b7bd0a54 [drools-151] refactor the typedeclarationbuilder 	1027 commit 33a88c0dca003f9d712c21964c1c74e5b7bd0a54 [drools-151] refactor the typedeclarationbuilder	1	-1	 1027[0] commit[0] 33a88c0dca003f9d712c21964c1c74e5b7bd0a54[0] [drools[0] -151][0] refactor[0] the[0] typedeclarationbuilder[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
2823 commit cade627879545075e5ae68e7c1e7adfb0033768b jbrules-3664 beliefsystem should keep each logically asserted object -now keeps track of all logically inserted objects in the beliefset -big refactor and cleanup of logical insertions -tms per entrypoint. -better consistency 	2823 commit cade627879545075e5ae68e7c1e7adfb0033768b jbrules-3664 beliefsystem should keep each logically asserted object -now keeps track of all logically inserted objects in the beliefset -big refactor and cleanup of logical insertions -tms per entrypoint.<br> -better consistency	1	-1	 2823[0] commit[0] cade627879545075e5ae68e7c1e7adfb0033768b[0] jbrules[0] -3664[0] beliefsystem[0] should[0] keep[0] each[0] logically[0] asserted[0] object[0] now[0] keeps[0] track[0] of[0] all[0] logically[0] inserted[0] objects[0] in[0] the[0] beliefset[0] big[0] refactor[0] and[0] cleanup[0] of[0] logical[0] insertions[0] tms[0] per[0] entrypoint[0] [[Sentence=-1,1=word max, 1-5]] better[0] consistency[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3392 commit 2e65228c7ee4c960bd13c089c457e2b27e3e7bc0 jbrules-2623: refactoring tuples to reduce code duplication. 	3392 commit 2e65228c7ee4c960bd13c089c457e2b27e3e7bc0 jbrules-2623: refactoring tuples to reduce code duplication.	1	-1	 3392[0] commit[0] 2e65228c7ee4c960bd13c089c457e2b27e3e7bc0[0] jbrules[0] -2623[0] refactoring[0] tuples[0] to[0] reduce[0] code[0] duplication[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3810 commit 6f9a1e5d8529d1786edefd4192446fc326714ed6 refactoring the api to add end() methods to all classes for proper fluent support 	3810 commit 6f9a1e5d8529d1786edefd4192446fc326714ed6 refactoring the api to add end( methods to all classes for proper fluent support	1	-1	 3810[0] commit[0] 6f9a1e5d8529d1786edefd4192446fc326714ed6[0] refactoring[0] the[0] api[0] to[0] add[0] end[0] methods[0] to[0] all[0] classes[0] for[0] proper[0] fluent[0] support[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4212 commit 318b116667e631946d636d6f8d2f95c1bca198b9 jbrules-2642 getting tests working for new updated parser. -big refactor of javaconsequencebuilder rewrites to be mvel 'safe' 	4212 commit 318b11667e631946d636d6f8d2f95c1bca198b9 jbrules-2642 getting tests working for new updated parser.<br> -big refactor of javaconsequencebuilder rewrites to be mvel 'safe'	1	-1	 4212[0] commit[0] 318b116667e631946d636d6f8d2f95c1bca198b9/318b11667e631946d636d6f8d2f95c1bca198b9[0] jbrules[0] -2642[0] getting[0] tests[0] working[0] for[0] new[0] updated[0] parser[0] [[Sentence=-1,1=word max, 1-5]] big[0] refactor[0] of[0] javaconsequencebuilder[0] rewrites[0] to[0] be[0] mvel[0] 'safe'[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4722 commit 1da47ab5cdd50df3c6e30e7f3d87c5cf839ecbe1 jbrules-2807 refactor workingmemory so all entry points use the same code 	4722 commit 1da47ab5cdd50df3c6e30e7f3d87c5cf839ecbe1 jbrules-2807 refactor workingmemory so all entry points use the same code	1	-1	 4722[0] commit[0] 1da47ab5cdd50df3c6e30e7f3d87c5cf839ecbe1[0] jbrules[0] -2807[0] refactor[0] workingmemory[0] so[0] all[0] entry[0] points[0] use[0] the[0] same[0] code[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8466 commit 3c78d81417242cab48473d06e525015935890514 jbrules-713 make dialects pluggeable -more refactoring to get things closer to pluggeable dialects 	8466 commit 3c78d81417242cab48473d06e525015935890514 jbrules-713 make dialects pluggeable -more refactoring to get things closer to pluggeable dialects	1	-1	 8466[0] commit[0] 3c78d81417242cab48473d06e525015935890514[0] jbrules[0] -713[0] make[0] dialects[0] pluggeable[0] more[0] refactoring[0] to[0] get[0] things[0] closer[0] to[0] pluggeable[0] dialects[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8566 commit ce0a638520fe4a707ab3de94c21a3e2e4ea72e05 jbrules-720 clips parser -refactored addparamtercallback to received the functioncaller and add the parameter there, this allows in place element rewritting -if now works with multiple lines and the optional "else" location is stored for fast lookup. 	8566 commit ce0a638520fe4a707ab3de94c21a3e2e4ea72e05 jbrules-720 clips parser -refactored addparamtercallback to received the functioncaller and add the parameter there, this allows in place element rewriting -if now works with multiple lines and the optional "else" location is stored for fast lookup.	1	-1	 8566[0] commit[0] ce0a638520fe4a707ab3de94c21a3e2e4ea72e05[0] jbrules[0] -720[0] clips[0] parser[0] refactored[0] addparamtercallback[0] to[0] received[0] the[0] functioncaller[0] and[0] add[0] the[0] parameter[0] there[0] this[0] allows[0] in[0] place[0] element[0] rewritting/rewriting[0] if[0] now[0] works[0] with[0] multiple[0] lines[0] and[0] the[0] optional[0] else[0] location[0] is[0] stored[0] for[0] fast[0] lookup[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9818 commit 989fa6010fd06057e5f31970e58f1932ce973b2c slight refactoring 	9818 commit 989fa6010fd06057e5f31970e58f1932ce973b2c slight refactoring	1	-1	 9818[0] commit[0] 989fa6010fd06057e5f31970e58f1932ce973b2c[0] slight[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
10302 commit 61bf019feec6950b731aaf34d44d2064bb3149a0 -big refactor here removing bindings. they just aren't necessay and declaration can assume there role. -added internalfacthandle which extends facthandle and exposes id and recency -made a basemannerstest which both reteoo and leaps can use. 	10302 commit 61bf019feec6950b731af34d44d2064bb3149a0 -big refactor here removing bindings.<br> they just aren't necessay and declaration can assume there role.<br> -added internalfacthandle which extends facthandle and exposes id and recency -made a basemannerstest which both reteoo and leaps can use.	1	-2	 10302[0] commit[0] 61bf019feec6950b731aaf34d44d2064bb3149a0/61bf019feec6950b731af34d44d2064bb3149a0[0] big[0] refactor[0] here[0] removing[0] bindings[0] [[Sentence=-1,1=word max, 1-5]] they[0] just[0] aren't[0] necessay[0] and[0] declaration[0] can[0] assume[0] there[0] role[0] [[Sentence=-1,1=word max, 1-5]] added[0] internalfacthandle[0] which[0] extends[0] facthandle[0] and[0] exposes[-1] id[0] and[0] recency[0] made[0] a[0] basemannerstest[0] which[0] both[0] reteoo[0] and[0] leaps[0] can[0] use[0] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
10348 commit a94b1d0cb4207723d3a21dda63f2dac49581af25 refactoring 	10348 commit a94b1d0cb4207723d3a21dda63f2dac49581af25 refactoring	1	-1	 10348[0] commit[0] a94b1d0cb4207723d3a21dda63f2dac49581af25[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
