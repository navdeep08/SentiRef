Move Attribute	Translation	Positive	Negative	EmotionRationale
2737 commit dbe0a8240ef80236af584abfa553ae2122689cfb translations: - add support for country variants (ticket #1133) - refactor data in configuihelper config files: allow empty values 	2737 commit dbe0a8240ef80236af584abfa553ae2122689cfb translations: - add support for country variants (ticket #1133) - refactor data in configuihelper config files: allow empty values	2	-1	 2737[0] commit[0] dbe0a8240ef80236af584abfa553ae2122689cfb[0] translations[0] add[0] support[0] for[0] country[0] variants[0] ticket[0] #1133[0] refactor[0] data[0] in[0] configuihelper[0] config[0] files[0] allow[0] empty[0] values[1] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
4443 commit e62b76d2cc7ed993eec015c937b035f0d30ef9f7 big refactor of the router console update subsystem, in preparation for implementing out-of-console updaters like i2psnark. - add new update interfaces in net.i2p.update - all update implementations moved to routerconsole update/ - implement an updatemanager that registers with the routercontext - updatemanager handles multiple types of things to update (router, plugins, news, ...) and methods of updating (http, ...) - updatemanager maintains list of installed, downloaded, and available versions of everything - define updaters that can check for a new version and/or download an item - individual updaters register with the updatemanager obtained from i2pappcontext, identifying the type of update item and update method they can handle. - updaters need only core libs, no router.jar or routerconsole access required. - all checks and updates are initiated via the updatemanager. - all status on checks and updates in-progress or completed are obtained from the updatemanager. no more use of system properties to broadcast update state. - all update and checker tasks are intantiated on demand and threaded; no more static references left over. - split out the runners and checkers from the handlers and make the inheritance more sane. - no more permanent newsfetcher thread; run on the simplescheduler queue and thread a checker task only to fetch the news. - no more static newsfetcher instance in routerconsole. all helper methods that are still required are moved to newshelper. the updatemanager implements the policy for when to check and download. all requests go through the updatemanager. for each update type, there's several parts: - the xxxupdatehandler implements the updater - the xxxupdatechecker implements the updatetask for checking - the xxxupdaterunner implements the updatetask for downloading new and moved classes: web/ update/ ---- ------- new consoleupdatemanager.java new pluginupdatechecker.java from pluginupdatechecker pluginupdatechecker -  pluginupdatehandler.java pluginupdatehandler.java -  pluginupdaterunner new unsignedupdatehandler.java unsignedupdatehandler -  unsignedupdaterunner.java new unsignedupdatechecker from newsfetcher updatehandler.java remains new updatehandler.java new updaterunner.java from updatehandler move newshandler from newsfetcher new newsfetcher new newstimertask new dummyhandler initial checkin. unfinished, untested, unpolished. 	443 commit e62b76d2cc7ed993eec015c937b035f0d30ef9f7 big refactor of the router console update subsystem, in preparation for implementing out-of-console updaters like i2psnark.<br> - add new update interfaces in net.<br>i2p.<br>update - all update implementations moved to routerconsole update/ - implement an updatemanager that registers with the routercontext - updatemanager handles multiple types of things to update (router, plugins, news, .<br> and methods of updating (http, .<br> - updatemanager maintains list of installed, downloaded, and available versions of everything - define updaters that can check for a new version and/or download an item - individual updaters register with the updatemanager obtained from i2pappcontext, identifying the type of update item and update method they can handle.<br> - updaters need only core libs, no router.<br>jar or routerconsole access required.<br> - all checks and updates are initiated via the updatemanager.<br> - all status on checks and updates in-progress or completed are obtained from the updatemanager.<br> no more use of system properties to broadcast update state.<br> - all update and checker tasks are intantiated on demand and threaded; no more static references left over.<br> - split out the runners and checkers from the handlers and make the inheritance more sane.<br> - no more permanent newsfetcher thread; run on the simplescheduler queue and thread a checker task only to fetch the news.<br> - no more static newsfetcher instance in routerconsole.<br> all helper methods that are still required are moved to newshelper.<br> the updatemanager implements the policy for when to check and download.<br> all requests go through the updatemanager.<br> for each update type, there's several parts: - the xupdatehandler implements the updater - the xupdatechecker implements the updatetask for checking - the xupdaterunner implements the updatetask for downloading new and moved classes: web/ update/ - - new consoleupdatemanager.<br>java new pluginupdatechecker.<br>java from pluginupdatechecker pluginupdatechecker -  pluginupdatehandler.<br>java pluginupdatehandler.<br>java -  pluginupdaterunner new unsignedupdatehandler.<br>java unsignedupdatehandler -  unsignedupdaterunner.<br>java new unsignedupdatechecker from newsfetcher updatehandler.<br>java remains new updatehandler.<br>java new updaterunner.<br>java from updatehandler move newshandler from newsfetcher new newsfetcher new newstimertask new dummyhandler initial checkin.<br> unfinished, untested, unpolished.	1	-1	 4443/443[0] commit[0] e62b76d2cc7ed993eec015c937b035f0d30ef9f7[0] big[0] refactor[0] of[0] the[0] router[0] console[0] update[0] subsystem[0] in[0] preparation[0] for[0] implementing[0] out[0] of[0] console[0] updaters[0] like[0] i2psnark[0] [[Sentence=-1,1=word max, 1-5]] add[0] new[0] update[0] interfaces[0] in[0] net[0] [[Sentence=-1,1=word max, 1-5]] i2p[0] [[Sentence=-1,1=word max, 1-5]] update[0] all[0] update[0] implementations[0] moved[0] to[0] routerconsole[0] update/[0] implement[0] an[0] updatemanager[0] that[0] registers[0] with[0] the[0] routercontext[0] updatemanager[0] handles[0] multiple[0] types[0] of[0] things[0] to[0] update[0] router[0] plugins[0] news[0] [[Sentence=-1,1=word max, 1-5]] and[0] methods[0] of[0] updating[0] http[0] [[Sentence=-1,1=word max, 1-5]] updatemanager[0] maintains[0] list[0] of[0] installed[0] downloaded[0] and[0] available[0] versions[0] of[0] everything[0] define[0] updaters[0] that[0] can[0] check[0] for[0] a[0] new[0] version[0] and/or[0] download[0] an[0] item[0] individual[0] updaters[0] register[0] with[0] the[0] updatemanager[0] obtained[0] from[0] i2pappcontext[0] identifying[0] the[0] type[0] of[0] update[0] item[0] and[0] update[0] method[0] they[0] can[0] handle[0] [[Sentence=-1,1=word max, 1-5]] updaters[0] need[0] only[0] core[0] libs[0] no[0] router[0] [[Sentence=-1,1=word max, 1-5]] jar[0] or[0] routerconsole[0] access[0] required[0] [[Sentence=-1,1=word max, 1-5]] all[0] checks[0] and[0] updates[0] are[0] initiated[0] via[0] the[0] updatemanager[0] [[Sentence=-1,1=word max, 1-5]] all[0] status[0] on[0] checks[0] and[0] updates[0] in[0] progress[0] or[0] completed[0] are[0] obtained[0] from[0] the[0] updatemanager[0] [[Sentence=-1,1=word max, 1-5]] no[0] more[0] use[0] of[0] system[0] properties[0] to[0] broadcast[0] update[0] state[0] [[Sentence=-1,1=word max, 1-5]] all[0] update[0] and[0] checker[0] tasks[0] are[0] intantiated[0] on[0] demand[0] and[0] threaded[0] no[0] more[0] static[0] references[0] left[0] over[0] [[Sentence=-1,1=word max, 1-5]] split[0] out[0] the[0] runners[0] and[0] checkers[0] from[0] the[0] handlers[0] and[0] make[0] the[0] inheritance[0] more[0] sane[0] [[Sentence=-1,1=word max, 1-5]] no[0] more[0] permanent[0] newsfetcher[0] thread[0] run[0] on[0] the[0] simplescheduler[0] queue[0] and[0] thread[0] a[0] checker[0] task[0] only[0] to[0] fetch[0] the[0] news[0] [[Sentence=-1,1=word max, 1-5]] no[0] more[0] static[0] newsfetcher[0] instance[0] in[0] routerconsole[0] [[Sentence=-1,1=word max, 1-5]] all[0] helper[0] methods[0] that[0] are[0] still[0] required[0] are[0] moved[0] to[0] newshelper[0] [[Sentence=-1,1=word max, 1-5]] the[0] updatemanager[0] implements[0] the[0] policy[0] for[0] when[0] to[0] check[0] and[0] download[0] [[Sentence=-1,1=word max, 1-5]] all[0] requests[0] go[0] through[0] the[0] updatemanager[0] [[Sentence=-1,1=word max, 1-5]] for[0] each[0] update[0] type[0] there's[0] several[0] parts[0] the[0] xxxupdatehandler/xupdatehandler[0] implements[0] the[0] updater[0] the[0] xxxupdatechecker/xupdatechecker[0] implements[0] the[0] updatetask[0] for[0] checking[0] the[0] xxxupdaterunner/xupdaterunner[0] implements[0] the[0] updatetask[0] for[0] downloading[0] new[0] and[0] moved[0] classes[0] web/[0] update/[0] new[0] consoleupdatemanager[0] [[Sentence=-1,1=word max, 1-5]] java[0] new[0] pluginupdatechecker[0] [[Sentence=-1,1=word max, 1-5]] java[0] from[0] pluginupdatechecker[0] pluginupdatechecker[0] pluginupdatehandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] pluginupdatehandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] pluginupdaterunner[0] new[0] unsignedupdatehandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] unsignedupdatehandler[0] unsignedupdaterunner[0] [[Sentence=-1,1=word max, 1-5]] java[0] new[0] unsignedupdatechecker[0] from[0] newsfetcher[0] updatehandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] remains[0] new[0] updatehandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] new[0] updaterunner[0] [[Sentence=-1,1=word max, 1-5]] java[0] from[0] updatehandler[0] move[0] newshandler[0] from[0] newsfetcher[0] new[0] newsfetcher[0] new[0] newstimertask[0] new[0] dummyhandler[0] initial[0] checkin[0] [[Sentence=-1,1=word max, 1-5]] unfinished[0] untested[0] unpolished[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6289 commit 40fd4ccd15d3331ae13edf51f7ed1d1d91038ce8 stats: - refactor handling of required stats - shorten description of required stats - improve save messages on configstats.jsp - change bw.sendbps and bw.receivebps stats to bytes, not kbytes - expires directive for graphs 	6289 commit 40fd4ccd15d331ae13edf51f7ed1d1d91038ce8 stats: - refactor handling of required stats - shorten description of required stats - improve save messages on configstats.<br>jsp - change bw.<br>sendbps and bw.<br>receivebps stats to bytes, not kbytes - expires directive for graphs	2	-1	 6289[0] commit[0] 40fd4ccd15d3331ae13edf51f7ed1d1d91038ce8/40fd4ccd15d331ae13edf51f7ed1d1d91038ce8[0] stats[0] refactor[0] handling[0] of[0] required[0] stats[0] shorten[0] description[0] of[0] required[0] stats[0] improve[1] save[1] messages[0] on[0] configstats[0] [[Sentence=-1,2=word max, 1-5]] jsp[0] change[0] bw[0] [[Sentence=-1,1=word max, 1-5]] sendbps[0] and[0] bw[0] [[Sentence=-1,1=word max, 1-5]] receivebps[0] stats[0] to[0] bytes[0] not[0] kbytes[0] expires[0] directive[0] for[0] graphs[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
6779 commit 4899a6d306d644fd880d3a062b5fd720c8eaefe3 refactor fields to private and replace with getters, and lots of prep for lack of metainfo and storage. 	6779 commit 4899a6d306d644fd880d3a062b5fd720c8eaefe3 refactor fields to private and replace with getters, and lots of prep for lack of metainfo and storage.	1	-2	 6779[0] commit[0] 4899a6d306d644fd880d3a062b5fd720c8eaefe3[0] refactor[0] fields[0] to[0] private[0] and[0] replace[0] with[0] getters[0] and[0] lots[0] of[0] prep[0] for[0] lack[-1] of[0] metainfo[0] and[0] storage[0] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
9656 commit fa23a7b066e43068346b72df8a2739ba84c17a34 i2psnark: - refactor to allow running a single snark without a snarkmanager again, by moving some things from snarkmanager to i2psnarkutil, having snark call completelistener callbacks, and having storage call storagelistener callbacks. this is in preparation for using snark for router updates. step 2 is to allow multiple i2psnarkutil instances. - big rewrite of storage to open file descriptors on demand, and close them when unused, so we can support large numbers of torrents. 	9656 commit fa23a7b066e43068346b72df8a2739ba84c17a34 i2psnark: - refactor to allow running a single snark without a snarkmanager again, by moving some things from snarkmanager to i2psnarkutil, having snark call completelistener callbacks, and having storage call storagelistener callbacks.<br> this is in preparation for using snark for router updates.<br> step 2 is to allow multiple i2psnarkutil instances.<br> - big rewrite of storage to open file descriptors on demand, and close them when unused, so we can support large numbers of torrents.	1	-1	 9656[0] commit[0] fa23a7b066e43068346b72df8a2739ba84c17a34[0] i2psnark[0] refactor[0] to[0] allow[0] running[0] a[0] single[0] snark[0] without[0] a[0] snarkmanager[0] again[0] by[0] moving[0] some[0] things[0] from[0] snarkmanager[0] to[0] i2psnarkutil[0] having[0] snark[0] call[0] completelistener[0] callbacks[0] and[0] having[0] storage[0] call[0] storagelistener[0] callbacks[0] [[Sentence=-1,1=word max, 1-5]] this[0] is[0] in[0] preparation[0] for[0] using[0] snark[0] for[0] router[0] updates[0] [[Sentence=-1,1=word max, 1-5]] step[0] 2[0] is[0] to[0] allow[0] multiple[0] i2psnarkutil[0] instances[0] [[Sentence=-1,1=word max, 1-5]] big[0] rewrite[0] of[0] storage[0] to[0] open[0] file[0] descriptors[0] on[0] demand[0] and[0] close[0] them[0] when[0] unused[0] so[0] we[0] can[0] support[0] large[0] numbers[0] of[0] torrents[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
10351 commit 76f89ac93cda344091e75b0a9f238478bb5de5d5 2005-12-31 jrandom * include a simple torrent creator in the i2psnark web ui * further streaming lib closing improvements * refactored the load test components to run off live tunnels (though, still not safe for normal/anonymous load testing) 	10351 commit 76f89ac93cda344091e75b0a9f238478bb5de5d5 2005-12-31 jrandom * include a simple torrent creator in the i2psnark web ui * further streaming lib closing improvements * refactored the load test components to run off live tunnels (though, still not safe for normal/anonymous load testing)	2	-1	 10351[0] commit[0] 76f89ac93cda344091e75b0a9f238478bb5de5d5[0] 2005[0] -12[0] -31[0] jrandom[0] include[0] a[0] simple[0] torrent[0] creator[0] in[0] the[0] i2psnark[0] web[0] ui[0] further[0] streaming[0] lib[0] closing[0] improvements[1] refactored[0] the[0] load[0] test[0] components[0] to[0] run[0] off[0] live[0] tunnels[0] though[0] still[0] not[0] safe[0] for[0] normal/anonymous[0] load[0] testing[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
11236 commit b67b243ebd4f49e556aadeeb3f9c5c4e219751d9 the following isn't the end of the 0.4.1 updates, as there are still more things left to clean up and debug in the new tcp transport, but it all works, and i dont like having big changes sitting on my local machine (and there's no real need for branching atm) 2004-09-26 jrandom * complete rewrite of the tcp transport with ip autodetection and low cpu overhead reconnections. more concise connectivity errors are listed on the /oldconsole.jsp as well. the ip autodetection works by listening to the first person who tells you what your ip address is when you have not defined one yourself and you have no other tcp connections. * update to the i2np message format to add transparent verification at the i2np level (beyond standard tcp verification). * remove a potential weakness in our aesengine's safeencrypt and safedecrypt implementation (rather than verifying with e(h(key)), we now verify with e(h(iv))). * the above changes are not backwards compatible. * removed all of the old unused phttp code. * refactor various methods and clean up some javadoc. 	11236 commit b67b243ebd4f49e556adeeb3f9c5c4e219751d9 the following isn't the end of the 0.4.1 updates, as there are still more things left to clean up and debug in the new tcp transport, but it all works, and i dont like having big changes sitting on my local machine (and there's no real need for branching atm) 2004-09-26 jrandom * complete rewrite of the tcp transport with ip autodetection and low cpu overhead reconnections.<br> more concise connectivity errors are listed on the /oldconsole.<br>jsp as well.<br> the ip autodetection works by listening to the first person who tells you what your ip address is when you have not defined one yourself and you have no other tcp connections.<br> * update to the i2np message format to add transparent verification at the i2np level (beyond standard tcp verification)<br> * remove a potential weakness in our aesengine's safeencrypt and safedecrypt implementation (rather than verifying with e(h(key) we now verify with e(h(iv)<br> * the above changes are not backwards compatible.<br> * removed all of the old unused phttp code.<br> * refactor various methods and clean up some javadoc.	1	-2	 11236[0] commit[0] b67b243ebd4f49e556aadeeb3f9c5c4e219751d9/b67b243ebd4f49e556adeeb3f9c5c4e219751d9[0] the[0] following[0] isn't[0] the[0] end[0] of[0] the[0] 0[0] .4[0] .1[0] updates[0] as[0] there[0] are[0] still[0] more[0] things[0] left[0] to[0] clean[0] up[0] and[0] debug[0] in[0] the[0] new[0] tcp[0] transport[0] but[0] it[0] all[0] works[0] and[0] i[0] dont[0] like[0] having[0] big[0] changes[0] sitting[0] on[0] my[0] local[0] machine[0] and[0] there's[0] no[0] real[0] need[0] for[0] branching[0] atm[0] 2004[0] -09[0] -26[0] jrandom[0] complete[0] rewrite[0] of[0] the[0] tcp[0] transport[0] with[0] ip[0] autodetection[0] and[0] low[-1] cpu[0] overhead[0] reconnections[0] [[Sentence=-2,1=word max, 1-5]] more[0] concise[0] connectivity[0] errors[0] are[0] listed[0] on[0] the[0] /oldconsole[0] [[Sentence=-1,1=word max, 1-5]] jsp[0] as[0] well[0] [[Sentence=-1,1=word max, 1-5]] the[0] ip[0] autodetection[0] works[0] by[0] listening[0] to[0] the[0] first[0] person[0] who[0] tells[0] you[0] what[0] your[0] ip[0] address[0] is[0] when[0] you[0] have[0] not[0] defined[0] one[0] yourself[0] and[0] you[0] have[0] no[0] other[0] tcp[0] connections[0] [[Sentence=-1,1=word max, 1-5]] update[0] to[0] the[0] i2np[0] message[0] format[0] to[0] add[0] transparent[0] verification[0] at[0] the[0] i2np[0] level[0] beyond[0] standard[0] tcp[0] verification[0] [[Sentence=-1,1=word max, 1-5]] remove[0] a[0] potential[0] weakness[-1] in[0] our[0] aesengine's[0] safeencrypt[0] and[0] safedecrypt[0] implementation[0] rather[0] than[0] verifying[0] with[0] e[0] h[0] key[0] we[0] now[0] verify[0] with[0] e[0] h[0] iv[0] [[Sentence=-2,1=word max, 1-5]] the[0] above[0] changes[0] are[0] not[0] backwards[0] compatible[0] [[Sentence=-1,1=word max, 1-5]] removed[0] all[0] of[0] the[0] old[0] unused[0] phttp[0] code[0] [[Sentence=-1,1=word max, 1-5]] refactor[0] various[0] methods[0] and[0] clean[0] up[0] some[0] javadoc[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
