Extract Method	Translation	Positive	Negative	EmotionRationale
378 commit 4f262f61409d33e1f008dd1fdd6d7010dc92302e addressbook: use new namingservice api methods in action handling - refactor hosttxtentry to consolidate properties writing - more hosttxtentry tests - start of 'remove' entry handling blockfile: cleanup unused code - add iterable interface to skiplist 	378 commit 4f262f61409d33e1f008dd1fdd6d7010dc92302e addressbook: use new namingservice api methods in action handling - refactor hosttxtentry to consolidate properties writing - more hosttxtentry tests - start of 'remove' entry handling blockfile: cleanup unused code - add iterable interface to skiplist	1	-1	 378[0] commit[0] 4f262f61409d33e1f008dd1fdd6d7010dc92302e[0] addressbook[0] use[0] new[0] namingservice[0] api[0] methods[0] in[0] action[0] handling[0] refactor[0] hosttxtentry[0] to[0] consolidate[0] properties[0] writing[0] more[0] hosttxtentry[0] tests[0] start[0] of[0] 'remove'[0] entry[0] handling[0] blockfile[0] cleanup[0] unused[0] code[0] add[0] iterable[0] interface[0] to[0] skiplist[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
1490 commit 59348f8dbdffc45573d0930b873477fe619b6b95 reseed: - add form to manually reseed from zip or su3 url (result status not yet working) - add form to manually reseed from local zip or su3 file (not yet working, needs multipart/form-date moved from susimail) - add form to create reseed zip file to share (working) - backend support and refactoring in reseed code 	1490 commit 59348f8dbdffc45573d0930b873477fe619b6b95 reseed: - add form to manually reseed from zip or su3 url (result status not yet working) - add form to manually reseed from local zip or su3 file (not yet working, needs multipart/form-date moved from susimail) - add form to create reseed zip file to share (working) - backend support and refactoring in reseed code	1	-1	 1490[0] commit[0] 59348f8dbdffc45573d0930b873477fe619b6b95[0] reseed[0] add[0] form[0] to[0] manually[0] reseed[0] from[0] zip[0] or[0] su3[0] url[0] result[0] status[0] not[0] yet[0] working[0] add[0] form[0] to[0] manually[0] reseed[0] from[0] local[0] zip[0] or[0] su3[0] file[0] not[0] yet[0] working[0] needs[0] multipart/form[0] date[0] moved[0] from[0] susimail[0] add[0] form[0] to[0] create[0] reseed[0] zip[0] file[0] to[0] share[0] working[0] backend[0] support[0] and[0] refactoring[0] in[0] reseed[0] code[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
2604 commit efff25a87c5b746f33970fd6cedeebff92192579 netdb: - just before midnight, flood to new location too so lookups don't fail after keyspace rotation (ticket #510) - refactor routingkeygenerator and updateroutingkeymodifierjob in support of the above - display next key on ls debug page 	2604 commit eff25a87c5b746f33970fd6cedeebff92192579 netdb: - just before midnight, flood to new location too so lookups don't fail after keyspace rotation (ticket #510) - refactor routingkeygenerator and updateroutingkeymodifierjob in support of the above - display next key on ls debug page	1	-1	 2604[0] commit[0] efff25a87c5b746f33970fd6cedeebff92192579/eff25a87c5b746f33970fd6cedeebff92192579[0] netdb[0] just[0] before[0] midnight[0] flood[0] to[0] new[0] location[0] too[0] so[0] lookups[0] don't[0] fail[0] after[0] keyspace[0] rotation[0] ticket[0] #510[0] refactor[0] routingkeygenerator[0] and[0] updateroutingkeymodifierjob[0] in[0] support[0] of[0] the[0] above[0] display[0] next[0] key[0] on[0] ls[0] debug[0] page[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
2941 commit f47ec65b8fb85c67d251d9e0945138d46aee3f8c update: preliminary work for su3 router updates: - new router_signed_su3 updatetype - add support for torrent and http - refactor updaterunners to return actual updatetype - deal with signed/su3 conflicts - unpack/verify stubbed only 	2941 commit f47ec65b8fb85c67d251d9e0945138d46aee3f8c update: preliminary work for su3 router updates: - new router_signed_su3 updatetype - add support for torrent and http - refactor updaterunners to return actual updatetype - deal with signed/su3 conflicts - unpack/verify stubbed only	1	-1	 2941[0] commit[0] f47ec65b8fb85c67d251d9e0945138d46aee3f8c[0] update[0] preliminary[0] work[0] for[0] su3[0] router[0] updates[0] new[0] router_signed_su3[0] updatetype[0] add[0] support[0] for[0] torrent[0] and[0] http[0] refactor[0] updaterunners[0] to[0] return[0] actual[0] updatetype[0] deal[0] with[0] signed/su3[0] conflicts[0] unpack/verify[0] stubbed[0] only[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3782 commit 70a2e330efb653a39503bedbc96ee62a808026a6 * i2psnark: - more dht limits - announce to backup trackers if dht is empty - use pex and dht info in torrent peer count - don't use temp files for announces - trackerclient refactoring - cleanups 	3782 commit 70a2e330efb653a39503bedbc96ee62a808026a6 * i2psnark: - more dht limits - announce to backup trackers if dht is empty - use pex and dht info in torrent peer count - don't use temp files for announces - trackerclient refactoring - cleanups	1	-1	 3782[0] commit[0] 70a2e330efb653a39503bedbc96ee62a808026a6[0] i2psnark[0] more[0] dht[0] limits[0] announce[0] to[0] backup[0] trackers[0] if[0] dht[0] is[0] empty[0] use[0] pex[0] and[0] dht[0] info[0] in[0] torrent[0] peer[0] count[0] don't[0] use[0] temp[0] files[0] for[0] announces[0] trackerclient[0] refactoring[0] cleanups[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4554 commit 0f321f1597f68ef14cc13c20289fcabc1a4cede6 - refactor tracker map 	4554 commit 0f321f1597f68ef14cc13c20289fcabc1a4cede6 - refactor tracker map	1	-1	 4554[0] commit[0] 0f321f1597f68ef14cc13c20289fcabc1a4cede6[0] refactor[0] tracker[0] map[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5724 commit 7fbb3b12d1f3ea0c5b3c027da3ecc3b9fd335a7b * fileutil: add a rename method and a new copy method 	5724 commit 7fbb3b12d1f3ea0c5b3c027da3ecc3b9fd335a7b * fileutil: add a rename method and a new copy method	1	-1	 5724[0] commit[0] 7fbb3b12d1f3ea0c5b3c027da3ecc3b9fd335a7b[0] fileutil[0] add[0] a[0] rename[0] method[0] and[0] a[0] new[0] copy[0] method[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6041 commit 2c3be290165ea8ffdf6ba5c6389adbbcb230d982 * jbigi: - refactor to handle 64 bit libs and a list of fallback libs - logging tweaks - only check for one file name in library path 	6041 commit 2c3be290165ea8ffdf6ba5c6389adbbcb230d982 * jbigi: - refactor to handle 64 bit libs and a list of fallback libs - logging tweaks - only check for one file name in library path	1	-1	 6041[0] commit[0] 2c3be290165ea8ffdf6ba5c6389adbbcb230d982[0] jbigi[0] refactor[0] to[0] handle[0] 64[0] bit[0] libs[0] and[0] a[0] list[0] of[0] fallback[0] libs[0] logging[0] tweaks[0] only[0] check[0] for[0] one[0] file[0] name[0] in[0] library[0] path[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6070 commit d201a29d03aba9867ed9d2aadb79ab3b1fefc5b3 * http proxy: address helper refactoring, address book add form 	6070 commit d201a29d03aba9867ed9d2adb79ab3b1fefc5b3 * http proxy: address helper refactoring, address book add form	1	-1	 6070[0] commit[0] d201a29d03aba9867ed9d2aadb79ab3b1fefc5b3/d201a29d03aba9867ed9d2adb79ab3b1fefc5b3[0] http[0] proxy[0] address[0] helper[0] refactoring[0] address[0] book[0] add[0] form[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6289 commit 40fd4ccd15d3331ae13edf51f7ed1d1d91038ce8 stats: - refactor handling of required stats - shorten description of required stats - improve save messages on configstats.jsp - change bw.sendbps and bw.receivebps stats to bytes, not kbytes - expires directive for graphs 	6289 commit 40fd4ccd15d331ae13edf51f7ed1d1d91038ce8 stats: - refactor handling of required stats - shorten description of required stats - improve save messages on configstats.<br>jsp - change bw.<br>sendbps and bw.<br>receivebps stats to bytes, not kbytes - expires directive for graphs	2	-1	 6289[0] commit[0] 40fd4ccd15d3331ae13edf51f7ed1d1d91038ce8/40fd4ccd15d331ae13edf51f7ed1d1d91038ce8[0] stats[0] refactor[0] handling[0] of[0] required[0] stats[0] shorten[0] description[0] of[0] required[0] stats[0] improve[1] save[1] messages[0] on[0] configstats[0] [[Sentence=-1,2=word max, 1-5]] jsp[0] change[0] bw[0] [[Sentence=-1,1=word max, 1-5]] sendbps[0] and[0] bw[0] [[Sentence=-1,1=word max, 1-5]] receivebps[0] stats[0] to[0] bytes[0] not[0] kbytes[0] expires[0] directive[0] for[0] graphs[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
6346 commit de815e271c61eabe8373a82d2fc825721e223f7d * blockfile: - more query options - more exception logging - fix lookup infinite loop - fix lookup npe * susidns: - refactoring for new namingservice api - initial conversion to new namingservice api (still needs work) - fix lots of html warnings - some java 5 cleanup 	6346 commit de815e271c61eabe8373a82d2fc825721e223f7d * blockfile: - more query options - more exception logging - fix lookup infinite loop - fix lookup npe * susidns: - refactoring for new namingservice api - initial conversion to new namingservice api (still needs work) - fix lots of html warnings - some java 5 cleanup	1	-1	 6346[0] commit[0] de815e271c61eabe8373a82d2fc825721e223f7d[0] blockfile[0] more[0] query[0] options[0] more[0] exception[0] logging[0] fix[0] lookup[0] infinite[0] loop[0] fix[0] lookup[0] npe[0] susidns[0] refactoring[0] for[0] new[0] namingservice[0] api[0] initial[0] conversion[0] to[0] new[0] namingservice[0] api[0] still[0] needs[0] work[0] fix[0] lots[0] of[0] html[0] warnings[0] some[0] java[0] 5[0] cleanup[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6357 commit f9b2c0bc63b986a8c1fff8f2f078a34d92d9d021 * i2psnark: - more efficient metainfo handling, reduce instantiations - improved handling of storage errors - improved handling of duplicate file names - more metainfo sanity checks - metadata transfer error handling improvements - code cleanup, remove dead and duplicated code 	6357 commit f9b2c0bc63b986a8c1ff8f2f078a34d92d9d021 * i2psnark: - more efficient metainfo handling, reduce instantiations - improved handling of storage errors - improved handling of duplicate file names - more metainfo sanity checks - metadata transfer error handling improvements - code cleanup, remove dead and duplicated code	2	-1	 6357[0] commit[0] f9b2c0bc63b986a8c1fff8f2f078a34d92d9d021/f9b2c0bc63b986a8c1ff8f2f078a34d92d9d021[0] i2psnark[0] more[0] efficient[0] metainfo[0] handling[0] reduce[0] instantiations[0] improved[1] handling[0] of[0] storage[0] errors[0] improved[1] handling[0] of[0] duplicate[0] file[0] names[0] more[0] metainfo[0] sanity[0] checks[0] metadata[0] transfer[0] error[0] handling[0] improvements[1] code[0] cleanup[0] remove[0] dead[0] and[0] duplicated[0] code[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
7650 commit 8353b623da7b2f3a721c7b49ed5d495d697fb786 ssu packetbuilder: refactor header generation, add destroy msg support 	7650 commit 8353b623da7b2f3a721c7b49ed5d495d697fb786 ssu packetbuilder: refactor header generation, add destroy msg support	1	-3	 7650[0] commit[0] 8353b623da7b2f3a721c7b49ed5d495d697fb786[0] ssu[0] packetbuilder[0] refactor[0] header[0] generation[0] add[0] destroy[-2] msg[0] support[0] [[Sentence=-3,1=word max, 1-5]][[[1,-3 max of sentences]]]
9656 commit fa23a7b066e43068346b72df8a2739ba84c17a34 i2psnark: - refactor to allow running a single snark without a snarkmanager again, by moving some things from snarkmanager to i2psnarkutil, having snark call completelistener callbacks, and having storage call storagelistener callbacks. this is in preparation for using snark for router updates. step 2 is to allow multiple i2psnarkutil instances. - big rewrite of storage to open file descriptors on demand, and close them when unused, so we can support large numbers of torrents. 	9656 commit fa23a7b066e43068346b72df8a2739ba84c17a34 i2psnark: - refactor to allow running a single snark without a snarkmanager again, by moving some things from snarkmanager to i2psnarkutil, having snark call completelistener callbacks, and having storage call storagelistener callbacks.<br> this is in preparation for using snark for router updates.<br> step 2 is to allow multiple i2psnarkutil instances.<br> - big rewrite of storage to open file descriptors on demand, and close them when unused, so we can support large numbers of torrents.	1	-1	 9656[0] commit[0] fa23a7b066e43068346b72df8a2739ba84c17a34[0] i2psnark[0] refactor[0] to[0] allow[0] running[0] a[0] single[0] snark[0] without[0] a[0] snarkmanager[0] again[0] by[0] moving[0] some[0] things[0] from[0] snarkmanager[0] to[0] i2psnarkutil[0] having[0] snark[0] call[0] completelistener[0] callbacks[0] and[0] having[0] storage[0] call[0] storagelistener[0] callbacks[0] [[Sentence=-1,1=word max, 1-5]] this[0] is[0] in[0] preparation[0] for[0] using[0] snark[0] for[0] router[0] updates[0] [[Sentence=-1,1=word max, 1-5]] step[0] 2[0] is[0] to[0] allow[0] multiple[0] i2psnarkutil[0] instances[0] [[Sentence=-1,1=word max, 1-5]] big[0] rewrite[0] of[0] storage[0] to[0] open[0] file[0] descriptors[0] on[0] demand[0] and[0] close[0] them[0] when[0] unused[0] so[0] we[0] can[0] support[0] large[0] numbers[0] of[0] torrents[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9698 commit 0b599c45ec3535be180970daf01c0043b44d60bb refactored code. piles of pedantic lock checks to ensure we don't get deadlocked, it's ugly. 	9698 commit 0b599c45ec3535be180970daf01c0043b44d60bb refactored code.<br> piles of pedantic lock checks to ensure we don't get deadlocked, it's ugly.	1	-3	 9698[0] commit[0] 0b599c45ec3535be180970daf01c0043b44d60bb[0] refactored[0] code[0] [[Sentence=-1,1=word max, 1-5]] piles[0] of[0] pedantic[0] lock[0] checks[0] to[0] ensure[0] we[0] don't[0] get[0] deadlocked[0] it's[0] ugly[-2] [[Sentence=-3,1=word max, 1-5]][[[1,-3 max of sentences]]]
10271 commit 7bb792836df8d2db8c50488d55eb6f7094fecffd 2006-02-22 jrandom * fix to properly profile tunnel joins (thanks ragnarok, frosk, et al!) * more aggressive poor-man's pmtu, allowing larger mtus on less reliable links * further class validator refactorings 	10271 commit 7bb792836df8d2db8c50488d55eb6f7094fecffd 2006-02-22 jrandom * fix to properly profile tunnel joins (thanks ragnarok, frosk, et al!<br> * more aggressive poor-man's pmtu, allowing larger mtus on less reliable links * further class validator refactorings	2	-3	 10271[0] commit[0] 7bb792836df8d2db8c50488d55eb6f7094fecffd[0] 2006[0] -02[0] -22[0] jrandom[0] fix[0] to[0] properly[0] profile[0] tunnel[0] joins[0] thanks[1] ragnarok[0] frosk[0] et[0] al[0] [[Sentence=-1,2=word max, 1-5]] more[0] aggressive[-2] poor[-1] man's[0] pmtu[0] allowing[0] larger[0] mtus[0] on[0] less[0] reliable[0] links[0] further[0] class[0] validator[0] refactorings[0] [[Sentence=-3,1=word max, 1-5]][[[2,-3 max of sentences]]]
10304 commit 79f934fe1748699b2e8cd3f34a162819037c3783 2006-02-16 jrandom * bugfix to the i2ptunnel web config to properly accept i2cp port settings * initial sucker refactoring to simplify reuse of the html parsing * beginnings of hooks to push imported rss/atom out to remote syndie archives automatically (though not enabled currently) * further ssu peer test cleanup 	10304 commit 79f934fe1748699b2e8cd3f34a162819037c3783 2006-02-16 jrandom * bugfix to the i2ptunnel web config to properly accept i2cp port settings * initial sucker refactoring to simplify reuse of the html parsing * beginnings of hooks to push imported rss/atom out to remote syndie archives automatically (though not enabled currently) * further ssu peer test cleanup	1	-2	 10304[0] commit[0] 79f934fe1748699b2e8cd3f34a162819037c3783[0] 2006[0] -02[0] -16[0] jrandom[0] bugfix[0] to[0] the[0] i2ptunnel[0] web[0] config[0] to[0] properly[0] accept[0] i2cp[0] port[0] settings[0] initial[0] sucker[-1] refactoring[0] to[0] simplify[0] reuse[0] of[0] the[0] html[0] parsing[0] beginnings[0] of[0] hooks[0] to[0] push[0] imported[0] rss/atom[0] out[0] to[0] remote[0] syndie[0] archives[0] automatically[0] though[0] not[0] enabled[0] currently[0] further[0] ssu[0] peer[0] test[0] cleanup[0] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
10351 commit 76f89ac93cda344091e75b0a9f238478bb5de5d5 2005-12-31 jrandom * include a simple torrent creator in the i2psnark web ui * further streaming lib closing improvements * refactored the load test components to run off live tunnels (though, still not safe for normal/anonymous load testing) 	10351 commit 76f89ac93cda344091e75b0a9f238478bb5de5d5 2005-12-31 jrandom * include a simple torrent creator in the i2psnark web ui * further streaming lib closing improvements * refactored the load test components to run off live tunnels (though, still not safe for normal/anonymous load testing)	2	-1	 10351[0] commit[0] 76f89ac93cda344091e75b0a9f238478bb5de5d5[0] 2005[0] -12[0] -31[0] jrandom[0] include[0] a[0] simple[0] torrent[0] creator[0] in[0] the[0] i2psnark[0] web[0] ui[0] further[0] streaming[0] lib[0] closing[0] improvements[1] refactored[0] the[0] load[0] test[0] components[0] to[0] run[0] off[0] live[0] tunnels[0] though[0] still[0] not[0] safe[0] for[0] normal/anonymous[0] load[0] testing[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
11392 commit 8e3e8ada32d4d69e6cecb58d0e253687b5a02877 * refactored and revamped the capacity threshold calculation to take into account various skew situations and the capacity growth constant with the intent of producing a higher quality threshold whenever possible * increased the minimum # of fast peers from 4 to 8 (yay), which means we'll try to have at least some peers to choose from * added a new router config option - "router.maxparticipatingtunnels". this is useful for gracefully shutting down the router (aka set it to 0 and wait until the router is no longer participating in tunnels, then shutdown). you can probably also come up with other situations where this is useful, but i don't want to spoil all the fun ;) 	11392 commit 8e3e8ada32d4d69e6cecb58d0e253687b5a02877 * refactored and revamped the capacity threshold calculation to take into account various skew situations and the capacity growth constant with the intent of producing a higher quality threshold whenever possible * increased the minimum # of fast peers from 4 to 8 (yay) which means we'll try to have at least some peers to choose from * added a new router config option - "router.<br>maxparticipatingtunnels"<br> this is useful for gracefully shutting down the router (aka set it to 0 and wait until the router is no longer participating in tunnels, then shutdown)<br> you can probably also come up with other situations where this is useful, but i don't want to spoil all the fun fun	3	-2	 11392[0] commit[0] 8e3e8ada32d4d69e6cecb58d0e253687b5a02877[0] refactored[0] and[0] revamped[0] the[0] capacity[0] threshold[0] calculation[0] to[0] take[0] into[0] account[0] various[0] skew[0] situations[0] and[0] the[0] capacity[0] growth[0] constant[0] with[0] the[0] intent[0] of[0] producing[0] a[0] higher[0] quality[0] threshold[0] whenever[0] possible[0] increased[0] the[0] minimum[0] #[0] of[0] fast[0] peers[0] from[0] 4[0] to[0] 8[0] yay[1] which[0] means[0] we'll[0] try[0] to[0] have[0] at[0] least[0] some[0] peers[0] to[0] choose[0] from[0] added[0] a[0] new[0] router[0] config[0] option[0] router[0] [[Sentence=-1,2=word max, 1-5]] maxparticipatingtunnels[0] [[Sentence=-1,1=word max, 1-5]] this[0] is[0] useful[1] for[0] gracefully[2] shutting[0] down[0] the[0] router[0] aka[0] set[0] it[0] to[0] 0[0] and[0] wait[0] until[0] the[0] router[0] is[0] no[0] longer[0] participating[0] in[0] tunnels[0] then[0] shutdown[0] [[Sentence=-1,3=word max, 1-5]] you[0] can[0] probably[0] also[0] come[0] up[0] with[0] other[0] situations[0] where[0] this[0] is[0] useful[1] but[0] i[0] don't[0] want[0] to[0] spoil[-1] all[0] the[0] fun[1] [[Sentence=-2,2=word max, 1-5]][[[3,-2 max of sentences]]]
11664 commit 52b1c0a9262bb8c573ae73172ce11d80f3289324 * netdb searchreply and lookup messages now contain h(peer), not the peer's full routerinfo (making a searchreply message  100 bytes, down from  30kb, and the lookup message  64 bytes, down from  10kb) * when we get the netdb searchreply or lookup message referencing someone we don't know, we fire off a lookup for them * reduced some excessive padding * dropped the dbsearchreplymessagehandler, since it shouldn't be used (all search replies should be handled by a messageselector built by the original search message) * removed some oddball constructors from the sendmessagedirectjob and sendtunnelmessagejob (always must specify a timeout) * refactored sendtunnelmessagejob main handler method into smaller logical methods 	11664 commit 52b1c0a9262bb8c573ae73172ce11d80f3289324 * netdb searchreply and lookup messages now contain h(peer) not the peer's full routerinfo (making a searchreply message  100 bytes, down from  30kb, and the lookup message  64 bytes, down from  10kb) * when we get the netdb searchreply or lookup message referencing someone we don't know, we fire off a lookup for them * reduced some excessive padding * dropped the dbsearchreplymessagehandler, since it shouldn't be used (all search replies should be handled by a messageselector built by the original search message) * removed some oddball constructors from the sendmessagedirectjob and sendtunnelmessagejob (always must specify a timeout) * refactored sendtunnelmessagejob main handler method into smaller logical methods	1	-1	 11664[0] commit[0] 52b1c0a9262bb8c573ae73172ce11d80f3289324[0] netdb[0] searchreply[0] and[0] lookup[0] messages[0] now[0] contain[0] h[0] peer[0] not[0] the[0] peer's[0] full[0] routerinfo[0] making[0] a[0] searchreply[0] message[0] 100[0] bytes[0] down[0] from[0] 30kb[0] and[0] the[0] lookup[0] message[0] 64[0] bytes[0] down[0] from[0] 10kb[0] when[0] we[0] get[0] the[0] netdb[0] searchreply[0] or[0] lookup[0] message[0] referencing[0] someone[0] we[0] don't[0] know[0] we[0] fire[0] off[0] a[0] lookup[0] for[0] them[0] reduced[0] some[0] excessive[-1][--1 LastWordBoosterStrength] padding[0] dropped[0] the[0] dbsearchreplymessagehandler[0] since[0] it[0] shouldn't[0] be[0] used[0] all[0] search[0] replies[0] should[0] be[0] handled[0] by[0] a[0] messageselector[0] built[0] by[0] the[0] original[0] search[0] message[0] removed[0] some[0] oddball[0] constructors[0] from[0] the[0] sendmessagedirectjob[0] and[0] sendtunnelmessagejob[0] always[0] must[0] specify[0] a[0] timeout[0] refactored[0] sendtunnelmessagejob[0] main[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
11728 commit 71a6cf4ee6e547f3383bb44451e63588d2b148fa * adjust the algorithm to deal with io bound requests: if more tokens become available while the first pending request is still blocked on read/write (aka after allocation and before next .waitforallocation()), give the tokens to the next request * refactor the satisfy{in,out}boundrequests methods into smaller logical units 	11728 commit 71a6cf4ee6e547f3383bb4451e63588d2b148fa * adjust the algorithm to deal with io bound requests: if more tokens become available while the first pending request is still blocked on read/write (aka after allocation and before next .<br>waitforallocation( give the tokens to the next request * refactor the satisfy{in,out}boundrequests methods into smaller logical units	2	-1	 11728[0] commit[0] 71a6cf4ee6e547f3383bb44451e63588d2b148fa/71a6cf4ee6e547f3383bb4451e63588d2b148fa[0] adjust[0] the[0] algorithm[0] to[0] deal[0] with[0] io[0] bound[0] requests[0] if[0] more[0] tokens[0] become[0] available[0] while[0] the[0] first[0] pending[0] request[0] is[0] still[0] blocked[0] on[0] read/write[0] aka[0] after[0] allocation[0] and[0] before[0] next[0] [[Sentence=-1,1=word max, 1-5]] waitforallocation[0] give[0] the[0] tokens[0] to[0] the[0] next[0] request[0] refactor[0] the[0] satisfy{in[1] out}boundrequests[0] methods[0] into[0] smaller[0] logical[0] units[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
11785 commit 4b8ac8166953306f472db7b15888c4f011a0c0b4 minor refactoring, javadoc dont add an arbitrary extra router.clock_fudge_factor to the expiration 	11785 commit 4b8ac8166953306f472db7b1588c4f011a0c0b4 minor refactoring, javadoc dont add an arbitrary extra router.<br>clock_fudge_factor to the expiration	1	-1	 11785[0] commit[0] 4b8ac8166953306f472db7b15888c4f011a0c0b4/4b8ac8166953306f472db7b1588c4f011a0c0b4[0] minor[0] refactoring[0] javadoc[0] dont[0] add[0] an[0] arbitrary[0] extra[0] router[0] [[Sentence=-1,1=word max, 1-5]] clock_fudge_factor[0] to[0] the[0] expiration[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
11875 commit 2f17bfd71c05e8cd2b5438f4baf559514e9bd7d3 minor refactoring. i hate how large that method is, but beyond the essential stuff, its pretty much just logging and benchmarking. plus, yeah, this method still takes too long in some situations. working on identifying why... 	11875 commit 2f17bfd71c05e8cd2b5438f4baf559514e9bd7d3 minor refactoring.<br> i hate how large that method is, but beyond the essential stuff, its pretty much just logging and benchmarking.<br> plus, yeah, this method still takes too long in some situations.<br> working on identifying why.	1	-4	 11875[0] commit[0] 2f17bfd71c05e8cd2b5438f4baf559514e9bd7d3[0] minor[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]] i[0] hate[-3] how[0] large[0] that[0] method[0] is[0] but[0] beyond[0] the[0] essential[0] stuff[0] its[0] pretty[0] much[0] just[0] logging[0] and[0] benchmarking[0] [[Sentence=-4,1=word max, 1-5]] plus[0] yeah[0] this[0] method[0] still[0] takes[0] too[0] long[0] in[0] some[0] situations[0] [[Sentence=-1,1=word max, 1-5]] working[0] on[0] identifying[0] why[0] [[Sentence=-1,1=word max, 1-5]][[[1,-4 max of sentences]]]
12059 commit 60584228d954950893f0e64da63ec2853c9d93b5 refactored packet handling into type specific methods removed nested synchronization (which had been causing undetected deadlocks) made sync blocks smaller, though this may have opened holes related to resent ack/syn/close packets that are delivered in a race. i'm not as fluent in the ministreaming lib code as i should be (yet), but duck's thread dumps were showing hundreds of threads waiting on a lock that'll never get released (since the only way to release it would be to receive another packet, and no more packets can be received until the lock is released, etc) also, i2psession is threadsafe - i can see no reason to synchronize on it (and it was being synchronized on only part of the time?) also, refactored the charset encoding stuff and minor log tweaking i've been testing this for the last hour or so, on eepsites and squid (large and small files), as well as irc, and there haven't been any glitches. but it needs more testing before it can be released, obviously. 	12059 commit 60584228d954950893f0e64da63ec2853c9d93b5 refactored packet handling into type specific methods removed nested synchronization (which had been causing undetected deadlocks) made sync blocks smaller, though this may have opened holes related to resent ack/syn/close packets that are delivered in a race.<br> i'm not as fluent in the ministreaming lib code as i should be (yet) but duck's thread dumps were showing hundreds of threads waiting on a lock that'll never get released (since the only way to release it would be to receive another packet, and no more packets can be received until the lock is released, etc) also, i2psession is threadsafe - i can see no reason to synchronize on it (and it was being synchronized on only part of the time?<br> also, refactored the charset encoding stuff and minor log tweaking i've been testing this for the last hour or so, on eepsites and squid (large and small files) as well as irc, and there haven't been any glitches.<br> but it needs more testing before it can be released, obviously.	1	-3	 12059[0] commit[0] 60584228d954950893f0e64da63ec2853c9d93b5[0] refactored[0] packet[0] handling[0] into[0] type[0] specific[0] methods[0] removed[0] nested[0] synchronization[0] which[0] had[0] been[0] causing[0] undetected[0] deadlocks[0] made[0] sync[0] blocks[0] smaller[0] though[0] this[0] may[0] have[0] opened[0] holes[0] related[0] to[0] resent[-2] ack/syn/close[0] packets[0] that[0] are[0] delivered[0] in[0] a[0] race[0] [[Sentence=-3,1=word max, 1-5]] i'm[0] not[0] as[0] fluent[0] in[0] the[0] ministreaming[0] lib[0] code[0] as[0] i[0] should[0] be[0] yet[0] but[0] duck's[0] thread[0] dumps[0] were[0] showing[0] hundreds[0] of[0] threads[0] waiting[0] on[0] a[0] lock[0] that'll[0] never[0] get[0] released[0] since[0] the[0] only[0] way[0] to[0] release[0] it[0] would[0] be[0] to[0] receive[0] another[0] packet[0] and[0] no[0] more[0] packets[0] can[0] be[0] received[0] until[0] the[0] lock[0] is[0] released[0] etc[0] also[0] i2psession[0] is[0] threadsafe[0] i[0] can[0] see[0] no[0] reason[0] to[0] synchronize[0] on[0] it[0] and[0] it[0] was[0] being[0] synchronized[0] on[0] only[0] part[0] of[0] the[0] time[0] [[Sentence=-1,1=word max, 1-5]] also[0] refactored[0] the[0] charset[0] encoding[0] stuff[0] and[0] minor[0] log[0] tweaking[0] i've[0] been[0] testing[0] this[0] for[0] the[0] last[0] hour[0] or[0] so[0] on[0] eepsites[0] and[0] squid[0] large[0] and[0] small[0] files[0] as[0] well[0] as[0] irc[0] and[0] there[0] haven't[0] been[0] any[0] glitches[0] [[Sentence=-1,1=word max, 1-5]] but[0] it[0] needs[0] more[0] testing[0] before[0] it[0] can[0] be[0] released[0] obviously[0] [[Sentence=-1,1=word max, 1-5]][[[1,-3 max of sentences]]]
12118 commit 7e1b49a74262b2da3cb38a6d35ef8fcdd61b8f69 fixed up some of the cleanup code to handle out of order responses minor refactoring, formatting 	12118 commit 7e1b49a74262b2da3cb38a6d35ef8fcdd61b8f69 fixed up some of the cleanup code to handle out of order responses minor refactoring, formatting	1	-1	 12118[0] commit[0] 7e1b49a74262b2da3cb38a6d35ef8fcdd61b8f69[0] fixed[0] up[0] some[0] of[0] the[0] cleanup[0] code[0] to[0] handle[0] out[0] of[0] order[0] responses[0] minor[0] refactoring[0] formatting[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
12124 commit 3c762c9a02316dd167213269e0cc51cc32b374e4 short circuit some handling when building custom length tunnels if a client only wants 0 hop tunnels, give them 0 hop tunnels (rather than wasting a 2  hop on it) make innetpool.dropped and innetpool.duplicate rate stats, not frequency stats formatting, minor refactoring 	12124 commit 3c762c9a02316dd167213269e0cc51cc32b374e4 short circuit some handling when building custom length tunnels if a client only wants 0 hop tunnels, give them 0 hop tunnels (rather than wasting a 2  hop on it) make innetpool.<br>dropped and innetpool.<br>duplicate rate stats, not frequency stats formatting, minor refactoring	1	-1	 12124[0] commit[0] 3c762c9a02316dd167213269e0cc51cc32b374e4[0] short[0] circuit[0] some[0] handling[0] when[0] building[0] custom[0] length[0] tunnels[0] if[0] a[0] client[0] only[0] wants[0] 0[0] hop[0] tunnels[0] give[0] them[0] 0[0] hop[0] tunnels[0] rather[0] than[0] wasting[0] a[0] 2[0] hop[0] on[0] it[0] make[0] innetpool[0] [[Sentence=-1,1=word max, 1-5]] dropped[0] and[0] innetpool[0] [[Sentence=-1,1=word max, 1-5]] duplicate[0] rate[0] stats[0] not[0] frequency[0] stats[0] formatting[0] minor[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
12125 commit ba5f0fb70b15372b02fdf0f6cbe8aa81016ada9e correctly differentiate between handled & matched requests logging and some minor refactoring 	12125 commit ba5f0fb70b15372b02fdf0f6cbe8a81016ada9e correctly differentiate between handled & matched requests logging and some minor refactoring	1	-1	 12125[0] commit[0] ba5f0fb70b15372b02fdf0f6cbe8aa81016ada9e/ba5f0fb70b15372b02fdf0f6cbe8a81016ada9e[0] correctly[0] differentiate[0] between[0] handled[0] &[0] matched[0] requests[0] logging[0] and[0] some[0] minor[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
