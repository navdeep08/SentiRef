Move Class	Translation	Positive	Negative	EmotionRationale
108 commit c0c70d37c102e8f4a74629c801d108f75c7b574b bug 479592 - support for docker compose also added a 'dockerconnectionmanager#getallconnections()' method that returns a list (can be empty) to use java 8 streams api also added a 'dockerconnectionmanager#hasconnections()' to verify if there's any connection (avoids checking for null and size   0) refactored the builddockerimagejob by extracting common methods in a superclass. change-id: i2517c8db139f91ac08ee1db9fbc0a47de7a08d74 signed-off-by: xavier coulon  xcoulon@redhat.com  reviewed-on: https://git.eclipse.org/r/79345 tested-by: hudson ci reviewed-by: jeff johnston  jjohnstn@redhat.com  	108 commit c0c70d37c102e8f4a74629c801d108f75c7b574b bug 479592 - support for docker compose also added a 'dockerconnectionmanager#getallconnections(' method that returns a list (can be empty) to use java 8 streams api also added a 'dockerconnectionmanager#hasconnections(' to verify if there's any connection (avoids checking for null and size   0) refactored the builddockerimagejob by extracting common methods in a superclass.<br> change-id: i2517c8db139f91ac08ee1db9fbc0a47de7a08d74 signed-off-by: xavier coulon  xcoulon@redhat.<br>com  reviewed-on: https://git.<br>eclipse.<br>org/r/79345 tested-by: hudson ci reviewed-by: jeff johnston  johnstn@redhat.<br>com 	1	-2	 108[0] commit[0] c0c70d37c102e8f4a74629c801d108f75c7b574b[0] bug[0] 479592[0] support[0] for[0] docker[0] compose[0] also[0] added[0] a[0] 'dockerconnectionmanager#getallconnections[0] '[0] method[0] that[0] returns[0] a[0] list[0] can[0] be[0] empty[0] to[0] use[0] java[0] 8[0] streams[0] api[0] also[0] added[0] a[0] 'dockerconnectionmanager#hasconnections[0] '[0] to[0] verify[0] if[0] there's[0] any[0] connection[0] avoids[-1] checking[0] for[0] null[0] and[0] size[0] 0[0] refactored[0] the[0] builddockerimagejob[0] by[0] extracting[0] common[0] methods[0] in[0] a[0] superclass[0] [[Sentence=-2,1=word max, 1-5]] change[0] id[0] i2517c8db139f91ac08ee1db9fbc0a47de7a08d74[0] signed[0] off[0] by[0] xavier[0] coulon[0] xcoulon@redhat[0] [[Sentence=-1,1=word max, 1-5]] com[0] reviewed[0] on[0] https[0] ://git[0] [[Sentence=-1,1=word max, 1-5]] eclipse[0] [[Sentence=-1,1=word max, 1-5]] org/r/79345[0] tested[0] by[0] hudson[0] ci[0] reviewed[0] by[0] jeff[0] johnston[0] jjohnstn@redhat/johnstn@redhat[0] [[Sentence=-1,1=word max, 1-5]] com[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
267 commit 7de3dd3c1b0181fb437f73e3add3b8feddbf9fbe bug 489397 - docker file editor contribution refactor to proper linux tools package names. change-id: i1a25a2f90298f2f3c35818a718f731f96a394321 signed-off-by: alexander kurtakov  akurtako@redhat.com  reviewed-on: https://git.eclipse.org/r/69020 tested-by: hudson ci 	267 commit 7de3dd3c1b0181fb437f73e3add3b8feddbf9fbe bug 489397 - docker file editor contribution refactor to proper linux tools package names.<br> change-id: i1a25a2f90298f2f3c35818a718f731f96a394321 signed-off-by: alexander kurtakov  akurtako@redhat.<br>com  reviewed-on: https://git.<br>eclipse.<br>org/r/69020 tested-by: hudson ci	1	-1	 267[0] commit[0] 7de3dd3c1b0181fb437f73e3add3b8feddbf9fbe[0] bug[0] 489397[0] docker[0] file[0] editor[0] contribution[0] refactor[0] to[0] proper[0] linux[0] tools[0] package[0] names[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i1a25a2f90298f2f3c35818a718f731f96a394321[0] signed[0] off[0] by[0] alexander[0] kurtakov[0] akurtako@redhat[0] [[Sentence=-1,1=word max, 1-5]] com[0] reviewed[0] on[0] https[0] ://git[0] [[Sentence=-1,1=word max, 1-5]] eclipse[0] [[Sentence=-1,1=word max, 1-5]] org/r/69020[0] tested[0] by[0] hudson[0] ci[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
415 commit 6c859255f4bca47dfc8ace839ba28d07a9a2cc37 bug 480401 - create a launch configuration when running an image from wizard creating a launchconfiguration when the container starts, adding a creation_date attribute to be able to find the latest launch config for a given image name, when the user selects the image again to run another container. protecting the domain class initialization by checking that retrieved info from the client are not null. retrieving last launch configuration for the selected image name to prefill the wizard (some refactoring was required to pass the last launch configuration and fill the page models) added swtbot tests change-id: if24e0c1b7f7aea838f86a3c37fec42ae2bfe03f7 signed-off-by: xavier coulon  xcoulon@redhat.com  reviewed-on: https://git.eclipse.org/r/61494 tested-by: hudson ci reviewed-by: jeff johnston  jjohnstn@redhat.com  	415 commit 6c859255f4bca47dfc8ace839ba28d07a9a2cc37 bug 480401 - create a launch configuration when running an image from wizard creating a launchconfiguration when the container starts, adding a creation_date attribute to be able to find the latest launch config for a given image name, when the user selects the image again to run another container.<br> protecting the domain class initialization by checking that retrieved info from the client are not null.<br> retrieving last launch configuration for the selected image name to prefill the wizard (some refactoring was required to pass the last launch configuration and fill the page models) added swtbot tests change-id: if24e0c1b7f7aea838f86a3c37fec42ae2bfe03f7 signed-off-by: xavier coulon  xcoulon@redhat.<br>com  reviewed-on: https://git.<br>eclipse.<br>org/r/61494 tested-by: hudson ci reviewed-by: jeff johnston  johnstn@redhat.<br>com 	1	-1	 415[0] commit[0] 6c859255f4bca47dfc8ace839ba28d07a9a2cc37[0] bug[0] 480401[0] create[0] a[0] launch[0] configuration[0] when[0] running[0] an[0] image[0] from[0] wizard[0] creating[0] a[0] launchconfiguration[0] when[0] the[0] container[0] starts[0] adding[0] a[0] creation_date[0] attribute[0] to[0] be[0] able[0] to[0] find[0] the[0] latest[0] launch[0] config[0] for[0] a[0] given[0] image[0] name[0] when[0] the[0] user[0] selects[0] the[0] image[0] again[0] to[0] run[0] another[0] container[0] [[Sentence=-1,1=word max, 1-5]] protecting[0] the[0] domain[0] class[0] initialization[0] by[0] checking[0] that[0] retrieved[0] info[0] from[0] the[0] client[0] are[0] not[0] null[0] [[Sentence=-1,1=word max, 1-5]] retrieving[0] last[0] launch[0] configuration[0] for[0] the[0] selected[0] image[0] name[0] to[0] prefill[0] the[0] wizard[0] some[0] refactoring[0] was[0] required[0] to[0] pass[0] the[0] last[0] launch[0] configuration[0] and[0] fill[0] the[0] page[0] models[0] added[0] swtbot[0] tests[0] change[0] id[0] if24e0c1b7f7aea838f86a3c37fec42ae2bfe03f7[0] signed[0] off[0] by[0] xavier[0] coulon[0] xcoulon@redhat[0] [[Sentence=-1,1=word max, 1-5]] com[0] reviewed[0] on[0] https[0] ://git[0] [[Sentence=-1,1=word max, 1-5]] eclipse[0] [[Sentence=-1,1=word max, 1-5]] org/r/61494[0] tested[0] by[0] hudson[0] ci[0] reviewed[0] by[0] jeff[0] johnston[0] jjohnstn@redhat/johnstn@redhat[0] [[Sentence=-1,1=word max, 1-5]] com[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
1506 commit 4aaeb4d22687ac593b8131c8efde1ad01c839113 tmf: refactor xml model code, using factories to re-use element parsers the same xml syntax (and thus parsing) can be used for many xml components' element, like state providers and views, but the behavior of each component may be different. we use a factory to define create the classes with the various behaviors. change-id: iec5d54155b93a79b1ebc5ffeb8eaffef5e6569ca signed-off-by: geneviève bastien  gbastien lttng@versatic.net  reviewed-on: https://git.eclipse.org/r/23157 tested-by: hudson ci reviewed-by: alexandre montplaisir  alexmonthy@voxpopuli.im  ip-clean: alexandre montplaisir  alexmonthy@voxpopuli.im  	1506 commit 4aeb4d22687ac593b8131c8efde1ad01c839113 tmf: refactor xml model code, using factories to re-use element parsers the same xml syntax (and thus parsing) can be used for many xml components' element, like state providers and views, but the behavior of each component may be different.<br> we use a factory to define create the classes with the various behaviors.<br> change-id: iec5d54155b93a79b1ebc5ffeb8eaffef5e6569ca signed-off-by: geneviève bastien  gbastien lttng@versatic.<br>net  reviewed-on: https://git.<br>eclipse.<br>org/r/23157 tested-by: hudson ci reviewed-by: alexandre montplaisir  alexmonthy@voxpopuli.<br>im  ip-clean: alexandre montplaisir  alexmonthy@voxpopuli.<br>im 	1	-1	 1506[0] commit[0] 4aaeb4d22687ac593b8131c8efde1ad01c839113/4aeb4d22687ac593b8131c8efde1ad01c839113[0] tmf[0] refactor[0] xml[0] model[0] code[0] using[0] factories[0] to[0] re[0] use[0] element[0] parsers[0] the[0] same[0] xml[0] syntax[0] and[0] thus[0] parsing[0] can[0] be[0] used[0] for[0] many[0] xml[0] components'[0] element[0] like[0] state[0] providers[0] and[0] views[0] but[0] the[0] behavior[0] of[0] each[0] component[0] may[0] be[0] different[0] [[Sentence=-1,1=word max, 1-5]] we[0] use[0] a[0] factory[0] to[0] define[0] create[0] the[0] classes[0] with[0] the[0] various[0] behaviors[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] iec5d54155b93a79b1ebc5ffeb8eaffef5e6569ca[0] signed[0] off[0] by[0] geneviève[0] bastien[0] gbastien[0] lttng@versatic[0] [[Sentence=-1,1=word max, 1-5]] net[0] reviewed[0] on[0] https[0] ://git[0] [[Sentence=-1,1=word max, 1-5]] eclipse[0] [[Sentence=-1,1=word max, 1-5]] org/r/23157[0] tested[0] by[0] hudson[0] ci[0] reviewed[0] by[0] alexandre[0] montplaisir[0] alexmonthy@voxpopuli[0] [[Sentence=-1,1=word max, 1-5]] im[0] ip[0] clean[0] alexandre[0] montplaisir[0] alexmonthy@voxpopuli[0] [[Sentence=-1,1=word max, 1-5]] im[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3554 commit e112cbd0b5c65693969a62a2ab911665503152c5 implement simultaneously opened traces in tmf - change all supporting views to use a generic itmftrace instead of a tmfexperiment. - tmfexperiment* signals removed, replaced by generic tmftrace* signals. - tmftraceopened signal is sent when opening a trace. views should get ready to receive tmftracerangeupdated if they need to coalesce requests. it is too early to access any state system. - tmftracerangeupdated signal is sent from the tmftrace after receiving tmftraceopened. request coalescing can happen handling this signal. - tmftrace base class triggers its indexing on receiving tmftracerangeupdated. - removed indexing of custom traces in inittrace, now triggered by tmftraceopened in tmftrace base class. - tmfexperiment initializes the streaming monitor on reception of tmftraceopened. - tmftraceselected signal is sent when the trace is initially brought to top or any time it becomes the active trace. any component can also broadcast the signal to trigger bringing the trace to top. - tmftraceclosed signal is sent when the trace is closed. all jobs/threads/requests related to this trace should be canceled. the trace will be disposed after the signal has been broadcast. - these signals can contain a tmfexperiment as the affected trace. any view which needs to check or handle individual trace should specially handle an instance of tmfexperiment and examine its underlying traces. - building of state system and statistics moved from inittrace to reception of tmftraceopenedsignal. this allows, in the case of a reopened trace, for the previous trace to be disposed and its files closed before the new instance initializes the state system. - all supporting views cancel running jobs/threads/requests on tmftraceclosedsignal. - controlflow/resources view store entry list of all opened traces in hash map. - controlflow/resources view use cancelable buildthread. - cleanup the state system when disposing a ctfkerneltrace. - dispose of ctftmftrace clears reference to ctftrace and this is used to prevent npe on getnext of disposed trace. - replace events view with editor area in lttng kernel and tracing perspectives. - updated definition of tracetype extension for defaulteditor element. - openexperimenthandler opens the experiment in events editor. default editor is used unless all underlying traces share a common defaulteditor in their respective tracetype definition. - opentracehandler opens the trace in default or specified events editor. it no longer uses a dummy experiment to wrap the trace. - removed methods and variables related to current experiment. - removed eventsvieweditor previously used as a workaround to open bookmarks in events view. - removed clears views command, made obsolete by closing all traces (close all on any tab). - itmfeventsfilterlistener/provider interfaces removed and replaces with signal handling. this removes complexity of handling multiple listeners and providers being added and removed. - fixed missing scaling to nanoseconds of timestamps in abstractstatechangeinput. - fixed synchronization issue with armrequest in tmftrace when trace is disposed (executor is shutdown). - tmfeditorinput modified to prevent lingering reference in platform. - tmfeventseditor implements ipartlistener to trigger broadcast of tmftraceselectedsignal, instead of at setfocus which was sometimes called twice by the platform. - tmfeventseditor no longer needs to use inner tmfexperiment subclass to trigger indexing when experiment opened from bookmark. - unsortedpropertysheetpage class created instead of inner class in tmfeventseditor which was causing lingering reference to editor in platform. - remove unused tmftraceparserupdatedsignal. - tmfenvironmentview refactored to update its table on tmftraceselectedsignal. - use nanosecond timestamp scale constant where appropriate. - add interface to histogramview to allow its controls to retrieve the current trace. - implement synchronization of time range in timechartview. - fix lingering reference to completed requests in tmfuml2sdsyncloader. - fix tmfvirtualtable setselection allowing top rank to be too large when selecting near end of table. - fix hanging wait cursor in sequence diagram view for traces without any sequence events. change-id: i357accc8fc7ea96544d32db758abff4760682304 reviewed-on: https://git.eclipse.org/r/8554 tested-by: hudson ci reviewed-by: bernd hufmann  bhufmann@gmail.com  ip-clean: bernd hufmann  bhufmann@gmail.com  tested-by: bernd hufmann  bhufmann@gmail.com  reviewed-by: matthew khouzam  matthew.khouzam@ericsson.com  ip-clean: matthew khouzam  matthew.khouzam@ericsson.com  tested-by: matthew khouzam  matthew.khouzam@ericsson.com  reviewed-by: alexandre montplaisir  alexmonthy@voxpopuli.im  	3554 commit e112cbd0b5c65693969a62a2ab911665503152c5 implement simultaneously opened traces in tmf - change all supporting views to use a generic itmftrace instead of a tmfexperiment.<br> - tmfexperiment* signals removed, replaced by generic tmftrace* signals.<br> - tmftraceopened signal is sent when opening a trace.<br> views should get ready to receive tmftracerangeupdated if they need to coalesce requests.<br> it is too early to access any state system.<br> - tmftracerangeupdated signal is sent from the tmftrace after receiving tmftraceopened.<br> request coalescing can happen handling this signal.<br> - tmftrace base class triggers its indexing on receiving tmftracerangeupdated.<br> - removed indexing of custom traces in inittrace, now triggered by tmftraceopened in tmftrace base class.<br> - tmfexperiment initializes the streaming monitor on reception of tmftraceopened.<br> - tmftraceselected signal is sent when the trace is initially brought to top or any time it becomes the active trace.<br> any component can also broadcast the signal to trigger bringing the trace to top.<br> - tmftraceclosed signal is sent when the trace is closed.<br> all jobs/threads/requests related to this trace should be canceled.<br> the trace will be disposed after the signal has been broadcast.<br> - these signals can contain a tmfexperiment as the affected trace.<br> any view which needs to check or handle individual trace should specially handle an instance of tmfexperiment and examine its underlying traces.<br> - building of state system and statistics moved from inittrace to reception of tmftraceopenedsignal.<br> this allows, in the case of a reopened trace, for the previous trace to be disposed and its files closed before the new instance initializes the state system.<br> - all supporting views cancel running jobs/threads/requests on tmftraceclosedsignal.<br> - controlflow/resources view store entry list of all opened traces in hash map.<br> - controlflow/resources view use cancelable buildthread.<br> - cleanup the state system when disposing a ctfkerneltrace.<br> - dispose of ctftmftrace clears reference to ctftrace and this is used to prevent npe on getnext of disposed trace.<br> - replace events view with editor area in lttng kernel and tracing perspectives.<br> - updated definition of tracetype extension for defaulteditor element.<br> - openexperimenthandler opens the experiment in events editor.<br> default editor is used unless all underlying traces share a common defaulteditor in their respective tracetype definition.<br> - opentracehandler opens the trace in default or specified events editor.<br> it no longer uses a dummy experiment to wrap the trace.<br> - removed methods and variables related to current experiment.<br> - removed eventsvieweditor previously used as a workaround to open bookmarks in events view.<br> - removed clears views command, made obsolete by closing all traces (close all on any tab)<br> - itmfeventsfilterlistener/provider interfaces removed and replaces with signal handling.<br> this removes complexity of handling multiple listeners and providers being added and removed.<br> - fixed missing scaling to nanoseconds of timestamps in abstractstatechangeinput.<br> - fixed synchronization issue with armrequest in tmftrace when trace is disposed (executor is shutdown)<br> - tmfeditorinput modified to prevent lingering reference in platform.<br> - tmfeventseditor implements ipartlistener to trigger broadcast of tmftraceselectedsignal, instead of at setfocus which was sometimes called twice by the platform.<br> - tmfeventseditor no longer needs to use inner tmfexperiment subclass to trigger indexing when experiment opened from bookmark.<br> - unsortedpropertysheetpage class created instead of inner class in tmfeventseditor which was causing lingering reference to editor in platform.<br> - remove unused tmftraceparserupdatedsignal.<br> - tmfenvironmentview refactored to update its table on tmftraceselectedsignal.<br> - use nanosecond timestamp scale constant where appropriate.<br> - add interface to histogramview to allow its controls to retrieve the current trace.<br> - implement synchronization of time range in timechartview.<br> - fix lingering reference to completed requests in tmfuml2sdsyncloader.<br> - fix tmfvirtualtable setselection allowing top rank to be too large when selecting near end of table.<br> - fix hanging wait cursor in sequence diagram view for traces without any sequence events.<br> change-id: i357acc8fc7ea96544d32db758abff4760682304 reviewed-on: https://git.<br>eclipse.<br>org/r/8554 tested-by: hudson ci reviewed-by: bernd hufman  bhufmann@gmail.<br>com  ip-clean: bernd hufman  bhufmann@gmail.<br>com  tested-by: bernd hufman  bhufmann@gmail.<br>com  reviewed-by: matthew khouzam  matthew.<br>khouzam@ericsson.<br>com  ip-clean: matthew khouzam  matthew.<br>khouzam@ericsson.<br>com  tested-by: matthew khouzam  matthew.<br>khouzam@ericsson.<br>com  reviewed-by: alexandre montplaisir  alexmonthy@voxpopuli.<br>im 	3	-2	 3554[0] commit[0] e112cbd0b5c65693969a62a2ab911665503152c5[0] implement[0] simultaneously[0] opened[0] traces[0] in[0] tmf[0] change[0] all[0] supporting[1] views[0] to[0] use[0] a[0] generic[0] itmftrace[0] instead[0] of[0] a[0] tmfexperiment[0] [[Sentence=-1,2=word max, 1-5]] tmfexperiment[0] signals[0] removed[0] replaced[0] by[0] generic[0] tmftrace[0] signals[0] [[Sentence=-1,1=word max, 1-5]] tmftraceopened[0] signal[0] is[0] sent[0] when[0] opening[0] a[0] trace[0] [[Sentence=-1,1=word max, 1-5]] views[0] should[0] get[0] ready[0] to[0] receive[0] tmftracerangeupdated[0] if[0] they[0] need[0] to[0] coalesce[0] requests[0] [[Sentence=-1,1=word max, 1-5]] it[0] is[0] too[0] early[0] to[0] access[0] any[0] state[0] system[0] [[Sentence=-1,1=word max, 1-5]] tmftracerangeupdated[0] signal[0] is[0] sent[0] from[0] the[0] tmftrace[0] after[0] receiving[0] tmftraceopened[0] [[Sentence=-1,1=word max, 1-5]] request[0] coalescing[0] can[0] happen[0] handling[0] this[0] signal[0] [[Sentence=-1,1=word max, 1-5]] tmftrace[0] base[0] class[0] triggers[0] its[0] indexing[0] on[0] receiving[0] tmftracerangeupdated[0] [[Sentence=-1,1=word max, 1-5]] removed[0] indexing[0] of[0] custom[0] traces[0] in[0] inittrace[0] now[0] triggered[0] by[0] tmftraceopened[0] in[0] tmftrace[0] base[0] class[0] [[Sentence=-1,1=word max, 1-5]] tmfexperiment[0] initializes[0] the[0] streaming[0] monitor[0] on[0] reception[0] of[0] tmftraceopened[0] [[Sentence=-1,1=word max, 1-5]] tmftraceselected[0] signal[0] is[0] sent[0] when[0] the[0] trace[0] is[0] initially[0] brought[0] to[0] top[0] or[0] any[0] time[0] it[0] becomes[0] the[0] active[0] trace[0] [[Sentence=-1,1=word max, 1-5]] any[0] component[0] can[0] also[0] broadcast[0] the[0] signal[0] to[0] trigger[0] bringing[0] the[0] trace[0] to[0] top[0] [[Sentence=-1,1=word max, 1-5]] tmftraceclosed[0] signal[0] is[0] sent[0] when[0] the[0] trace[0] is[0] closed[0] [[Sentence=-1,1=word max, 1-5]] all[0] jobs/threads/requests[0] related[0] to[0] this[0] trace[0] should[0] be[0] canceled[-1] [[Sentence=-2,1=word max, 1-5]] the[0] trace[0] will[0] be[0] disposed[-1] after[0] the[0] signal[0] has[0] been[0] broadcast[0] [[Sentence=-2,1=word max, 1-5]] these[0] signals[0] can[0] contain[0] a[0] tmfexperiment[0] as[0] the[0] affected[0] trace[0] [[Sentence=-1,1=word max, 1-5]] any[0] view[0] which[0] needs[0] to[0] check[0] or[0] handle[0] individual[0] trace[0] should[0] specially[1][-1 LastWordBoosterStrength] handle[0] an[0] instance[0] of[0] tmfexperiment[0] and[0] examine[0] its[0] underlying[0] traces[0] [[Sentence=-1,1=word max, 1-5]] building[0] of[0] state[0] system[0] and[0] statistics[0] moved[0] from[0] inittrace[0] to[0] reception[0] of[0] tmftraceopenedsignal[0] [[Sentence=-1,1=word max, 1-5]] this[0] allows[0] in[0] the[0] case[0] of[0] a[0] reopened[0] trace[0] for[0] the[0] previous[0] trace[0] to[0] be[0] disposed[-1] and[0] its[0] files[0] closed[0] before[0] the[0] new[0] instance[0] initializes[0] the[0] state[0] system[0] [[Sentence=-2,1=word max, 1-5]] all[0] supporting[1] views[0] cancel[-1] running[0] jobs/threads/requests[0] on[0] tmftraceclosedsignal[0] [[Sentence=-2,2=word max, 1-5]] controlflow/resources[0] view[0] store[0] entry[0] list[0] of[0] all[0] opened[0] traces[0] in[0] hash[0] map[0] [[Sentence=-1,1=word max, 1-5]] controlflow/resources[0] view[0] use[0] cancelable[-1] buildthread[0] [[Sentence=-2,1=word max, 1-5]] cleanup[0] the[0] state[0] system[0] when[0] disposing[0] a[0] ctfkerneltrace[0] [[Sentence=-1,1=word max, 1-5]] dispose[-1] of[0] ctftmftrace[0] clears[0] reference[0] to[0] ctftrace[0] and[0] this[0] is[0] used[0] to[0] prevent[0] npe[0] on[0] getnext[0] of[0] disposed[-1] trace[0] [[Sentence=-2,1=word max, 1-5]] replace[0] events[0] view[0] with[0] editor[0] area[0] in[0] lttng[0] kernel[0] and[0] tracing[0] perspectives[0] [[Sentence=-1,1=word max, 1-5]] updated[0] definition[0] of[0] tracetype[0] extension[0] for[0] defaulteditor[0] element[0] [[Sentence=-1,1=word max, 1-5]] openexperimenthandler[0] opens[0] the[0] experiment[0] in[0] events[0] editor[0] [[Sentence=-1,1=word max, 1-5]] default[-1] editor[0] is[0] used[0] unless[0] all[0] underlying[0] traces[0] share[0] a[0] common[0] defaulteditor[0] in[0] their[0] respective[2] tracetype[0] definition[0] [[Sentence=-2,3=word max, 1-5]] opentracehandler[0] opens[0] the[0] trace[0] in[0] default[-1] or[0] specified[0] events[0] editor[0] [[Sentence=-2,1=word max, 1-5]] it[0] no[0] longer[0] uses[0] a[0] dummy[0] experiment[0] to[0] wrap[0] the[0] trace[0] [[Sentence=-1,1=word max, 1-5]] removed[0] methods[0] and[0] variables[0] related[0] to[0] current[0] experiment[0] [[Sentence=-1,1=word max, 1-5]] removed[0] eventsvieweditor[0] previously[0] used[0] as[0] a[0] workaround[0] to[0] open[0] bookmarks[0] in[0] events[0] view[0] [[Sentence=-1,1=word max, 1-5]] removed[0] clears[0] views[0] command[0] made[0] obsolete[0] by[0] closing[0] all[0] traces[0] close[0] all[0] on[0] any[0] tab[0] [[Sentence=-1,1=word max, 1-5]] itmfeventsfilterlistener/provider[0] interfaces[0] removed[0] and[0] replaces[0] with[0] signal[0] handling[0] [[Sentence=-1,1=word max, 1-5]] this[0] removes[0] complexity[0] of[0] handling[0] multiple[0] listeners[0] and[0] providers[0] being[0] added[0] and[0] removed[0] [[Sentence=-1,1=word max, 1-5]] fixed[0] missing[0] scaling[0] to[0] nanoseconds[0] of[0] timestamps[0] in[0] abstractstatechangeinput[0] [[Sentence=-1,1=word max, 1-5]] fixed[0] synchronization[0] issue[0] with[0] armrequest[0] in[0] tmftrace[0] when[0] trace[0] is[0] disposed[-1] executor[0] is[0] shutdown[0] [[Sentence=-2,1=word max, 1-5]] tmfeditorinput[0] modified[0] to[0] prevent[0] lingering[0] reference[0] in[0] platform[0] [[Sentence=-1,1=word max, 1-5]] tmfeventseditor[0] implements[0] ipartlistener[0] to[0] trigger[0] broadcast[0] of[0] tmftraceselectedsignal[0] instead[0] of[0] at[0] setfocus[0] which[0] was[0] sometimes[0] called[0] twice[0] by[0] the[0] platform[0] [[Sentence=-1,1=word max, 1-5]] tmfeventseditor[0] no[0] longer[0] needs[0] to[0] use[0] inner[0] tmfexperiment[0] subclass[0] to[0] trigger[0] indexing[0] when[0] experiment[0] opened[0] from[0] bookmark[0] [[Sentence=-1,1=word max, 1-5]] unsortedpropertysheetpage[0] class[0] created[0] instead[0] of[0] inner[0] class[0] in[0] tmfeventseditor[0] which[0] was[0] causing[0] lingering[0] reference[0] to[0] editor[0] in[0] platform[0] [[Sentence=-1,1=word max, 1-5]] remove[0] unused[0] tmftraceparserupdatedsignal[0] [[Sentence=-1,1=word max, 1-5]] tmfenvironmentview[0] refactored[0] to[0] update[0] its[0] table[0] on[0] tmftraceselectedsignal[0] [[Sentence=-1,1=word max, 1-5]] use[0] nanosecond[0] timestamp[0] scale[0] constant[0] where[0] appropriate[0] [[Sentence=-1,1=word max, 1-5]] add[0] interface[0] to[0] histogramview[0] to[0] allow[0] its[0] controls[0] to[0] retrieve[0] the[0] current[0] trace[0] [[Sentence=-1,1=word max, 1-5]] implement[0] synchronization[0] of[0] time[0] range[0] in[0] timechartview[0] [[Sentence=-1,1=word max, 1-5]] fix[0] lingering[0] reference[0] to[0] completed[0] requests[0] in[0] tmfuml2sdsyncloader[0] [[Sentence=-1,1=word max, 1-5]] fix[0] tmfvirtualtable[0] setselection[0] allowing[0] top[0] rank[0] to[0] be[0] too[0] large[0] when[0] selecting[0] near[0] end[0] of[0] table[0] [[Sentence=-1,1=word max, 1-5]] fix[0] hanging[0] wait[0] cursor[0] in[0] sequence[0] diagram[0] view[0] for[0] traces[0] without[0] any[0] sequence[0] events[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i357accc8fc7ea96544d32db758abff4760682304/i357acc8fc7ea96544d32db758abff4760682304[0] reviewed[0] on[0] https[0] ://git[0] [[Sentence=-1,1=word max, 1-5]] eclipse[0] [[Sentence=-1,1=word max, 1-5]] org/r/8554[0] tested[0] by[0] hudson[0] ci[0] reviewed[0] by[0] bernd[0] hufmann/hufman[0] bhufmann@gmail[0] [[Sentence=-1,1=word max, 1-5]] com[0] ip[0] clean[0] bernd[0] hufmann/hufman[0] bhufmann@gmail[0] [[Sentence=-1,1=word max, 1-5]] com[0] tested[0] by[0] bernd[0] hufmann/hufman[0] bhufmann@gmail[0] [[Sentence=-1,1=word max, 1-5]] com[0] reviewed[0] by[0] matthew[0] khouzam[0] matthew[0] [[Sentence=-1,1=word max, 1-5]] khouzam@ericsson[0] [[Sentence=-1,1=word max, 1-5]] com[0] ip[0] clean[0] matthew[0] khouzam[0] matthew[0] [[Sentence=-1,1=word max, 1-5]] khouzam@ericsson[0] [[Sentence=-1,1=word max, 1-5]] com[0] tested[0] by[0] matthew[0] khouzam[0] matthew[0] [[Sentence=-1,1=word max, 1-5]] khouzam@ericsson[0] [[Sentence=-1,1=word max, 1-5]] com[0] reviewed[0] by[0] alexandre[0] montplaisir[0] alexmonthy@voxpopuli[0] [[Sentence=-1,1=word max, 1-5]] im[0] [[Sentence=-1,1=word max, 1-5]][[[3,-2 max of sentences]]]
4303 commit 9454fcfb6577d3ba9b946438b8d7d058ba1d9aa1 tmf: internalize the state history storage backend initially, the design was to allow both state providers (inputs) and storage backends to be extended from external sources. the state input obviously has to be public, since the support for specific trace types is implemented in separate plugings. however, there is no immediate need to expose the storage backend api, since the only implementation resides in tmf. this could easily be revisited in the future if we want to support external state storage backends. for now, it'll simplify tmf's public api. this is candidate for the 1.0 branch, since it's only refactoring. signed-off-by: alexandre montplaisir  alexmonthy@voxpopuli.im  	4303 commit 9454fcfb6577d3ba9b946438b8d7d058ba1d9a1 tmf: internalize the state history storage backend initially, the design was to allow both state providers (inputs) and storage backends to be extended from external sources.<br> the state input obviously has to be public, since the support for specific trace types is implemented in separate plugings.<br> however, there is no immediate need to expose the storage backend api, since the only implementation resides in tmf.<br> this could easily be revisited in the future if we want to support external state storage backends.<br> for now, it'll simplify tmf's public api.<br> this is candidate for the 1.0 branch, since it's only refactoring.<br> signed-off-by: alexandre montplaisir  alexmonthy@voxpopuli.<br>im 	1	-2	 4303[0] commit[0] 9454fcfb6577d3ba9b946438b8d7d058ba1d9aa1/9454fcfb6577d3ba9b946438b8d7d058ba1d9a1[0] tmf[0] internalize[0] the[0] state[0] history[0] storage[0] backend[0] initially[0] the[0] design[0] was[0] to[0] allow[0] both[0] state[0] providers[0] inputs[0] and[0] storage[0] backends[0] to[0] be[0] extended[0] from[0] external[0] sources[-1] [[Sentence=-2,1=word max, 1-5]] the[0] state[0] input[0] obviously[0] has[0] to[0] be[0] public[0] since[0] the[0] support[0] for[0] specific[0] trace[0] types[0] is[0] implemented[0] in[0] separate[0] plugings[0] [[Sentence=-1,1=word max, 1-5]] however[0] there[0] is[0] no[0] immediate[0] need[0] to[0] expose[-1] the[0] storage[0] backend[0] api[0] since[0] the[0] only[0] implementation[0] resides[0] in[0] tmf[0] [[Sentence=-2,1=word max, 1-5]] this[0] could[0] easily[0] be[0] revisited[0] in[0] the[0] future[0] if[0] we[0] want[0] to[0] support[0] external[0] state[0] storage[0] backends[0] [[Sentence=-1,1=word max, 1-5]] for[0] now[0] it'll[0] simplify[0] tmf's[0] public[0] api[0] [[Sentence=-1,1=word max, 1-5]] this[0] is[0] candidate[0] for[0] the[0] 1[0] .0[0] branch[0] since[0] it's[0] only[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]] signed[0] off[0] by[0] alexandre[0] montplaisir[0] alexmonthy@voxpopuli[0] [[Sentence=-1,1=word max, 1-5]] im[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
4624 commit 66e5d8c0aac2cda10de88a35bacdaf3191127ee7 refactor tmftrace and dependencies - move parseevent to itmfeventparser 	4624 commit 66e5d8c0ac2cda10de88a35bacdaf3191127ee7 refactor tmftrace and dependencies - move parseevent to itmfeventparser	1	-1	 4624[0] commit[0] 66e5d8c0aac2cda10de88a35bacdaf3191127ee7/66e5d8c0ac2cda10de88a35bacdaf3191127ee7[0] refactor[0] tmftrace[0] and[0] dependencies[0] move[0] parseevent[0] to[0] itmfeventparser[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5025 commit 8c931db5607b7a3f0d9ac388073f1d80fe7df325 gcov & gprof refactoring: move internal classes in internal packages 	5025 commit 8c931db5607b7a3f0d9ac388073f1d80fe7df325 gcov & gprof refactoring: move internal classes in internal packages	1	-1	 5025[0] commit[0] 8c931db5607b7a3f0d9ac388073f1d80fe7df325[0] gcov[0] &[0] gprof[0] refactoring[0] move[0] internal[0] classes[0] in[0] internal[0] packages[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5519 commit 5437fc29b229d08a50b719c7ba5ed72e3e91f001 refactor the histogram view (bug352885) 	5519 commit 5437fc29b229d08a50b719c7ba5ed72e3e91f001 refactor the histogram view (bug352885)	1	-1	 5519[0] commit[0] 5437fc29b229d08a50b719c7ba5ed72e3e91f001[0] refactor[0] the[0] histogram[0] view[0] bug352885[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6012 commit 937ee3a53a8f11710f4cce0408952e10e4e39325 2011-01-13 andrew overholt  overholt@redhat.com  * src/: re-naming directories to account for refactoring. 	6012 commit 937ee3a53a8f11710f4cce0408952e10e4e39325 2011-01-13 andrew overholt  overholt@redhat.<br>com  * src/: re-naming directories to account for refactoring.	1	-1	 6012[0] commit[0] 937ee3a53a8f11710f4cce0408952e10e4e39325[0] 2011[0] -01[0] -13[0] andrew[0] overholt[0] overholt@redhat[0] [[Sentence=-1,1=word max, 1-5]] com[0] src/[0] re[0] naming[0] directories[0] to[0] account[0] for[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6116 commit 4d2ab4b110b483b15d950b897f05b89ee0ee8a45 refactor to abide by eclipse naming standards. 	6116 commit 4d2ab4b110b483b15d950b897f05b89ee0ee8a45 refactor to abide by eclipse naming standards.	1	-1	 6116[0] commit[0] 4d2ab4b110b483b15d950b897f05b89ee0ee8a45[0] refactor[0] to[0] abide[0] by[0] eclipse[0] naming[0] standards[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6118 commit 49689969a73c2b886fa5992f759928d7b8e294d9 refactor to abide by eclipse naming standards. 	6118 commit 49689969a73c2b886fa5992f759928d7b8e294d9 refactor to abide by eclipse naming standards.	1	-1	 6118[0] commit[0] 49689969a73c2b886fa5992f759928d7b8e294d9[0] refactor[0] to[0] abide[0] by[0] eclipse[0] naming[0] standards[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7082 commit a9b2910f312b1ed283db3c17948098a771e556a4 - introduced tmfexperiment (single trace for now) - merged tmftrace and tmfeventstream (doc to be updated) - refactored a few classes - fixed a few exceptions - everything is finally ready to rebase and start uploading lttng 	7082 commit a9b2910f312b1ed283db3c17948098a771e556a4 - introduced tmfexperiment (single trace for now) - merged tmftrace and tmfeventstream (doc to be updated) - refactored a few classes - fixed a few exceptions - everything is finally ready to rebase and start uploading lttng	1	-1	 7082[0] commit[0] a9b2910f312b1ed283db3c17948098a771e556a4[0] introduced[0] tmfexperiment[0] single[0] trace[0] for[0] now[0] merged[0] tmftrace[0] and[0] tmfeventstream[0] doc[0] to[0] be[0] updated[0] refactored[0] a[0] few[0] classes[0] fixed[0] a[0] few[0] exceptions[0] everything[0] is[0] finally[0] ready[0] to[0] rebase[0] and[0] start[0] uploading[0] lttng[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7950 commit b4b3ae28b604be6bd70f04a09a31fd964fd5cdf3 general refactoring, new ui tests for memcheck, new outputdirectoryprovider extension point. 	7950 commit b4b3ae28b604be6bd70f04a09a31fd964fd5cdf3 general refactoring, new ui tests for memcheck, new outputdirectoryprovider extension point.	1	-1	 7950[0] commit[0] b4b3ae28b604be6bd70f04a09a31fd964fd5cdf3[0] general[0] refactoring[0] new[0] ui[0] tests[0] for[0] memcheck[0] new[0] outputdirectoryprovider[0] extension[0] point[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9321 commit 0574d7061532c07aacf974a01c54e32dfdb12120 2009-07-07 anithra p janakiraman  anithra@linux.vnet.ibm.com  * changelog: refactoring. renaming all packages directories from *.systemtapgui.* to *.systemtap.ui.* 	9321 commit 0574d7061532c07acf974a01c54e32dfdb12120 2009-07-07 anithra p janakiraman  anithra@linux.<br>vnet.<br>ibm.<br>com  * changelog: refactoring.<br> renaming all packages directories from *<br>systemtapgui.<br> to *<br>systemtap.<br>ui.	1	-1	 9321[0] commit[0] 0574d7061532c07aacf974a01c54e32dfdb12120/0574d7061532c07acf974a01c54e32dfdb12120[0] 2009[0] -07[0] -07[0] anithra[0] p[0] janakiraman[0] anithra@linux[0] [[Sentence=-1,1=word max, 1-5]] vnet[0] [[Sentence=-1,1=word max, 1-5]] ibm[0] [[Sentence=-1,1=word max, 1-5]] com[0] changelog[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]] renaming[0] all[0] packages[0] directories[0] from[0] [[Sentence=-1,1=word max, 1-5]] systemtapgui[0] [[Sentence=-1,1=word max, 1-5]] to[0] [[Sentence=-1,1=word max, 1-5]] systemtap[0] [[Sentence=-1,1=word max, 1-5]] ui[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9323 commit f056ddb90a8b763cd79395200f3d3a2ae186ff27 2009-07-07 anithra p janakiraman  anithra@linux.vnet.ibm.com  * changelog: refactoring the code to systemtap.backup.ui*. this code has been merged with org.eclipse.linuxtools.systemtap.ui.ide.editors.stp.* 	9323 commit f056ddb90a8b763cd79395200f3d3a2ae186ff27 2009-07-07 anithra p janakiraman  anithra@linux.<br>vnet.<br>ibm.<br>com  * changelog: refactoring the code to systemtap.<br>backup.<br>ui*<br> this code has been merged with org.<br>eclipse.<br>linuxtools.<br>systemtap.<br>ui.<br>ide.<br>editors.<br>stp.	1	-1	 9323[0] commit[0] f056ddb90a8b763cd79395200f3d3a2ae186ff27[0] 2009[0] -07[0] -07[0] anithra[0] p[0] janakiraman[0] anithra@linux[0] [[Sentence=-1,1=word max, 1-5]] vnet[0] [[Sentence=-1,1=word max, 1-5]] ibm[0] [[Sentence=-1,1=word max, 1-5]] com[0] changelog[0] refactoring[0] the[0] code[0] to[0] systemtap[0] [[Sentence=-1,1=word max, 1-5]] backup[0] [[Sentence=-1,1=word max, 1-5]] ui[0] [[Sentence=-1,1=word max, 1-5]] this[0] code[0] has[0] been[0] merged[0] with[0] org[0] [[Sentence=-1,1=word max, 1-5]] eclipse[0] [[Sentence=-1,1=word max, 1-5]] linuxtools[0] [[Sentence=-1,1=word max, 1-5]] systemtap[0] [[Sentence=-1,1=word max, 1-5]] ui[0] [[Sentence=-1,1=word max, 1-5]] ide[0] [[Sentence=-1,1=word max, 1-5]] editors[0] [[Sentence=-1,1=word max, 1-5]] stp[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
10040 commit 6f76f5a8ff03c96800f5ef47ae1103de2e24261c refactor: from com.st.stgcov to org.eclipse.linuxtools.gcov 	10040 commit 6f76f5a8ff03c96800f5ef47ae1103de2e24261c refactor: from com.<br>st.<br>stgcov to org.<br>eclipse.<br>linuxtools.<br>gcov	1	-1	 10040[0] commit[0] 6f76f5a8ff03c96800f5ef47ae1103de2e24261c[0] refactor[0] from[0] com[0] [[Sentence=-1,1=word max, 1-5]] st[0] [[Sentence=-1,1=word max, 1-5]] stgcov[0] to[0] org[0] [[Sentence=-1,1=word max, 1-5]] eclipse[0] [[Sentence=-1,1=word max, 1-5]] linuxtools[0] [[Sentence=-1,1=word max, 1-5]] gcov[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
