Extract Method	Translation	Positive	Negative	EmotionRationale
126 commit 5f6a7ae36285050b1b4a1e846723fd739a106dab refactor the code that implements the requirement that a call to complete() or dispatch() made from a non-container thread before the container initiated thread that called startasync() completes must be delayed until the container initiated thread has completed. rather than implementing this by blocking the non-container thread, extend the internal state machine to track this. this removes the possibility that blocking the non-container thread could trigger a deadlock. 	126 commit 5f6a7ae36285050b1b4a1e846723fd739a106dab refactor the code that implements the requirement that a call to complete( or dispatch( made from a non-container thread before the container initiated thread that called startasync( completes must be delayed until the container initiated thread has completed.<br> rather than implementing this by blocking the non-container thread, extend the internal state machine to track this.<br> this removes the possibility that blocking the non-container thread could trigger a deadlock.	1	-2	 126[0] commit[0] 5f6a7ae36285050b1b4a1e846723fd739a106dab[0] refactor[0] the[0] code[0] that[0] implements[0] the[0] requirement[0] that[0] a[0] call[0] to[0] complete[0] or[0] dispatch[0] made[0] from[0] a[0] non[0] container[0] thread[0] before[0] the[0] container[0] initiated[0] thread[0] that[0] called[0] startasync[0] completes[0] must[0] be[0] delayed[0] until[0] the[0] container[0] initiated[0] thread[0] has[0] completed[0] [[Sentence=-1,1=word max, 1-5]] rather[0] than[0] implementing[0] this[0] by[0] blocking[0] the[0] non[0] container[0] thread[0] extend[0] the[0] internal[0] state[0] machine[0] to[0] track[0] this[0] [[Sentence=-1,1=word max, 1-5]] this[0] removes[0] the[0] possibility[0] that[0] blocking[0] the[0] non[0] container[0] thread[0] could[0] trigger[0] a[0] deadlock[-1] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
413 commit 631a7d8e055620f0d76a2fc15637b713c0d94a1b refactoring make the session attribute distribution / filtering more consistent across the various manager and session implementation. differentiate between - whether or not it is possible for an attribute to be distributed - session.isattributedistributable() - whether or not the manager wants and attribute to be distributed - manager.willattributedistribute 	413 commit 631a7d8e055620f0d76a2fc15637b713c0d94a1b refactoring make the session attribute distribution / filtering more consistent across the various manager and session implementation.<br> differentiate between - whether or not it is possible for an attribute to be distributed - session.<br>isattributedistributable( - whether or not the manager wants and attribute to be distributed - manager.<br>willattributedistribute	1	-1	 413[0] commit[0] 631a7d8e055620f0d76a2fc15637b713c0d94a1b[0] refactoring[0] make[0] the[0] session[0] attribute[0] distribution[0] /[0] filtering[0] more[0] consistent[0] across[0] the[0] various[0] manager[0] and[0] session[0] implementation[0] [[Sentence=-1,1=word max, 1-5]] differentiate[0] between[0] whether[0] or[0] not[0] it[0] is[0] possible[0] for[0] an[0] attribute[0] to[0] be[0] distributed[0] session[0] [[Sentence=-1,1=word max, 1-5]] isattributedistributable[0] whether[0] or[0] not[0] the[0] manager[0] wants[0] and[0] attribute[0] to[0] be[0] distributed[0] manager[0] [[Sentence=-1,1=word max, 1-5]] willattributedistribute[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
1716 commit 8f239ee586a8667d0657ddf01c2b6e830f0a850f backport refactoring of abstractreplicatedmap to implement map rather than extend concurrenthashmap to enable tomcat 7 to be built with java 8. 	1716 commit 8f239ee586a8667d0657ddf01c2b6e830f0a850f backport refactoring of abstractreplicatedmap to implement map rather than extend concurrenthashmap to enable tomcat 7 to be built with java 8.	1	-1	 1716[0] commit[0] 8f239ee586a8667d0657ddf01c2b6e830f0a850f[0] backport[0] refactoring[0] of[0] abstractreplicatedmap[0] to[0] implement[0] map[0] rather[0] than[0] extend[0] concurrenthashmap[0] to[0] enable[0] tomcat[0] 7[0] to[0] be[0] built[0] with[0] java[0] 8[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
1800 commit f91d5fbd355e155f0032f0bb66e6ee8b42ec75b0 back-port the remainder of fix for https://issues.apache.org/bugzilla/show_bug.cgi?id 55483 handle overloaded constructors. as far as the constructor matching code is concerned, constructors can be treated as methods with a special name. therefore, refactor the newly enhanced method matching code to handle methods or constructors and then use it to replace the current simplistic constructor matching. 	1800 commit f91d5fbd355e155f0032f0bb66e6ee8b42ec75b0 back-port the remainder of fix for https://issues.<br>apache.<br>org/bugzilla/show_bug.<br>cgi?<br>id 55483 handle overloaded constructors.<br> as far as the constructor matching code is concerned, constructors can be treated as methods with a special name.<br> therefore, refactor the newly enhanced method matching code to handle methods or constructors and then use it to replace the current simplistic constructor matching.	2	-2	 1800[0] commit[0] f91d5fbd355e155f0032f0bb66e6ee8b42ec75b0[0] back[0] port[0] the[0] remainder[0] of[0] fix[0] for[0] https[0] ://issues[0] [[Sentence=-1,1=word max, 1-5]] apache[0] [[Sentence=-1,1=word max, 1-5]] org/bugzilla/show_bug[0] [[Sentence=-1,1=word max, 1-5]] cgi[0] [[Sentence=-1,1=word max, 1-5]] id[0] 55483[0] handle[0] overloaded[0] constructors[0] [[Sentence=-1,1=word max, 1-5]] as[0] far[0] as[0] the[0] constructor[0] matching[0] code[0] is[0] concerned[-1] constructors[0] can[0] be[0] treated[0] as[0] methods[0] with[0] a[0] special[1] name[0] [[Sentence=-2,2=word max, 1-5]] therefore[0] refactor[0] the[0] newly[0] enhanced[0] method[0] matching[0] code[0] to[0] handle[0] methods[0] or[0] constructors[0] and[0] then[0] use[0] it[0] to[0] replace[0] the[0] current[0] simplistic[-1] constructor[0] matching[0] [[Sentence=-2,1=word max, 1-5]][[[2,-2 max of sentences]]]
2266 commit c56d2c6a983e7fdc32239444b69a3f32d07aa52e rename method 	2266 commit c56d2c6a983e7fdc3223944b69a3f32d07a52e rename method	2	-1	 2266[0] commit[0] c56d2c6a983e7fdc32239444b69a3f32d07aa52e/c56d2c6a983e7fdc3223944b69a3f32d07a52e[0][+0.6 MultipleLetters] rename[0] method[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
2365 commit 87499dcfeb3d4743be6af68be1aa08296fba7f0e back-port apr/native changes required to support jsr-356 significant changes are: - switch to a single poller with multiple pollsets - enable http upgrade connections to use concurrent read/write - lots of refactoring and clean-up 	2365 commit 87499dcfeb3d4743be6af68be1a08296fba7f0e back-port apr/native changes required to support jsr-356 significant changes are: - switch to a single poller with multiple pollsets - enable http upgrade connections to use concurrent read/write - lots of refactoring and clean-up	1	-1	 2365[0] commit[0] 87499dcfeb3d4743be6af68be1aa08296fba7f0e/87499dcfeb3d4743be6af68be1a08296fba7f0e[0] back[0] port[0] apr/native[0] changes[0] required[0] to[0] support[0] jsr[0] -356[0] significant[0] changes[0] are[0] switch[0] to[0] a[0] single[0] poller[0] with[0] multiple[0] pollsets[0] enable[0] http[0] upgrade[0] connections[0] to[0] use[0] concurrent[0] read/write[0] lots[0] of[0] refactoring[0] and[0] clean[0] up[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
2718 commit 1674eb32ee9caa0e0e016de9aea7a5512fdddc98 refactor encoding/decoding to use nio 	2718 commit 1674eb32ee9ca0e0e016de9aea7a5512fddc98 refactor encoding/decoding to use nio	2	-1	 2718[0] commit[0] 1674eb32ee9caa0e0e016de9aea7a5512fdddc98/1674eb32ee9ca0e0e016de9aea7a5512fddc98[0][+0.6 MultipleLetters] refactor[0] encoding/decoding[0] to[0] use[0] nio[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
3401 commit 9b74c94f89b0fbfd2fd122638401c2771e89fd6c refactoring. move class name discovery into separate helper method. (kkolinko) 	3401 commit 9b74c94f89b0fbfd2fd122638401c2771e89fd6c refactoring.<br> move class name discovery into separate helper method.<br> (kolinko)	1	-1	 3401[0] commit[0] 9b74c94f89b0fbfd2fd122638401c2771e89fd6c[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]] move[0] class[0] name[0] discovery[0] into[0] separate[0] helper[0] method[0] [[Sentence=-1,1=word max, 1-5]] kkolinko/kolinko[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3800 commit de2eb3f19a6ae5b5d15c4e2bd1831c9cacc72af7 merged revision 1200089 from tomcat/trunk: refactor special attribute names handling, to use hash table lookup   adapter class, instead of series of name.equals() tests. extracted add/change/remove notification delivery into separate methods. 	3800 commit de2eb3f19a6ae5b5d15c4e2bd1831c9cacc72af7 merged revision 120089 from tomcat/trunk: refactor special attribute names handling, to use hash table lookup   adapter class, instead of series of name.<br>equals( tests.<br> extracted add/change/remove notification delivery into separate methods.	2	-1	 3800[0] commit[0] de2eb3f19a6ae5b5d15c4e2bd1831c9cacc72af7[0] merged[0] revision[0] 1200089/120089[0] from[0] tomcat/trunk[0] refactor[0] special[1] attribute[0] names[0] handling[0] to[0] use[0] hash[0] table[0] lookup[0] adapter[0] class[0] instead[0] of[0] series[0] of[0] name[0] [[Sentence=-1,2=word max, 1-5]] equals[0] tests[0] [[Sentence=-1,1=word max, 1-5]] extracted[0] add/change/remove[0] notification[0] delivery[0] into[0] separate[0] methods[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
3859 commit e5978c0a7f3fa85c30a5b441cf14ba539e66e17e merged revision 1198622 from tomcat/trunk: requestfiltervalve (remoteaddrvalve, remotehostvalve): - refactor process() method separating value testing logic into a new method, isallowed(string) - expose isallowvalid, isdenyvalid properties and the new isallowed(string) method through jxm 	3859 commit e5978c0a7f3fa85c30a5b441cf14ba539e66e17e merged revision 1198622 from tomcat/trunk: requestfiltervalve (remoteaddrvalve, remotehostvalveremotehostvalve - refactor process( method separating value testing logic into a new method, isallowed(string) - expose isallowvalid, isdenyvalid properties and the new isallowed(string) method through jxm	1	-2	 3859[0] commit[0] e5978c0a7f3fa85c30a5b441cf14ba539e66e17e[0] merged[0] revision[0] 1198622[0] from[0] tomcat/trunk[0] requestfiltervalve[0] remoteaddrvalve[0] remotehostvalve[0][-1 Emoticon] refactor[0] process[0] method[0] separating[0] value[0] testing[0] logic[0] into[0] a[0] new[0] method[0] isallowed[0] string[0] expose[-1] isallowvalid[0] isdenyvalid[0] properties[0] and[0] the[0] new[0] isallowed[0] string[0] method[0] through[0] jxm[0] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
4167 commit b6d1ca94bde164881bfcd7167401d0d8397e7cb4 merge http connector refactoring from trunk 	4167 commit b6d1ca94bde164881bfcd7167401d0d8397e7cb4 merge http connector refactoring from trunk	1	-1	 4167[0] commit[0] b6d1ca94bde164881bfcd7167401d0d8397e7cb4[0] merge[0] http[0] connector[0] refactoring[0] from[0] trunk[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4884 commit b3e036d9a9b99d60dc6683a2dfd1068a172b1a8a refactor to (hopefully) allow unit testing of pipelining support 	4884 commit b3e036d9a9b99d60dc6683a2dfd1068a172b1a8a refactor to (hopefully) allow unit testing of pipelining support	1	-1	 4884[0] commit[0] b3e036d9a9b99d60dc6683a2dfd1068a172b1a8a[0] refactor[0] to[0] hopefully[0] allow[0] unit[0] testing[0] of[0] pipelining[0] support[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5135 commit f28b422a0e44b9b046db77e12c9bb146cc1de3a2 start of an ssl re-negotiation test. need to expand it to handle request bodies and the other issues highlighted by filip. switch to using a ca since it makes the code cleaner and it is easier to get client-cert working than will all self-signed certs. 	5135 commit f28b422a0e44b9b046db77e12c9bb146cc1de3a2 start of an ssl re-negotiation test.<br> need to expand it to handle request bodies and the other issues highlighted by filip.<br> switch to using a ca since it makes the code cleaner and it is easier to get client-cert working than will all self-signed certs.	1	-1	 5135[0] commit[0] f28b422a0e44b9b046db77e12c9bb146cc1de3a2[0] start[0] of[0] an[0] ssl[0] re[0] negotiation[0] test[0] [[Sentence=-1,1=word max, 1-5]] need[0] to[0] expand[0] it[0] to[0] handle[0] request[0] bodies[0] and[0] the[0] other[0] issues[0] highlighted[0] by[0] filip[0] [[Sentence=-1,1=word max, 1-5]] switch[0] to[0] using[0] a[0] ca[0] since[0] it[0] makes[0] the[0] code[0] cleaner[0] and[0] it[0] is[0] easier[0] to[0] get[0] client[0] cert[0] working[0] than[0] will[0] all[0] self[0] signed[0] certs[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5176 commit 52b025e4c7406878c5a4c501741a4862432de44e refactoring to remove duplicate code 	5176 commit 52b025e4c7406878c5a4c501741a4862432de44e refactoring to remove duplicate code	1	-1	 5176[0] commit[0] 52b025e4c7406878c5a4c501741a4862432de44e[0] refactoring[0] to[0] remove[0] duplicate[0] code[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6848 commit 80a11debd57b48faedd890b03fe163b1f6dccdc7 extend lifecycle/mbean refactoring to containerbase 	6848 commit 80a11debd57b48faedd890b03fe163b1f6dccdc7 extend lifecycle/mbean refactoring to containerbase	1	-1	 6848[0] commit[0] 80a11debd57b48faedd890b03fe163b1f6dccdc7[0] extend[0] lifecycle/mbean[0] refactoring[0] to[0] containerbase[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7803 commit 156ecbae2b1f625c94af5e7a1bde741af6128a6c refactor prior to adding some more clean-up methods. 	7803 commit 156ecbae2b1f625c94af5e7a1bde741af6128a6c refactor prior to adding some more clean-up methods.	1	-1	 7803[0] commit[0] 156ecbae2b1f625c94af5e7a1bde741af6128a6c[0] refactor[0] prior[0] to[0] adding[0] some[0] more[0] clean[0] up[0] methods[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7824 commit 2bc8f15806bc747b2f4ddff04f97ffa445d7ddd0 few change to the objectmanager ( intended for integration with existing frameworks ). the 'sample/if no other framework around' simpleobject manager no longer depends on introspectionutils, refactored it ( and parts of modeler ) to dynamicobject. 	7824 commit 2bc8f15806bc747b2f4ddff04f97ffa445d7dd0 few change to the objectmanager ( intended for integration with existing frameworks )<br> the 'sample/if no other framework around' simpleobject manager no longer depends on introspectionutils, refactored it ( and parts of modeler ) to dynamicobject.	1	-1	 7824[0] commit[0] 2bc8f15806bc747b2f4ddff04f97ffa445d7ddd0/2bc8f15806bc747b2f4ddff04f97ffa445d7dd0[0] few[0] change[0] to[0] the[0] objectmanager[0] intended[0] for[0] integration[0] with[0] existing[0] frameworks[0] [[Sentence=-1,1=word max, 1-5]] the[0] 'sample/if[0] no[0] other[0] framework[0] around'[0] simpleobject[0] manager[0] no[0] longer[0] depends[0] on[0] introspectionutils[0] refactored[0] it[0] and[0] parts[0] of[0] modeler[0] to[0] dynamicobject[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8130 commit d6c71cc95e394f14e4f465528fb4b87e890cec33 refactor upload into its own method in preparation for moving some commands from get to post. 	8130 commit d6c71cc95e394f14e4f465528fb4b87e890cec33 refactor upload into its own method in preparation for moving some commands from get to post.	1	-1	 8130[0] commit[0] d6c71cc95e394f14e4f465528fb4b87e890cec33[0] refactor[0] upload[0] into[0] its[0] own[0] method[0] in[0] preparation[0] for[0] moving[0] some[0] commands[0] from[0] get[0] to[0] post[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8139 commit 2185fbba9dbd4bb2aff8528c31f357029aab7bf8 refactor the bio connector to align it better for async support, this means a "poller" style for timeouts etc. first step is to allow the connector to do keep alive on more connections than we have threads. more changes to follow, good chance that nio and bio can share tons of code 	8139 commit 2185fbba9dbd4bb2aff8528c31f357029ab7bf8 refactor the bio connector to align it better for async support, this means a "poller" style for timeouts etc.<br> first step is to allow the connector to do keep alive on more connections than we have threads.<br> more changes to follow, good chance that nio and bio can share tons of code	2	-1	 8139[0] commit[0] 2185fbba9dbd4bb2aff8528c31f357029aab7bf8/2185fbba9dbd4bb2aff8528c31f357029ab7bf8[0] refactor[0] the[0] bio[0] connector[0] to[0] align[0] it[0] better[0] for[0] async[0] support[0] this[0] means[0] a[0] poller[0] style[0] for[0] timeouts[0] etc[0] [[Sentence=-1,1=word max, 1-5]] first[0] step[0] is[0] to[0] allow[0] the[0] connector[0] to[0] do[0] keep[0] alive[0] on[0] more[0] connections[0] than[0] we[0] have[0] threads[0] [[Sentence=-1,1=word max, 1-5]] more[0] changes[0] to[0] follow[0] good[1] chance[0] that[0] nio[0] and[0] bio[0] can[0] share[0] tons[0] of[0] code[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
9069 commit 28c3a9f40b344e999d50a9ce5606890e34aaa727 refactor a bit 	9069 commit 28c3a9f40b344e99d50a9ce5606890e34a727 refactor a bit	2	-1	 9069[0] commit[0] 28c3a9f40b344e999d50a9ce5606890e34aaa727/28c3a9f40b344e99d50a9ce5606890e34a727[0][+0.6 MultipleLetters] refactor[0] a[0] bit[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
9072 commit 49f8a2a07e92280c8089ff9392192d7c3a4baf8b refactor the slow query report a bit also add the ability to remove a listener 	9072 commit 49f8a2a07e92280c8089ff9392192d7c3a4baf8b refactor the slow query report a bit also add the ability to remove a listener	1	-1	 9072[0] commit[0] 49f8a2a07e92280c8089ff9392192d7c3a4baf8b[0] refactor[0] the[0] slow[0] query[0] report[0] a[0] bit[0] also[0] add[0] the[0] ability[0] to[0] remove[0] a[0] listener[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9574 commit 3d2068c4f3e45584c7a9ef5e6b8c86c3a25ead57 code clean up. java5 and remove unused code. no functional change. 	9574 commit 3d2068c4f3e45584c7a9ef5e6b8c86c3a25ead57 code clean up.<br> java5 and remove unused code.<br> no functional change.	1	-1	 9574[0] commit[0] 3d2068c4f3e45584c7a9ef5e6b8c86c3a25ead57[0] code[0] clean[0] up[0] [[Sentence=-1,1=word max, 1-5]] java5[0] and[0] remove[0] unused[0] code[0] [[Sentence=-1,1=word max, 1-5]] no[0] functional[0] change[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
10614 commit eefda7a4ced07449817024a36518b26490860bd0 refactor aprlifecyclelistener by putting the logic into separate methods. 1. do not call terminate in case initialize failed 2. call terminate if version is below required. 3. do not initialize ssl if apr was not initialized. 	10614 commit eefda7a4ced07449817024a36518b26490860bd0 refactor aprlifecyclelistener by putting the logic into separate methods.<br> 1.<br> do not call terminate in case initialize failed 2.<br> call terminate if version is below required.<br> 3.<br> do not initialize ssl if apr was not initialized.	1	-1	 10614[0] commit[0] eefda7a4ced07449817024a36518b26490860bd0[0] refactor[0] aprlifecyclelistener[0] by[0] putting[0] the[0] logic[0] into[0] separate[0] methods[0] [[Sentence=-1,1=word max, 1-5]] 1[0] [[Sentence=-1,1=word max, 1-5]] do[0] not[0] call[0] terminate[0] in[0] case[0] initialize[0] failed[0] 2[0] [[Sentence=-1,1=word max, 1-5]] call[0] terminate[0] if[0] version[0] is[0] below[0] required[0] [[Sentence=-1,1=word max, 1-5]] 3[0] [[Sentence=-1,1=word max, 1-5]] do[0] not[0] initialize[0] ssl[0] if[0] apr[0] was[0] not[0] initialized[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
