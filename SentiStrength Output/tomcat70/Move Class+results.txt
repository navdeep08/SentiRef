Move Class	Translation	Positive	Negative	EmotionRationale
48 commit 6c47d1ccde4d401f10300fc7d2adf6f9a40677cd refactor to remove duplicated code 	48 commit 6c47d1ccde4d401f10300fc7d2adf6f9a40677cd refactor to remove duplicated code	1	-1	 48[0] commit[0] 6c47d1ccde4d401f10300fc7d2adf6f9a40677cd[0] refactor[0] to[0] remove[0] duplicated[0] code[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
1676 commit 5159f2ca15bb2196d0704b88f81e719443a3913f refactoring to reduce code duplication. 	1676 commit 5159f2ca15bb2196d0704b88f81e719443a3913f refactoring to reduce code duplication.	1	-1	 1676[0] commit[0] 5159f2ca15bb2196d0704b88f81e719443a3913f[0] refactoring[0] to[0] reduce[0] code[0] duplication[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5082 commit 3a437b54fdef28cefb16d93fb01191ff0aa1f0f1 refactoring for re-use 	5082 commit 3a437b54fdef28cefb16d93fb01191ff0a1f0f1 refactoring for re-use	1	-1	 5082[0] commit[0] 3a437b54fdef28cefb16d93fb01191ff0aa1f0f1/3a437b54fdef28cefb16d93fb01191ff0a1f0f1[0] refactoring[0] for[0] re[0] use[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6131 commit 5411f979ff0e122efe9fd6e09fc200c5b5bb89cb reduce code duplication in the apr connectors (prior to aligning with the async refactoring) 	6131 commit 5411f979ff0e122efe9fd6e09fc200c5b5bb89cb reduce code duplication in the apr connectors (prior to aligning with the async refactoring)	1	-1	 6131[0] commit[0] 5411f979ff0e122efe9fd6e09fc200c5b5bb89cb[0] reduce[0] code[0] duplication[0] in[0] the[0] apr[0] connectors[0] prior[0] to[0] aligning[0] with[0] the[0] async[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6671 commit 23e9eaa6e83b6cc4db200f5d0317446ceb1d1bc5 refactor the hooks from the coyoteadapter to the access logs - cleaner interface - handles accesslogs at multiple levels (but not multiple accesslogs per container) 	6671 commit 23e9ea6e83b6cc4db200f5d0317446ceb1d1bc5 refactor the hooks from the coyoteadapter to the access logs - cleaner interface - handles accesslogs at multiple levels (but not multiple accesslogs per container)	1	-1	 6671[0] commit[0] 23e9eaa6e83b6cc4db200f5d0317446ceb1d1bc5/23e9ea6e83b6cc4db200f5d0317446ceb1d1bc5[0] refactor[0] the[0] hooks[0] from[0] the[0] coyoteadapter[0] to[0] the[0] access[0] logs[0] cleaner[0] interface[0] handles[0] accesslogs[0] at[0] multiple[0] levels[0] but[0] not[0] multiple[0] accesslogs[0] per[0] container[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8289 commit 6b99a251db6eaeded8b5e5843d31cd479ff05358 refactor location of asynccontextimpl to o.a.catalina.core 	8289 commit 6b99a251db6eaeded8b5e5843d31cd479ff05358 refactor location of asynccontextimpl to o.<br>a.<br>catalina.<br>core	1	-1	 8289[0] commit[0] 6b99a251db6eaeded8b5e5843d31cd479ff05358[0] refactor[0] location[0] of[0] asynccontextimpl[0] to[0] o[0] [[Sentence=-1,1=word max, 1-5]] a[0] [[Sentence=-1,1=word max, 1-5]] catalina[0] [[Sentence=-1,1=word max, 1-5]] core[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9016 commit c216954e17ed4dc82916cb473f30de3219fbe705 refactor the query report for multi purpose 	9016 commit c216954e17ed4dc82916cb473f30de3219fbe705 refactor the query report for multi purpose	1	-1	 9016[0] commit[0] c216954e17ed4dc82916cb473f30de3219fbe705[0] refactor[0] the[0] query[0] report[0] for[0] multi[0] purpose[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9081 commit b3c4772dae97e5b46f3dd64001536d3492f3a9e4 refactored the thread pooling when using an executor, this gets rid of duplicate code in the nio connector as well as in the org.apache.catalina.core.standardthreadexecutor package. i provided a threadpoolexecutor with a small extension to the java.util.concurrent the connector method setexecutor still take a java.util.concurrent.executor as an argument to provide the most flexibility 	9081 commit b3c4772dae97e5b46f3dd64001536d3492f3a9e4 refactored the thread pooling when using an executor, this gets rid of duplicate code in the nio connector as well as in the org.<br>apache.<br>catalina.<br>core.<br>standardthreadexecutor package.<br> i provided a threadpoolexecutor with a small extension to the java.<br>util.<br>concurrent the connector method setexecutor still take a java.<br>util.<br>concurrent.<br>executor as an argument to provide the most flexibility	1	-2	 9081[0] commit[0] b3c4772dae97e5b46f3dd64001536d3492f3a9e4[0] refactored[0] the[0] thread[0] pooling[0] when[0] using[0] an[0] executor[0] this[0] gets[0] rid[-1] of[0] duplicate[0] code[0] in[0] the[0] nio[0] connector[0] as[0] well[0] as[0] in[0] the[0] org[0] [[Sentence=-2,1=word max, 1-5]] apache[0] [[Sentence=-1,1=word max, 1-5]] catalina[0] [[Sentence=-1,1=word max, 1-5]] core[0] [[Sentence=-1,1=word max, 1-5]] standardthreadexecutor[0] package[0] [[Sentence=-1,1=word max, 1-5]] i[0] provided[0] a[0] threadpoolexecutor[0] with[0] a[0] small[0] extension[0] to[0] the[0] java[0] [[Sentence=-1,1=word max, 1-5]] util[0] [[Sentence=-1,1=word max, 1-5]] concurrent[0] the[0] connector[0] method[0] setexecutor[0] still[0] take[0] a[0] java[0] [[Sentence=-1,1=word max, 1-5]] util[0] [[Sentence=-1,1=word max, 1-5]] concurrent[0] [[Sentence=-1,1=word max, 1-5]] executor[0] as[0] an[0] argument[-1] to[0] provide[0] the[0] most[0] flexibility[0] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
