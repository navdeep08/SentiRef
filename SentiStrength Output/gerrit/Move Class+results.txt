Move Class	Translation	Positive	Negative	EmotionRationale
124 commit cc00e0056991355b8780bebd221acf3baf1f55e7 refactor refcontroltest refactor refcontroltest for extracting out reusable code for the following up commit id12dbec23a7. change-id: i4b9ea23b83de648910a07a162ae1c30820d0136b 	124 commit cc00e0056991355b8780bebd221acf3baf1f55e7 refactor refcontroltest refactor refcontroltest for extracting out reusable code for the following up commit id12dbec23a7.<br> change-id: i4b9ea23b83de648910a07a162ae1c30820d0136b	1	-1	 124[0] commit[0] cc00e0056991355b8780bebd221acf3baf1f55e7[0] refactor[0] refcontroltest[0] refactor[0] refcontroltest[0] for[0] extracting[0] out[0] reusable[0] code[0] for[0] the[0] following[0] up[0] commit[0] id12dbec23a7[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i4b9ea23b83de648910a07a162ae1c30820d0136b[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
335 commit bf48b20e9ac9751d0c8aeba8f391c47f3f126718 merge: eb47db1 fff6f19 merge changes i3bbfc470,i628c4c99 * changes: prevent injecting identifieduser for project rest endpoints refactor uiaction specific code out of change specific code 	335 commit bf48b20e9ac9751d0c8aeba8f391c47f3f126718 merge: eb47db1 ff6f19 merge changes i3bbfc470,i628c4c99 * changes: prevent injecting identifieduser for project rest endpoints refactor uiaction specific code out of change specific code	1	-1	 335[0] commit[0] bf48b20e9ac9751d0c8aeba8f391c47f3f126718[0] merge[0] eb47db1[0] fff6f19/ff6f19[0] merge[0] changes[0] i3bbfc470[0] i628c4c99[0] changes[0] prevent[0] injecting[0] identifieduser[0] for[0] project[0] rest[0] endpoints[0] refactor[0] uiaction[0] specific[0] code[0] out[0] of[0] change[0] specific[0] code[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
348 commit 513659c490bdb2431b168382eff537d23a86b478 refactor uiaction specific code out of change specific code to support uiactions on more screens, i. e. project info screen, refactor the code from the change specific code to its own actions package. change-id: i628c4c99c1a1e1ccaba0a11f27ed5acdabc6e37c 	348 commit 513659c490bdb2431b168382eff537d23a86b478 refactor uiaction specific code out of change specific code to support uiactions on more screens, i.<br> e.<br> project info screen, refactor the code from the change specific code to its own actions package.<br> change-id: i628c4c99c1a1e1ccaba0a11f27ed5acdabc6e37c	1	-1	 348[0] commit[0] 513659c490bdb2431b168382eff537d23a86b478[0] refactor[0] uiaction[0] specific[0] code[0] out[0] of[0] change[0] specific[0] code[0] to[0] support[0] uiactions[0] on[0] more[0] screens[0] i[0] [[Sentence=-1,1=word max, 1-5]] e[0] [[Sentence=-1,1=word max, 1-5]] project[0] info[0] screen[0] refactor[0] the[0] code[0] from[0] the[0] change[0] specific[0] code[0] to[0] its[0] own[0] actions[0] package[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i628c4c99c1a1e1ccaba0a11f27ed5acdabc6e37c[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
421 commit 738b72e4275a64a9da4afed71a084f83438aeb6e merge: 1df8a6e 99c3d2b merge "minor refactor of diff code to prepare for unified view" 	421 commit 738b72e4275a64a9da4afed71a084f83438aeb6e merge: 1df8a6e 99c3d2b merge "minor refactor of diff code to prepare for unified view"	1	-1	 421[0] commit[0] 738b72e4275a64a9da4afed71a084f83438aeb6e[0] merge[0] 1df8a6e[0] 99c3d2b[0] merge[0] minor[0] refactor[0] of[0] diff[0] code[0] to[0] prepare[0] for[0] unified[0] view[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
457 commit 99c3d2b87a3bd897f3fa37a3c28a9d17aa38d619 minor refactor of diff code to prepare for unified view pulled some classes out of sidebyside2. there will be a lot of common code between the upcoming unified2 and sidebyside2. fixed a minor bug in skip line rendering. it was still relying on side.parent. changed to use displayside.a. deleted deprecated patchselectbox2. change-id: i87d608d7e6a4330096d65b0fc1b99c1c5160d119 	457 commit 99c3d2b87a3bd897f3fa37a3c28a9d17a38d619 minor refactor of diff code to prepare for unified view pulled some classes out of sidebyside2.<br> there will be a lot of common code between the upcoming unified2 and sidebyside2.<br> fixed a minor bug in skip line rendering.<br> it was still relying on side.<br>parent.<br> changed to use displayside.<br>a.<br> deleted deprecated patchselectbox2.<br> change-id: i87d608d7e6a4330096d65b0fc1b99c1c5160d119	1	-1	 457[0] commit[0] 99c3d2b87a3bd897f3fa37a3c28a9d17aa38d619/99c3d2b87a3bd897f3fa37a3c28a9d17a38d619[0] minor[0] refactor[0] of[0] diff[0] code[0] to[0] prepare[0] for[0] unified[0] view[0] pulled[0] some[0] classes[0] out[0] of[0] sidebyside2[0] [[Sentence=-1,1=word max, 1-5]] there[0] will[0] be[0] a[0] lot[0] of[0] common[0] code[0] between[0] the[0] upcoming[0] unified2[0] and[0] sidebyside2[0] [[Sentence=-1,1=word max, 1-5]] fixed[0] a[0] minor[0] bug[0] in[0] skip[0] line[0] rendering[0] [[Sentence=-1,1=word max, 1-5]] it[0] was[0] still[0] relying[0] on[0] side[0] [[Sentence=-1,1=word max, 1-5]] parent[0] [[Sentence=-1,1=word max, 1-5]] changed[0] to[0] use[0] displayside[0] [[Sentence=-1,1=word max, 1-5]] a[0] [[Sentence=-1,1=word max, 1-5]] deleted[0] deprecated[0] patchselectbox2[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i87d608d7e6a4330096d65b0fc1b99c1c5160d119[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
1001 commit 44739b11679d59e55f69b9f4fd82260d3414d9cc refactor padding for comment boxes added paddingmanager that takes care of calculating and adjusting paddings introduced by commentboxes. change-id: iff58822edeeb724f649a347197ec0beec15c5a82 	1001 commit 44739b11679d59e55f69b9f4fd82260d3414d9c refactor padding for comment boxes added paddingmanager that takes care of calculating and adjusting paddings introduced by commentboxes.<br> change-id: iff58822edeeb724f649a347197ec0beec15c5a82	2	-1	 1001[0] commit[0] 44739b11679d59e55f69b9f4fd82260d3414d9cc/44739b11679d59e55f69b9f4fd82260d3414d9c[0] refactor[0] padding[0] for[0] comment[0] boxes[0] added[0] paddingmanager[0] that[0] takes[0] care[1] of[0] calculating[0] and[0] adjusting[0] paddings[0] introduced[0] by[0] commentboxes[0] [[Sentence=-1,2=word max, 1-5]] change[0] id[0] iff58822edeeb724f649a347197ec0beec15c5a82[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
2706 commit 5797d87d6b2f0be3c27647f85cd59c36ed1769cc break intralinediff threads into their own module this small refactoring allows me to manually bind the intralineworkerpool within the gerrit-review server build, offering better control over how the threads are managed by this pool. change-id: i26c56ef3c57a86189e1c6a1b668b464e4f079995 	2706 commit 5797d87d6b2f0be3c27647f85cd59c36ed1769c break intralinediff threads into their own module this small refactoring allows me to manually bind the intralineworkerpool within the gerrit-review server build, offering better control over how the threads are managed by this pool.<br> change-id: i26c56ef3c57a86189e1c6a1b668b464e4f07995	1	-1	 2706[0] commit[0] 5797d87d6b2f0be3c27647f85cd59c36ed1769cc/5797d87d6b2f0be3c27647f85cd59c36ed1769c[0] break[0] intralinediff[0] threads[0] into[0] their[0] own[0] module[0] this[0] small[0] refactoring[0] allows[0] me[0] to[0] manually[0] bind[0] the[0] intralineworkerpool[0] within[0] the[0] gerrit[0] review[0] server[0] build[0] offering[0] better[0] control[0] over[0] how[0] the[0] threads[0] are[0] managed[0] by[0] this[0] pool[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i26c56ef3c57a86189e1c6a1b668b464e4f079995/i26c56ef3c57a86189e1c6a1b668b464e4f07995[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3543 commit c3f649a2207c949705c444ccd9eeba268919e002 merge: 6e114ee 2dfc684 merge "refactor downloadurllink creation out of changes" 	3543 commit c3f649a2207c949705c44ccd9eeba268919e002 merge: 6e114ee 2dfc684 merge "refactor downloadurllink creation out of changes"	1	-1	 3543[0] commit[0] c3f649a2207c949705c444ccd9eeba268919e002/c3f649a2207c949705c44ccd9eeba268919e002[0] merge[0] 6e114ee[0] 2dfc684[0] merge[0] refactor[0] downloadurllink[0] creation[0] out[0] of[0] changes[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3549 commit 2dfc6843671fcba8a4c3f13a4c461452cedf12c5 refactor downloadurllink creation out of changes the downloadurllinks may be used for other type of downloads in the future, for example for project cloning. refactor all the download classes into their own directory since they are not change specific. create a series of urllinks types for each download type that was used in the change screen so that they can be easily reused. move some functions which were only used to create these types into the downloadurllink class. add a factory function which creates all the configured types. change-id: i5d136333d1d2dd887dd66db92d6154890677ebfc 	3549 commit 2dfc6843671fcba8a4c3f13a4c461452cedf12c5 refactor downloadurllink creation out of changes the downloadurllinks may be used for other type of downloads in the future, for example for project cloning.<br> refactor all the download classes into their own directory since they are not change specific.<br> create a series of urllinks types for each download type that was used in the change screen so that they can be easily reused.<br> move some functions which were only used to create these types into the downloadurllink class.<br> add a factory function which creates all the configured types.<br> change-id: i5d13633d1d2dd887dd66db92d6154890677ebfc	1	-1	 3549[0] commit[0] 2dfc6843671fcba8a4c3f13a4c461452cedf12c5[0] refactor[0] downloadurllink[0] creation[0] out[0] of[0] changes[0] the[0] downloadurllinks[0] may[0] be[0] used[0] for[0] other[0] type[0] of[0] downloads[0] in[0] the[0] future[0] for[0] example[0] for[0] project[0] cloning[0] [[Sentence=-1,1=word max, 1-5]] refactor[0] all[0] the[0] download[0] classes[0] into[0] their[0] own[0] directory[0] since[0] they[0] are[0] not[0] change[0] specific[0] [[Sentence=-1,1=word max, 1-5]] create[0] a[0] series[0] of[0] urllinks[0] types[0] for[0] each[0] download[0] type[0] that[0] was[0] used[0] in[0] the[0] change[0] screen[0] so[0] that[0] they[0] can[0] be[0] easily[0] reused[0] [[Sentence=-1,1=word max, 1-5]] move[0] some[0] functions[0] which[0] were[0] only[0] used[0] to[0] create[0] these[0] types[0] into[0] the[0] downloadurllink[0] class[0] [[Sentence=-1,1=word max, 1-5]] add[0] a[0] factory[0] function[0] which[0] creates[0] all[0] the[0] configured[0] types[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i5d136333d1d2dd887dd66db92d6154890677ebfc/i5d13633d1d2dd887dd66db92d6154890677ebfc[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3982 commit c009c816ed1825fc8aff82585f542850433f3376 merge: 0b5d3ef a549846 merge "refactor code for rebasing changes to make it reusable" 	3982 commit c009c816ed1825fc8aff82585f542850433f3376 merge: 0b5d3ef a549846 merge "refactor code for rebasing changes to make it reusable"	1	-1	 3982[0] commit[0] c009c816ed1825fc8aff82585f542850433f3376[0] merge[0] 0b5d3ef[0] a549846[0] merge[0] refactor[0] code[0] for[0] rebasing[0] changes[0] to[0] make[0] it[0] reusable[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3987 commit a54984665d5f01af0bc226a7863c6f9342b26b2b refactor code for rebasing changes to make it reusable a new submit strategy 'rebase if necessary' should be introduced that automatically rebases the changes on submit if needed. refactor the existing code for rebasing changes from the webui to be reusable from this new submit strategy. change-id: i0ac803deea68f9e1294b3fa5bf814277e899f075 signed-off-by: edwin kempin  edwin.kempin@sap.com  	3987 commit a54984665d5f01af0bc226a7863c6f9342b26b2b refactor code for rebasing changes to make it reusable a new submit strategy 'rebase if necessary' should be introduced that automatically rebases the changes on submit if needed.<br> refactor the existing code for rebasing changes from the webui to be reusable from this new submit strategy.<br> change-id: i0ac803deea68f9e1294b3fa5bf814277e899f075 signed-off-by: edwin kempin  edwin.<br>kempin@sap.<br>com 	1	-1	 3987[0] commit[0] a54984665d5f01af0bc226a7863c6f9342b26b2b[0] refactor[0] code[0] for[0] rebasing[0] changes[0] to[0] make[0] it[0] reusable[0] a[0] new[0] submit[0] strategy[0] 'rebase[0] if[0] necessary'[0] should[0] be[0] introduced[0] that[0] automatically[0] rebases[0] the[0] changes[0] on[0] submit[0] if[0] needed[0] [[Sentence=-1,1=word max, 1-5]] refactor[0] the[0] existing[0] code[0] for[0] rebasing[0] changes[0] from[0] the[0] webui[0] to[0] be[0] reusable[0] from[0] this[0] new[0] submit[0] strategy[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i0ac803deea68f9e1294b3fa5bf814277e899f075[0] signed[0] off[0] by[0] edwin[0] kempin[0] edwin[0] [[Sentence=-1,1=word max, 1-5]] kempin@sap[0] [[Sentence=-1,1=word max, 1-5]] com[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4581 commit ee4ccd0ab7aa74e80de3b79ea07b85864ed31555 refactor cmdline parsing into gerrit-server now that both gerrit-sshd and gerrit-httpd use cmdlineparser, it makes sense that the handlers for particular classes exist in a module accessible by both. this change moves the command line parsing portion of sshmodule into gerrit-server in a class called cmdlineparsermodule. change-id: i9312996a2b14106c039bc4c25ed80a52e3df79e7 	4581 commit ee4ccd0ab7a74e80de3b79ea07b85864ed3155 refactor cmdline parsing into gerrit-server now that both gerrit-sshd and gerrit-httpd use cmdlineparser, it makes sense that the handlers for particular classes exist in a module accessible by both.<br> this change moves the command line parsing portion of sshmodule into gerrit-server in a class called cmdlineparsermodule.<br> change-id: i9312996a2b14106c039bc4c25ed80a52e3df79e7	2	-1	 4581[0] commit[0] ee4ccd0ab7aa74e80de3b79ea07b85864ed31555/ee4ccd0ab7a74e80de3b79ea07b85864ed3155[0][+0.6 MultipleLetters] refactor[0] cmdline[0] parsing[0] into[0] gerrit[0] server[0] now[0] that[0] both[0] gerrit[0] sshd[0] and[0] gerrit[0] httpd[0] use[0] cmdlineparser[0] it[0] makes[0] sense[0] that[0] the[0] handlers[0] for[0] particular[0] classes[0] exist[0] in[0] a[0] module[0] accessible[0] by[0] both[0] [[Sentence=-1,2=word max, 1-5]] this[0] change[0] moves[0] the[0] command[0] line[0] parsing[0] portion[0] of[0] sshmodule[0] into[0] gerrit[0] server[0] in[0] a[0] class[0] called[0] cmdlineparsermodule[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i9312996a2b14106c039bc4c25ed80a52e3df79e7[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
4925 commit 4b6f8c1ef2a4ee120d5769cf9252cdb13fa37aa3 merge: cb64a4b 1bc7762 merge changes ic8052b4d,i41829d35,ia2d112eb,ieb95a0ed,i38b15303 * changes: refactor ls-projects code to gerrit-server support parsing command line options from a map allow command line parsing to happen on a different object refactor display of --help/-h to be common move parsing of --help/-h to cmdlineparser 	4925 commit 4b6f8c1ef2a4ee120d5769cf9252cdb13fa37a3 merge: cb64a4b 1bc7762 merge changes ic8052b4d,i41829d35,ia2d112eb,ieb95a0ed,i38b15303 * changes: refactor ls-projects code to gerrit-server support parsing command line options from a map allow command line parsing to happen on a different object refactor display of -help/-h to be common move parsing of -help/-h to cmdlineparser	1	-1	 4925[0] commit[0] 4b6f8c1ef2a4ee120d5769cf9252cdb13fa37aa3/4b6f8c1ef2a4ee120d5769cf9252cdb13fa37a3[0] merge[0] cb64a4b[0] 1bc7762[0] merge[0] changes[0] ic8052b4d[0] i41829d35[0] ia2d112eb[0] ieb95a0ed[0] i38b15303[0] changes[0] refactor[0] ls[0] projects[0] code[0] to[0] gerrit[0] server[0] support[0] parsing[0] command[0] line[0] options[0] from[0] a[0] map[0] allow[0] command[0] line[0] parsing[0] to[0] happen[0] on[0] a[0] different[0] object[0] refactor[0] display[0] of[0] help/[0] h[0] to[0] be[0] common[0] move[0] parsing[0] of[0] help/[0] h[0] to[0] cmdlineparser[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4930 commit 1bc77620bd3164238c5c563f867df522f54052c8 refactor ls-projects code to gerrit-server move the implementation to gerrit-server, making it available to both the ssh and http environments. later we will define a new rest-ful api over http that supports the same sort of query as  ssh gerrit ls-projects . change-id: ic8052b4dd3c70809feb4b43e5b2bae6b72b10503 	4930 commit 1bc77620bd3164238c5c563f867df522f54052c8 refactor ls-projects code to gerrit-server move the implementation to gerrit-server, making it available to both the ssh and http environments.<br> later we will define a new rest-ful api over http that supports the same sort of query as  ssh gerrit ls-projects .<br> change-id: ic8052b4dd3c70809feb4b43e5b2bae6b72b10503	2	-1	 4930[0] commit[0] 1bc77620bd3164238c5c563f867df522f54052c8[0] refactor[0] ls[0] projects[0] code[0] to[0] gerrit[0] server[0] move[0] the[0] implementation[0] to[0] gerrit[0] server[0] making[0] it[0] available[0] to[0] both[0] the[0] ssh[0] and[0] http[0] environments[0] [[Sentence=-1,1=word max, 1-5]] later[0] we[0] will[0] define[0] a[0] new[0] rest[0] ful[0] api[0] over[0] http[0] that[0] supports[1] the[0] same[0] sort[0] of[0] query[0] as[0] ssh[0] gerrit[0] ls[0] projects[0] [[Sentence=-1,2=word max, 1-5]] change[0] id[0] ic8052b4dd3c70809feb4b43e5b2bae6b72b10503[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
4938 commit 9906ec1e8a300c6d0ca4926dc65512ed84e7571d merge: 94878a9 45fd656 merge "projectconfig sections refactoring" 	4938 commit 9906ec1e8a300c6d0ca4926dc65512ed84e7571d merge: 94878a9 45fd656 merge "projectconfig sections refactoring"	1	-1	 4938[0] commit[0] 9906ec1e8a300c6d0ca4926dc65512ed84e7571d[0] merge[0] 94878a9[0] 45fd656[0] merge[0] projectconfig[0] sections[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4984 commit 45fd65689542a09ff49cf98c52227dc44976d7f9 projectconfig sections refactoring add a new class refconfigsection to be superclass for some sections in project.config file. this is a preparation to include "merge strategy per branch" feature which will add another section to project.config file. change-id: i559aad8325358823471665b24186470a76aaf967 	4984 commit 45fd65689542a09ff49cf98c5227dc44976d7f9 projectconfig sections refactoring add a new class refconfigsection to be superclass for some sections in project.<br>config file.<br> this is a preparation to include "merge strategy per branch" feature which will add another section to project.<br>config file.<br> change-id: i559ad8325358823471665b24186470a76af967	2	-1	 4984[0] commit[0] 45fd65689542a09ff49cf98c52227dc44976d7f9/45fd65689542a09ff49cf98c5227dc44976d7f9[0] projectconfig[0] sections[0] refactoring[0] add[0] a[0] new[0] class[0] refconfigsection[0] to[0] be[0] superclass[0] for[0] some[0] sections[0] in[0] project[0] [[Sentence=-1,1=word max, 1-5]] config[0] file[0] [[Sentence=-1,1=word max, 1-5]] this[0] is[0] a[0] preparation[0] to[0] include[0] merge[0] strategy[0] per[0] branch[0] feature[0] which[0] will[0] add[0] another[0] section[0] to[0] project[0] [[Sentence=-1,1=word max, 1-5]] config[0] file[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i559aad8325358823471665b24186470a76aaf967/i559ad8325358823471665b24186470a76af967[0][+0.6 MultipleLetters] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
5075 commit b30883860d446e2b7cd81a36094e8febc6c7e60d updated to gwtorm 1.4. refactored the gwt client code to include only what the gerrit gwt client. the gerrit gwt build was giving build warnings since the getasync() signature and implementation used types that were not available to gwt. split the reviewdb into a client and server package. organized the imports to ease the migration. change-id: i6cd6125eddcb1dd2b5c5e353edf163544248026b 	5075 commit b30883860d446e2b7cd81a36094e8febc6c7e60d updated to gwtorm 1.4.<br> refactored the gwt client code to include only what the gerrit gwt client.<br> the gerrit gwt build was giving build warnings since the getasync( signature and implementation used types that were not available to gwt.<br> split the reviewdb into a client and server package.<br> organized the imports to ease the migration.<br> change-id: i6cd6125eddcb1dd2b5c5e353edf163544248026b	1	-1	 5075[0] commit[0] b30883860d446e2b7cd81a36094e8febc6c7e60d[0] updated[0] to[0] gwtorm[0] 1[0] .4[0] [[Sentence=-1,1=word max, 1-5]] refactored[0] the[0] gwt[0] client[0] code[0] to[0] include[0] only[0] what[0] the[0] gerrit[0] gwt[0] client[0] [[Sentence=-1,1=word max, 1-5]] the[0] gerrit[0] gwt[0] build[0] was[0] giving[0] build[0] warnings[0] since[0] the[0] getasync[0] signature[0] and[0] implementation[0] used[0] types[0] that[0] were[0] not[0] available[0] to[0] gwt[0] [[Sentence=-1,1=word max, 1-5]] split[0] the[0] reviewdb[0] into[0] a[0] client[0] and[0] server[0] package[0] [[Sentence=-1,1=word max, 1-5]] organized[0] the[0] imports[0] to[0] ease[0] the[0] migration[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i6cd6125eddcb1dd2b5c5e353edf163544248026b[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5176 commit e0f8b573aeea8f46677872b55a3178b8d1aade96 merge: 9d21da7 ece4c98 merge "refactor restorechange code into gerrit-server" 	5176 commit e0f8b573aeea8f46677872b55a3178b8d1ade96 merge: 9d21da7 ece4c98 merge "refactor restorechange code into gerrit-server"	1	-1	 5176[0] commit[0] e0f8b573aeea8f46677872b55a3178b8d1aade96/e0f8b573aeea8f46677872b55a3178b8d1ade96[0] merge[0] 9d21da7[0] ece4c98[0] merge[0] refactor[0] restorechange[0] code[0] into[0] gerrit[0] server[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5177 commit ece4c9824fd328305817f06043f557e09ff2b537 refactor restorechange code into gerrit-server while most of the logic for restorechange was already in gerrit-server in changeutil, this change moves it into it's own class. using a reviewresult will allow us to perform one of several related review actions when responding to an ssh/rpc request and then handle the result (or more specifically, the errors associated with it) in a single block of code. change-id: i0f285f3ee68895dbd41d8dce8ed50d15f222898b 	5177 commit ece4c9824fd328305817f06043f557e09ff2b537 refactor restorechange code into gerrit-server while most of the logic for restorechange was already in gerrit-server in changeutil, this change moves it into it's own class.<br> using a reviewresult will allow us to perform one of several related review actions when responding to an ssh/rpc request and then handle the result (or more specifically, the errors associated with it) in a single block of code.<br> change-id: i0f285f3ee68895dbd41d8dce8ed50d15f22898b	1	-1	 5177[0] commit[0] ece4c9824fd328305817f06043f557e09ff2b537[0] refactor[0] restorechange[0] code[0] into[0] gerrit[0] server[0] while[0] most[0] of[0] the[0] logic[0] for[0] restorechange[0] was[0] already[0] in[0] gerrit[0] server[0] in[0] changeutil[0] this[0] change[0] moves[0] it[0] into[0] it's[0] own[0] class[0] [[Sentence=-1,1=word max, 1-5]] using[0] a[0] reviewresult[0] will[0] allow[0] us[0] to[0] perform[0] one[0] of[0] several[0] related[0] review[0] actions[0] when[0] responding[0] to[0] an[0] ssh/rpc[0] request[0] and[0] then[0] handle[0] the[0] result[0] or[0] more[0] specifically[0] the[0] errors[0] associated[0] with[0] it[0] in[0] a[0] single[0] block[0] of[0] code[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i0f285f3ee68895dbd41d8dce8ed50d15f222898b/i0f285f3ee68895dbd41d8dce8ed50d15f22898b[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5179 commit edcc56aad426cab3ceb9681e459da5c3dac87397 refactor cachepool to permit other types of caching in a cluster configuration we might choose to avoid using ehcache altogether, and instead use no caching, or use some other type of cluster based cache such as memcache. although ehcache has pluggable providers underneath of it that may permit use in a cluster environment, we might not always be able to use that provider. abstract it away as a guice injection so that we can replace ehcache entirely if we need to. change-id: ia3f918606968148b4ab1450011c1a077234d3cbd signed-off-by: shawn o. pearce  sop@google.com  	5179 commit edcc56ad426cab3ceb9681e459da5c3dac87397 refactor cachepool to permit other types of caching in a cluster configuration we might choose to avoid using ehcache altogether, and instead use no caching, or use some other type of cluster based cache such as memcache.<br> although ehcache has pluggable providers underneath of it that may permit use in a cluster environment, we might not always be able to use that provider.<br> abstract it away as a guice injection so that we can replace ehcache entirely if we need to.<br> change-id: ia3f918606968148b4ab1450011c1a077234d3cbd signed-off-by: shawn o.<br> pearce  sop@google.<br>com 	1	-2	 5179[0] commit[0] edcc56aad426cab3ceb9681e459da5c3dac87397/edcc56ad426cab3ceb9681e459da5c3dac87397[0] refactor[0] cachepool[0] to[0] permit[0] other[0] types[0] of[0] caching[0] in[0] a[0] cluster[0] configuration[0] we[0] might[0] choose[0] to[0] avoid[-1] using[0] ehcache[0] altogether[0] and[0] instead[0] use[0] no[0] caching[0] or[0] use[0] some[0] other[0] type[0] of[0] cluster[0] based[0] cache[0] such[0] as[0] memcache[0] [[Sentence=-2,1=word max, 1-5]] although[0] ehcache[0] has[0] pluggable[0] providers[0] underneath[0] of[0] it[0] that[0] may[0] permit[0] use[0] in[0] a[0] cluster[0] environment[0] we[0] might[0] not[0] always[0] be[0] able[0] to[0] use[0] that[0] provider[0] [[Sentence=-1,1=word max, 1-5]] abstract[0] it[0] away[0] as[0] a[0] guice[0] injection[0] so[0] that[0] we[0] can[0] replace[0] ehcache[0] entirely[0] if[0] we[0] need[0] to[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] ia3f918606968148b4ab1450011c1a077234d3cbd[0] signed[0] off[0] by[0] shawn[0] o[0] [[Sentence=-1,1=word max, 1-5]] pearce[0] sop@google[0] [[Sentence=-1,1=word max, 1-5]] com[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
5604 commit 2b63c6cf09663d96b7a661b89d856d4cce809b6f merge: 827c735 0c1abdb merge changes ied06561c,idff421e1,iaf12bab5,i2b744f5a * changes: add permission_sort cache to remember sort orderings reuse cached refcontrol data in functionstate refactor how permissions are matched by projectcontrol, refcontrol cache effective capabilities to improve lookup performance 	5604 commit 2b63c6cf09663d96b7a661b89d856d4cce809b6f merge: 827c735 0c1abdb merge changes ied06561c,idff421e1,iaf12bab5,i2b744f5a * changes: add permission_sort cache to remember sort orderings reuse cached refcontrol data in functionstate refactor how permissions are matched by projectcontrol, refcontrol cache effective capabilities to improve lookup performance	2	-1	 5604[0] commit[0] 2b63c6cf09663d96b7a661b89d856d4cce809b6f[0] merge[0] 827c735[0] 0c1abdb[0] merge[0] changes[0] ied06561c[0] idff421e1[0] iaf12bab5[0] i2b744f5a[0] changes[0] add[0] permission_sort[0] cache[0] to[0] remember[0] sort[0] orderings[0] reuse[0] cached[0] refcontrol[0] data[0] in[0] functionstate[0] refactor[0] how[0] permissions[0] are[0] matched[0] by[0] projectcontrol[0] refcontrol[0] cache[0] effective[0] capabilities[0] to[0] improve[1] lookup[0] performance[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
5608 commit bee0aeafa1ca9552e4caf82ae0cbf7adaf71c4cd refactor how permissions are matched by projectcontrol, refcontrol accesssections are now matched onto references using pre-compiled sectionmatcher objects. these matchers are built in the projectstate on demand, and cached until the projectstate itself is discarded from memory. this saves the pattern.compile() costs, as well as some basic conditionals to determine which type of reference pattern the section uses, providing a small speed up to access rule evaluation. projectcontrol and refcontrol now stores all permissions that belong to the project or reference, rather than only the ones relevant for their currentuser. this allows the control objects to provide cached data for other users, such as when changecontrol needs to build a different copy of itself for each reviewer listed on the change. projectcontrol caches refcontrols it builds, making it easier for callers like receivecommits or visiblereffilter to deal with a lot of lookups for the same common reference name within a single project access request. this comes at a cost of memory, but should be an improvement in response time. project ownership checks are now handled by projectstate, relying on the cached localowners data instead of looking at the owner permission on "refs/*". the cached localowners is already built up from the "refs/*" data during projectstate's constructor, so doing it dynamically via refcontrol inside of projectcontrol was really quite wasteful. change-id: iaf12bab55d41217363cc05ba024f452d03bc21df 	5608 commit bee0aeafa1ca9552e4caf82ae0cbf7adaf71c4cd refactor how permissions are matched by projectcontrol, refcontrol accessections are now matched onto references using pre-compiled sectionmatcher objects.<br> these matchers are built in the projectstate on demand, and cached until the projectstate itself is discarded from memory.<br> this saves the pattern.<br>compile( costs, as well as some basic conditionals to determine which type of reference pattern the section uses, providing a small speed up to access rule evaluation.<br> projectcontrol and refcontrol now stores all permissions that belong to the project or reference, rather than only the ones relevant for their currentuser.<br> this allows the control objects to provide cached data for other users, such as when changecontrol needs to build a different copy of itself for each reviewer listed on the change.<br> projectcontrol caches refcontrols it builds, making it easier for callers like receivecommits or visiblereffilter to deal with a lot of lookups for the same common reference name within a single project access request.<br> this comes at a cost of memory, but should be an improvement in response time.<br> project ownership checks are now handled by projectstate, relying on the cached localowners data instead of looking at the owner permission on "refs/*<br> the cached localowners is already built up from the "refs/* data during projectstate's constructor, so doing it dynamically via refcontrol inside of projectcontrol was really quite wasteful.<br> change-id: iaf12bab55d41217363cc05ba024f452d03bc21df	2	-2	 5608[0] commit[0] bee0aeafa1ca9552e4caf82ae0cbf7adaf71c4cd[0] refactor[0] how[0] permissions[0] are[0] matched[0] by[0] projectcontrol[0] refcontrol[0] accesssections/accessections[0] are[0] now[0] matched[0] onto[0] references[0] using[0] pre[0] compiled[0] sectionmatcher[0] objects[0] [[Sentence=-1,1=word max, 1-5]] these[0] matchers[0] are[0] built[0] in[0] the[0] projectstate[0] on[0] demand[0] and[0] cached[0] until[0] the[0] projectstate[0] itself[0] is[0] discarded[0] from[0] memory[0] [[Sentence=-1,1=word max, 1-5]] this[0] saves[1] the[0] pattern[0] [[Sentence=-1,2=word max, 1-5]] compile[0] costs[0] as[0] well[0] as[0] some[0] basic[0] conditionals[0] to[0] determine[0] which[0] type[0] of[0] reference[0] pattern[0] the[0] section[0] uses[0] providing[0] a[0] small[0] speed[0] up[0] to[0] access[0] rule[0] evaluation[0] [[Sentence=-1,1=word max, 1-5]] projectcontrol[0] and[0] refcontrol[0] now[0] stores[0] all[0] permissions[0] that[0] belong[0] to[0] the[0] project[0] or[0] reference[0] rather[0] than[0] only[0] the[0] ones[0] relevant[0] for[0] their[0] currentuser[0] [[Sentence=-1,1=word max, 1-5]] this[0] allows[0] the[0] control[0] objects[0] to[0] provide[0] cached[0] data[0] for[0] other[0] users[0] such[0] as[0] when[0] changecontrol[0] needs[0] to[0] build[0] a[0] different[0] copy[0] of[0] itself[0] for[0] each[0] reviewer[0] listed[0] on[0] the[0] change[0] [[Sentence=-1,1=word max, 1-5]] projectcontrol[0] caches[0] refcontrols[0] it[0] builds[0] making[0] it[0] easier[0] for[0] callers[0] like[0] receivecommits[0] or[0] visiblereffilter[0] to[0] deal[0] with[0] a[0] lot[0] of[0] lookups[0] for[0] the[0] same[0] common[0] reference[0] name[0] within[0] a[0] single[0] project[0] access[0] request[0] [[Sentence=-1,1=word max, 1-5]] this[0] comes[0] at[0] a[0] cost[0] of[0] memory[0] but[0] should[0] be[0] an[0] improvement[1] in[0] response[0] time[0] [[Sentence=-1,2=word max, 1-5]] project[0] ownership[0] checks[0] are[0] now[0] handled[0] by[0] projectstate[0] relying[0] on[0] the[0] cached[0] localowners[0] data[0] instead[0] of[0] looking[0] at[0] the[0] owner[0] permission[0] on[0] refs/[0] [[Sentence=-1,1=word max, 1-5]] the[0] cached[0] localowners[0] is[0] already[0] built[0] up[0] from[0] the[0] refs/[0] data[0] during[0] projectstate's[0] constructor[0] so[0] doing[0] it[0] dynamically[0] via[0] refcontrol[0] inside[0] of[0] projectcontrol[0] was[0] really[0] quite[0] wasteful[-1] [[Sentence=-2,1=word max, 1-5]] change[0] id[0] iaf12bab55d41217363cc05ba024f452d03bc21df[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
5665 commit 21a4f5c3b6eb96aa5cab9e055869c5f46df4c5cc add cla check to projectcontrol.canpushtoatleastoneref() this is a refactoring, it should not change functionality at all. move cla check out of receivecommits and into projectcontrol. create a common capable class to facilitate this. change-id: i43ff798bcb727918eb39b1ec8dc7e14278c91b1f 	5665 commit 21a4f5c3b6eb96a5cab9e055869c5f46df4c5c add cla check to projectcontrol.<br>canpushtoatleastoneref( this is a refactoring, it should not change functionality at all.<br> move cla check out of receivecommits and into projectcontrol.<br> create a common capable class to facilitate this.<br> change-id: i43ff798bcb727918eb39b1ec8dc7e14278c91b1f	2	-1	 5665[0] commit[0] 21a4f5c3b6eb96aa5cab9e055869c5f46df4c5cc/21a4f5c3b6eb96a5cab9e055869c5f46df4c5c[0][+0.6 MultipleLetters] add[0] cla[0] check[0] to[0] projectcontrol[0] [[Sentence=-1,2=word max, 1-5]] canpushtoatleastoneref[0] this[0] is[0] a[0] refactoring[0] it[0] should[0] not[0] change[0] functionality[0] at[0] all[0] [[Sentence=-1,1=word max, 1-5]] move[0] cla[0] check[0] out[0] of[0] receivecommits[0] and[0] into[0] projectcontrol[0] [[Sentence=-1,1=word max, 1-5]] create[0] a[0] common[0] capable[0] class[0] to[0] facilitate[0] this[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i43ff798bcb727918eb39b1ec8dc7e14278c91b1f[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
5741 commit f13b8ab3ff6966233b93f5783c659d6a5b98a5b9 merge: ec40063 fb9760e merge "refactored addreviewer and removereviewer logic into gerrit-server" 	5741 commit f13b8ab3ff6966233b93f5783c659d6a5b98a5b9 merge: ec40063 fb9760e merge "refactored addreviewer and removereviewer logic into gerrit-server"	1	-1	 5741[0] commit[0] f13b8ab3ff6966233b93f5783c659d6a5b98a5b9[0] merge[0] ec40063[0] fb9760e[0] merge[0] refactored[0] addreviewer[0] and[0] removereviewer[0] logic[0] into[0] gerrit[0] server[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5742 commit fb9760ed11d3f4c88361199e3e9217c7eb9d6d46 refactored addreviewer and removereviewer logic into gerrit-server this change paves the way for a modifyreviewers command. change-id: if7852e46c692d8c6074cd0bd9f094f900e21335e 	5742 commit fb9760ed11d3f4c88361199e3e9217c7eb9d6d46 refactored addreviewer and removereviewer logic into gerrit-server this change paves the way for a modifyreviewers command.<br> change-id: if7852e46c692d8c6074cd0bd9f094f900e21335e	1	-1	 5742[0] commit[0] fb9760ed11d3f4c88361199e3e9217c7eb9d6d46[0] refactored[0] addreviewer[0] and[0] removereviewer[0] logic[0] into[0] gerrit[0] server[0] this[0] change[0] paves[0] the[0] way[0] for[0] a[0] modifyreviewers[0] command[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] if7852e46c692d8c6074cd0bd9f094f900e21335e[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6836 commit 725fed4269996581bfe1ef88c4f7ca8bdabad7fb merge: 2a65129 6e69372 merge branch 'master' into gwt-2.0 * master: fix reading the  site_path/etc/ssh_host_key in serialized form never compress a pid file under  site_path/logs clean up the dwimery for database.* configuration settings completely remove gerritserver.properties fix duplicate branches showing in the branches tab refactor gitrepositorymanager to be an interface conflicts: tools/gwtui_dbg.launch tools/gwtui_mac.launch change-id: if50811015fa24804013338fa4261fc347c2a8812 	6836 commit 725fed426996581bfe1ef88c4f7ca8bdabad7fb merge: 2a65129 6e69372 merge branch 'master' into gwt-2.0 * master: fix reading the  site_path/etc/ssh_host_key in serialized form never compress a pid file under  site_path/logs clean up the dwimery for database.<br> configuration settings completely remove gerritserver.<br>properties fix duplicate branches showing in the branches tab refactor gitrepositorymanager to be an interface conflicts: tools/gwtui_dbg.<br>launch tools/gwtui_mac.<br>launch change-id: if50811015fa2480401338fa4261fc347c2a8812	1	-1	 6836[0] commit[0] 725fed4269996581bfe1ef88c4f7ca8bdabad7fb/725fed426996581bfe1ef88c4f7ca8bdabad7fb[0] merge[0] 2a65129[0] 6e69372[0] merge[0] branch[0] 'master'[0] into[0] gwt[0] -2[0] .0[0] master[0] fix[0] reading[0] the[0] site_path/etc/ssh_host_key[0] in[0] serialized[0] form[0] never[0] compress[0] a[0] pid[0] file[0] under[0] site_path/logs[0] clean[0] up[0] the[0] dwimery[0] for[0] database[0] [[Sentence=-1,1=word max, 1-5]] configuration[0] settings[0] completely[0] remove[0] gerritserver[0] [[Sentence=-1,1=word max, 1-5]] properties[0] fix[0] duplicate[0] branches[0] showing[0] in[0] the[0] branches[0] tab[0] refactor[0] gitrepositorymanager[0] to[0] be[0] an[0] interface[0] conflicts[0] tools/gwtui_dbg[0] [[Sentence=-1,1=word max, 1-5]] launch[0] tools/gwtui_mac[0] [[Sentence=-1,1=word max, 1-5]] launch[0] change[0] id[0] if50811015fa24804013338fa4261fc347c2a8812/if50811015fa2480401338fa4261fc347c2a8812[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6842 commit fbcea4cf7a7eff404531b83a267128204b937a10 refactor gitrepositorymanager to be an interface this permits us to easily mock it with easymock. the implementation that relies on the local filesystem api within jgit has been renamed to localdiskrepositorymanager. change-id: ib47a2a22f4f6564e1b592a8476c3bc699f4e3b2e signed-off-by: shawn o. pearce  sop@google.com  	6842 commit fbcea4cf7a7eff404531b83a267128204b937a10 refactor gitrepositorymanager to be an interface this permits us to easily mock it with easymock.<br> the implementation that relies on the local filesystem api within jgit has been renamed to localdiskrepositorymanager.<br> change-id: ib47a2a22f4f6564e1b592a8476c3bc699f4e3b2e signed-off-by: shawn o.<br> pearce  sop@google.<br>com 	1	-3	 6842[0] commit[0] fbcea4cf7a7eff404531b83a267128204b937a10[0] refactor[0] gitrepositorymanager[0] to[0] be[0] an[0] interface[0] this[0] permits[0] us[0] to[0] easily[0] mock[-2] it[0] with[0] easymock[0] [[Sentence=-3,1=word max, 1-5]] the[0] implementation[0] that[0] relies[0] on[0] the[0] local[0] filesystem[0] api[0] within[0] jgit[0] has[0] been[0] renamed[0] to[0] localdiskrepositorymanager[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] ib47a2a22f4f6564e1b592a8476c3bc699f4e3b2e[0] signed[0] off[0] by[0] shawn[0] o[0] [[Sentence=-1,1=word max, 1-5]] pearce[0] sop@google[0] [[Sentence=-1,1=word max, 1-5]] com[0] [[Sentence=-1,1=word max, 1-5]][[[1,-3 max of sentences]]]
6866 commit bbf1aaccde2cd0c9d9becff1f7a784466726abda init: refactor init to be small parts created through guice i was nuts when i wrote init. making it all one giant program in a single class was simply insane. instead we break it down into many smaller classes and use guice to manage the creation, dependency injection, and control flow. since init knew about most of the files under the  site_path we put them all into a single immutable class called sitepaths and replace all references to these throughout the code base to use sitepaths and these well defined constants. init can now also import gerritserver.properties into the newer style gerrit.config and secure.config. this ensure the database settings are setup with the current defaults change-id: i4f5d8256497c1a97df35754dbe6193c78edde9e1 signed-off-by: shawn o. pearce  sop@google.com  	6866 commit bbf1accde2cd0c9d9becff1f7a784466726abda init: refactor init to be small parts created through guice i was nuts when i wrote init.<br> making it all one giant program in a single class was simply insane.<br> instead we break it down into many smaller classes and use guice to manage the creation, dependency injection, and control flow.<br> since init knew about most of the files under the  site_path we put them all into a single immutable class called sitepaths and replace all references to these throughout the code base to use sitepaths and these well defined constants.<br> init can now also import gerritserver.<br>properties into the newer style gerrit.<br>config and secure.<br>config.<br> this ensure the database settings are setup with the current defaults change-id: i4f5d8256497c1a97df35754dbe6193c78edde9e1 signed-off-by: shawn o.<br> pearce  sop@google.<br>com 	2	-2	 6866[0] commit[0] bbf1aaccde2cd0c9d9becff1f7a784466726abda/bbf1accde2cd0c9d9becff1f7a784466726abda[0] init[0] refactor[0] init[0] to[0] be[0] small[0] parts[0] created[0] through[0] guice[0] i[0] was[0] nuts[0] when[0] i[0] wrote[0] init[0] [[Sentence=-1,1=word max, 1-5]] making[0] it[0] all[0] one[0] giant[0] program[0] in[0] a[0] single[0] class[0] was[0] simply[0] insane[-1] [[Sentence=-2,1=word max, 1-5]] instead[0] we[0] break[0] it[0] down[0] into[0] many[0] smaller[0] classes[0] and[0] use[0] guice[0] to[0] manage[0] the[0] creation[0] dependency[0] injection[0] and[0] control[0] flow[0] [[Sentence=-1,1=word max, 1-5]] since[0] init[0] knew[0] about[0] most[0] of[0] the[0] files[0] under[0] the[0] site_path[0] we[0] put[0] them[0] all[0] into[0] a[0] single[0] immutable[0] class[0] called[0] sitepaths[0] and[0] replace[0] all[0] references[0] to[0] these[0] throughout[0] the[0] code[0] base[0] to[0] use[0] sitepaths[0] and[0] these[0] well[0] defined[0] constants[0] [[Sentence=-1,1=word max, 1-5]] init[0] can[0] now[0] also[0] import[0] gerritserver[0] [[Sentence=-1,1=word max, 1-5]] properties[0] into[0] the[0] newer[0] style[0] gerrit[0] [[Sentence=-1,1=word max, 1-5]] config[0] and[0] secure[1] [[Sentence=-1,2=word max, 1-5]] config[0] [[Sentence=-1,1=word max, 1-5]] this[0] ensure[0] the[0] database[0] settings[0] are[0] setup[0] with[0] the[0] current[0] defaults[0] change[0] id[0] i4f5d8256497c1a97df35754dbe6193c78edde9e1[0] signed[0] off[0] by[0] shawn[0] o[0] [[Sentence=-1,1=word max, 1-5]] pearce[0] sop@google[0] [[Sentence=-1,1=word max, 1-5]] com[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
6978 commit 44671f5c6929a8f05223dd359182610286ceb98a rewrite our build as modular maven components this refactoring splits the code up into different components, with their own per-component classpath. by moving all of our classes into isolated components we can better isolate the classpaths and try to avoid unexpected dependency problems. it also allows us to more clearly define which components are used by the gwt ui and thus must be compiled under gwt, and which components are run on the server and can therefore use more of the j2se api. change-id: i833cc22bacc5655d1c9099ed7c2b0e0a5b08855a signed-off-by: shawn o. pearce  sop@google.com  	6978 commit 44671f5c6929a8f05223dd359182610286ceb98a rewrite our build as modular maven components this refactoring splits the code up into different components, with their own per-component classpath.<br> by moving all of our classes into isolated components we can better isolate the classpaths and try to avoid unexpected dependency problems.<br> it also allows us to more clearly define which components are used by the gwt ui and thus must be compiled under gwt, and which components are run on the server and can therefore use more of the j2se api.<br> change-id: i833cc22bacc5655d1c9099ed7c2b0e0a5b08855a signed-off-by: shawn o.<br> pearce  sop@google.<br>com 	1	-2	 6978[0] commit[0] 44671f5c6929a8f05223dd359182610286ceb98a[0] rewrite[0] our[0] build[0] as[0] modular[0] maven[0] components[0] this[0] refactoring[0] splits[0] the[0] code[0] up[0] into[0] different[0] components[0] with[0] their[0] own[0] per[0] component[0] classpath[0] [[Sentence=-1,1=word max, 1-5]] by[0] moving[0] all[0] of[0] our[0] classes[0] into[0] isolated[-1] components[0] we[0] can[0] better[0] isolate[-1] the[0] classpaths[0] and[0] try[0] to[0] avoid[-1] unexpected[0] dependency[0] problems[-1] [[Sentence=-2,1=word max, 1-5]] it[0] also[0] allows[0] us[0] to[0] more[0] clearly[0] define[0] which[0] components[0] are[0] used[0] by[0] the[0] gwt[0] ui[0] and[0] thus[0] must[0] be[0] compiled[0] under[0] gwt[0] and[0] which[0] components[0] are[0] run[0] on[0] the[0] server[0] and[0] can[0] therefore[0] use[0] more[0] of[0] the[0] j2se[0] api[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i833cc22bacc5655d1c9099ed7c2b0e0a5b08855a[0] signed[0] off[0] by[0] shawn[0] o[0] [[Sentence=-1,1=word max, 1-5]] pearce[0] sop@google[0] [[Sentence=-1,1=word max, 1-5]] com[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
7419 commit 5013c9c13352b405a8c782500bdd968d204e6f27 refactor command thread creation logic into basecommand the thread creation is now optional, permitting dispatchcommand to not use it, while other subclasses do take advantage of it being available. error handling for the thread is now consistently handled in one spot, ensuring we get errors back in the client and in the log. signed-off-by: shawn o. pearce  sop@google.com  	7419 commit 5013c9c13352b405a8c782500bdd968d204e6f27 refactor command thread creation logic into basecommand the thread creation is now optional, permitting dispatchcommand to not use it, while other subclasses do take advantage of it being available.<br> error handling for the thread is now consistently handled in one spot, ensuring we get errors back in the client and in the log.<br> signed-off-by: shawn o.<br> pearce  sop@google.<br>com 	1	-1	 7419[0] commit[0] 5013c9c13352b405a8c782500bdd968d204e6f27[0] refactor[0] command[0] thread[0] creation[0] logic[0] into[0] basecommand[0] the[0] thread[0] creation[0] is[0] now[0] optional[0] permitting[0] dispatchcommand[0] to[0] not[0] use[0] it[0] while[0] other[0] subclasses[0] do[0] take[0] advantage[0] of[0] it[0] being[0] available[0] [[Sentence=-1,1=word max, 1-5]] error[0] handling[0] for[0] the[0] thread[0] is[0] now[0] consistently[0] handled[0] in[0] one[0] spot[0] ensuring[0] we[0] get[0] errors[0] back[0] in[0] the[0] client[0] and[0] in[0] the[0] log[0] [[Sentence=-1,1=word max, 1-5]] signed[0] off[0] by[0] shawn[0] o[0] [[Sentence=-1,1=word max, 1-5]] pearce[0] sop@google[0] [[Sentence=-1,1=word max, 1-5]] com[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7425 commit 2d88501a3e2801927b78927e9f04fc2bf00a520d refactor ssh commands into their own package this separates the command implementations from the supporting code used by the rest of the daemon, thereby hiding most of the daemon's implementation details from the commands. signed-off-by: shawn o. pearce  sop@google.com  	7425 commit 2d88501a3e2801927b78927e9f04fc2bf00a520d refactor ssh commands into their own package this separates the command implementations from the supporting code used by the rest of the daemon, thereby hiding most of the daemon's implementation details from the commands.<br> signed-off-by: shawn o.<br> pearce  sop@google.<br>com 	2	-1	 7425[0] commit[0] 2d88501a3e2801927b78927e9f04fc2bf00a520d[0] refactor[0] ssh[0] commands[0] into[0] their[0] own[0] package[0] this[0] separates[0] the[0] command[0] implementations[0] from[0] the[0] supporting[1] code[0] used[0] by[0] the[0] rest[0] of[0] the[0] daemon[0] thereby[0] hiding[0] most[0] of[0] the[0] daemon's[0] implementation[0] details[0] from[0] the[0] commands[0] [[Sentence=-1,2=word max, 1-5]] signed[0] off[0] by[0] shawn[0] o[0] [[Sentence=-1,1=word max, 1-5]] pearce[0] sop@google[0] [[Sentence=-1,1=word max, 1-5]] com[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
8137 commit c5c21b6702427834946390dbed6977bd8d33ed3f refactor the project admin screen into tabs before we start adding more data to display on the project admin screen i'm splitting its ui up into tabs, so that we can hang the new information off of new tabs. this reduces the total amount of vertical screen space needed for display, especially by hiding information that isn't very commonly accessed. signed-off-by: shawn o. pearce  sop@google.com  	8137 commit c5c21b6702427834946390dbed6977bd8d33ed3f refactor the project admin screen into tabs before we start adding more data to display on the project admin screen i'm splitting its ui up into tabs, so that we can hang the new information off of new tabs.<br> this reduces the total amount of vertical screen space needed for display, especially by hiding information that isn't very commonly accessed.<br> signed-off-by: shawn o.<br> pearce  sop@google.<br>com 	1	-2	 8137[0] commit[0] c5c21b6702427834946390dbed6977bd8d33ed3f[0] refactor[0] the[0] project[0] admin[0] screen[0] into[0] tabs[0] before[0] we[0] start[0] adding[0] more[0] data[0] to[0] display[0] on[0] the[0] project[0] admin[0] screen[0] i'm[0] splitting[0] its[0] ui[0] up[0] into[0] tabs[0] so[0] that[0] we[0] can[0] hang[-1] the[0] new[0] information[0] off[0] of[0] new[0] tabs[0] [[Sentence=-2,1=word max, 1-5]] this[0] reduces[0] the[0] total[0] amount[0] of[0] vertical[0] screen[0] space[0] needed[0] for[0] display[0] especially[0] by[0] hiding[0] information[0] that[0] isn't[0] very[0] commonly[0] accessed[0] [[Sentence=-1,1=word max, 1-5]] signed[0] off[0] by[0] shawn[0] o[0] [[Sentence=-1,1=word max, 1-5]] pearce[0] sop@google[0] [[Sentence=-1,1=word max, 1-5]] com[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
