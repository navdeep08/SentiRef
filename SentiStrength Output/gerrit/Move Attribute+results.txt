Move Attribute	Translation	Positive	Negative	EmotionRationale
1589 commit efe7aca78d6b319e42e221876f8cc92c7270ceba add the revision diff rest api implementation. a revision diff shows the contents of a file diff'd against a base revision. the "content" key in the root object contains an array of objects where there is: "ab" for common lines to both sides only "a" when lines were deleted in "b" only "b" when lines were inserted in "b" "a" and "b" when the lines were replaced skip line count when the file is too large to show all common lines if the url parameter "intraline" is specified. replaced regions may also contain an "edit_a" and "edit_b" list of  offset, length  pairs, from the begining of the region. edit_a represents deleted text sections and edit_b represents insterted text sections. note, the implied newline character is included in the offset position. whitespace behavior can be controlled via the "ignore-whitespace" url parameter. also, # of lines of surrounding context can be control via the "context" url parameter. patchscript was updated to include the calculated content type of the file, which is exposed in the meta_[a b] field of the root object. patchscriptfactory was refactored to take the changecontrol, due to scoping issues in the rest api. furthermore, patch.key was replaced by filename. the git patch diff header was updated to not include the trailing newline. todo: improve the content-type detection, since it returns "application/octet-stream" more often than it should. change-id: i96a6e0d569f3ecf24c5529dc706ae85c61bfb699 	1589 commit efe7aca78d6b319e42e221876f8cc92c7270ceba add the revision diff rest api implementation.<br> a revision diff shows the contents of a file diff'd against a base revision.<br> the "content" key in the root object contains an array of objects where there is: "ab" for common lines to both sides only "a" when lines were deleted in "b" only "b" when lines were inserted in "b" "a" and "b" when the lines were replaced skip line count when the file is too large to show all common lines if the url parameter "intraline" is specified.<br> replaced regions may also contain an "edit_a" and "edit_b" list of  offset, length  pairs, from the begining of the region.<br> edit_a represents deleted text sections and edit_b represents insterted text sections.<br> note, the implied newline character is included in the offset position.<br> whitespace behavior can be controlled via the "ignore-whitespace" url parameter.<br> also, # of lines of surrounding context can be control via the "context" url parameter.<br> patchscript was updated to include the calculated content type of the file, which is exposed in the meta_[a b] field of the root object.<br> patchscriptfactory was refactored to take the changecontrol, due to scoping issues in the rest api.<br> furthermore, patch.<br>key was replaced by filename.<br> the git patch diff header was updated to not include the trailing newline.<br> todo: improve the content-type detection, since it returns "application/octet-stream" more often than it should.<br> change-id: i96a6e0d569f3ecf24c5529dc706ae85c61bfb699	2	-2	 1589[0] commit[0] efe7aca78d6b319e42e221876f8cc92c7270ceba[0] add[0] the[0] revision[0] diff[0] rest[0] api[0] implementation[0] [[Sentence=-1,1=word max, 1-5]] a[0] revision[0] diff[0] shows[0] the[0] contents[0] of[0] a[0] file[0] diff'd[0] against[-1] a[0] base[0] revision[0] [[Sentence=-2,1=word max, 1-5]] the[0] content[0] key[0] in[0] the[0] root[0] object[0] contains[0] an[0] array[0] of[0] objects[0] where[0] there[0] is[0] ab[0] for[0] common[0] lines[0] to[0] both[0] sides[0] only[0] a[0] when[0] lines[0] were[0] deleted[0] in[0] b[0] only[0] b[0] when[0] lines[0] were[0] inserted[0] in[0] b[0] a[0] and[0] b[0] when[0] the[0] lines[0] were[0] replaced[0] skip[0] line[0] count[0] when[0] the[0] file[0] is[0] too[0] large[0] to[0] show[0] all[0] common[0] lines[0] if[0] the[0] url[0] parameter[0] intraline[0] is[0] specified[0] [[Sentence=-1,1=word max, 1-5]] replaced[0] regions[0] may[0] also[0] contain[0] an[0] edit_a[0] and[0] edit_b[0] list[0] of[0] offset[0] length[0] pairs[0] from[0] the[0] begining[0] of[0] the[0] region[0] [[Sentence=-1,1=word max, 1-5]] edit_a[0] represents[0] deleted[0] text[0] sections[0] and[0] edit_b[0] represents[0] insterted[0] text[0] sections[0] [[Sentence=-1,1=word max, 1-5]] note[0] the[0] implied[0] newline[0] character[0] is[0] included[0] in[0] the[0] offset[0] position[0] [[Sentence=-1,1=word max, 1-5]] whitespace[0] behavior[0] can[0] be[0] controlled[0] via[0] the[0] ignore[0] whitespace[0] url[0] parameter[0] [[Sentence=-1,1=word max, 1-5]] also[0] #[0] of[0] lines[0] of[0] surrounding[0] context[0] can[0] be[0] control[0] via[0] the[0] context[0] url[0] parameter[0] [[Sentence=-1,1=word max, 1-5]] patchscript[0] was[0] updated[0] to[0] include[0] the[0] calculated[0] content[0] type[0] of[0] the[0] file[0] which[0] is[0] exposed[-1] in[0] the[0] meta_[a[0] b][0] field[0] of[0] the[0] root[0] object[0] [[Sentence=-2,1=word max, 1-5]] patchscriptfactory[0] was[0] refactored[0] to[0] take[0] the[0] changecontrol[0] due[0] to[0] scoping[0] issues[0] in[0] the[0] rest[0] api[0] [[Sentence=-1,1=word max, 1-5]] furthermore[0] patch[0] [[Sentence=-1,1=word max, 1-5]] key[0] was[0] replaced[0] by[0] filename[0] [[Sentence=-1,1=word max, 1-5]] the[0] git[0] patch[0] diff[0] header[0] was[0] updated[0] to[0] not[0] include[0] the[0] trailing[0] newline[0] [[Sentence=-1,1=word max, 1-5]] todo[0] improve[1] the[0] content[0] type[0] detection[0] since[0] it[0] returns[0] application/octet[0] stream[0] more[0] often[0] than[0] it[0] should[0] [[Sentence=-1,2=word max, 1-5]] change[0] id[0] i96a6e0d569f3ecf24c5529dc706ae85c61bfb699[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
3777 commit b8afa2f78f3e618e7c1ac1369ac038f5865eba0f merge: 21774f6 af8940a merge "refactoring of cherrypick merge-strategy" 	377 commit b8afa2f78f3e618e7c1ac1369ac038f5865eba0f merge: 21774f6 af8940a merge "refactoring of cherrypick merge-strategy"	1	-1	 3777/377[0] commit[0] b8afa2f78f3e618e7c1ac1369ac038f5865eba0f[0] merge[0] 21774f6[0] af8940a[0] merge[0] refactoring[0] of[0] cherrypick[0] merge[0] strategy[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3778 commit af8940a4f459c234847f71705fd58cbf2300c8a3 refactoring of cherrypick merge-strategy some methods where moved out from cherrypick.java into mergeutils, to prepare for cherrypick button and sshd cmd. change-id: ib242b34037fad23b2dc09e20a93e47539db7798f 	3778 commit af8940a4f459c234847f71705fd58cbf2300c8a3 refactoring of cherrypick merge-strategy some methods where moved out from cherrypick.<br>java into mergeutils, to prepare for cherrypick button and sshd cmd.<br> change-id: ib242b34037fad23b2dc09e20a93e47539db7798f	1	-1	 3778[0] commit[0] af8940a4f459c234847f71705fd58cbf2300c8a3[0] refactoring[0] of[0] cherrypick[0] merge[0] strategy[0] some[0] methods[0] where[0] moved[0] out[0] from[0] cherrypick[0] [[Sentence=-1,1=word max, 1-5]] java[0] into[0] mergeutils[0] to[0] prepare[0] for[0] cherrypick[0] button[0] and[0] sshd[0] cmd[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] ib242b34037fad23b2dc09e20a93e47539db7798f[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4892 commit da02c7576d3b7b211a9167875471c46a84661321 refactored contributoragreements to all-projects project.config. existing usages of contributoragreements were updated to use project.config. only agreements with autoverify groups are able to submit "i agree" on the new agreement screen. this represents an add to the group. all of the existing review db accesses and types were removed for accountagreement, accountgroupagreement, and contributoragreement. also, a breaking change was made to changehookrunner, the passes the cla-name instead of the cla-id. change-id: idebf7faa1e63588f2a7479dd28e00ebeff06b3a9 	4892 commit da02c7576d3b7b211a9167875471c46a84661321 refactored contributoragreements to all-projects project.<br>config.<br> existing usages of contributoragreements were updated to use project.<br>config.<br> only agreements with autoverify groups are able to submit "i agree" on the new agreement screen.<br> this represents an add to the group.<br> all of the existing review db accesses and types were removed for accountagreement, accountgroupagreement, and contributoragreement.<br> also, a breaking change was made to changehookrunner, the passes the cla-name instead of the cla-id.<br> change-id: idebf7fa1e63588f2a7479dd28e00ebeff06b3a9	1	-1	 4892[0] commit[0] da02c7576d3b7b211a9167875471c46a84661321[0] refactored[0] contributoragreements[0] to[0] all[0] projects[0] project[0] [[Sentence=-1,1=word max, 1-5]] config[0] [[Sentence=-1,1=word max, 1-5]] existing[0] usages[0] of[0] contributoragreements[0] were[0] updated[0] to[0] use[0] project[0] [[Sentence=-1,1=word max, 1-5]] config[0] [[Sentence=-1,1=word max, 1-5]] only[0] agreements[0] with[0] autoverify[0] groups[0] are[0] able[0] to[0] submit[0] i[0] agree[0] on[0] the[0] new[0] agreement[0] screen[0] [[Sentence=-1,1=word max, 1-5]] this[0] represents[0] an[0] add[0] to[0] the[0] group[0] [[Sentence=-1,1=word max, 1-5]] all[0] of[0] the[0] existing[0] review[0] db[0] accesses[0] and[0] types[0] were[0] removed[0] for[0] accountagreement[0] accountgroupagreement[0] and[0] contributoragreement[0] [[Sentence=-1,1=word max, 1-5]] also[0] a[0] breaking[0] change[0] was[0] made[0] to[0] changehookrunner[0] the[0] passes[0] the[0] cla[0] name[0] instead[0] of[0] the[0] cla[0] id[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] idebf7faa1e63588f2a7479dd28e00ebeff06b3a9/idebf7fa1e63588f2a7479dd28e00ebeff06b3a9[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5176 commit e0f8b573aeea8f46677872b55a3178b8d1aade96 merge: 9d21da7 ece4c98 merge "refactor restorechange code into gerrit-server" 	5176 commit e0f8b573aeea8f46677872b55a3178b8d1ade96 merge: 9d21da7 ece4c98 merge "refactor restorechange code into gerrit-server"	1	-1	 5176[0] commit[0] e0f8b573aeea8f46677872b55a3178b8d1aade96/e0f8b573aeea8f46677872b55a3178b8d1ade96[0] merge[0] 9d21da7[0] ece4c98[0] merge[0] refactor[0] restorechange[0] code[0] into[0] gerrit[0] server[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5177 commit ece4c9824fd328305817f06043f557e09ff2b537 refactor restorechange code into gerrit-server while most of the logic for restorechange was already in gerrit-server in changeutil, this change moves it into it's own class. using a reviewresult will allow us to perform one of several related review actions when responding to an ssh/rpc request and then handle the result (or more specifically, the errors associated with it) in a single block of code. change-id: i0f285f3ee68895dbd41d8dce8ed50d15f222898b 	5177 commit ece4c9824fd328305817f06043f557e09ff2b537 refactor restorechange code into gerrit-server while most of the logic for restorechange was already in gerrit-server in changeutil, this change moves it into it's own class.<br> using a reviewresult will allow us to perform one of several related review actions when responding to an ssh/rpc request and then handle the result (or more specifically, the errors associated with it) in a single block of code.<br> change-id: i0f285f3ee68895dbd41d8dce8ed50d15f22898b	1	-1	 5177[0] commit[0] ece4c9824fd328305817f06043f557e09ff2b537[0] refactor[0] restorechange[0] code[0] into[0] gerrit[0] server[0] while[0] most[0] of[0] the[0] logic[0] for[0] restorechange[0] was[0] already[0] in[0] gerrit[0] server[0] in[0] changeutil[0] this[0] change[0] moves[0] it[0] into[0] it's[0] own[0] class[0] [[Sentence=-1,1=word max, 1-5]] using[0] a[0] reviewresult[0] will[0] allow[0] us[0] to[0] perform[0] one[0] of[0] several[0] related[0] review[0] actions[0] when[0] responding[0] to[0] an[0] ssh/rpc[0] request[0] and[0] then[0] handle[0] the[0] result[0] or[0] more[0] specifically[0] the[0] errors[0] associated[0] with[0] it[0] in[0] a[0] single[0] block[0] of[0] code[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i0f285f3ee68895dbd41d8dce8ed50d15f222898b/i0f285f3ee68895dbd41d8dce8ed50d15f22898b[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5222 commit 97e1bb6479e03529d0396c0c0b798a49eebf8a38 merge: 93cf32d 7fc6c3e merge "refactor abandonchange code into gerrit-server" 	522 commit 97e1bb6479e03529d0396c0c0b798a49eebf8a38 merge: 93cf32d 7fc6c3e merge "refactor abandonchange code into gerrit-server"	1	-2	 5222/522[0] commit[0] 97e1bb6479e03529d0396c0c0b798a49eebf8a38[0] merge[0] 93cf32d[0] 7fc6c3e[0] merge[0] refactor[0] abandonchange[-1] code[0] into[0] gerrit[0] server[0] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
5223 commit 7fc6c3e584f78e8349eeb68faffc0f5749fb5f02 refactor abandonchange code into gerrit-server while most of the logic for abandonchange was already in gerrit-server in changeutil, this change moves it into it's own class. using a reviewresult will allow us to perform one of several related review actions when responding to an ssh/rpc request and then handle the result (or more specifically, the errors associated with it) in a single block of code. change-id: icb70f2edbb4968a2cc43e78eba71f16f7f93d6e4 	5223 commit 7fc6c3e584f78e8349eeb68faffc0f5749fb5f02 refactor abandonchange code into gerrit-server while most of the logic for abandonchange was already in gerrit-server in changeutil, this change moves it into it's own class.<br> using a reviewresult will allow us to perform one of several related review actions when responding to an ssh/rpc request and then handle the result (or more specifically, the errors associated with it) in a single block of code.<br> change-id: icb70f2edbb4968a2cc43e78eba71f16f7f93d6e4	1	-2	 5223[0] commit[0] 7fc6c3e584f78e8349eeb68faffc0f5749fb5f02[0] refactor[0] abandonchange[-1] code[0] into[0] gerrit[0] server[0] while[0] most[0] of[0] the[0] logic[0] for[0] abandonchange[-1] was[0] already[0] in[0] gerrit[0] server[0] in[0] changeutil[0] this[0] change[0] moves[0] it[0] into[0] it's[0] own[0] class[0] [[Sentence=-2,1=word max, 1-5]] using[0] a[0] reviewresult[0] will[0] allow[0] us[0] to[0] perform[0] one[0] of[0] several[0] related[0] review[0] actions[0] when[0] responding[0] to[0] an[0] ssh/rpc[0] request[0] and[0] then[0] handle[0] the[0] result[0] or[0] more[0] specifically[0] the[0] errors[0] associated[0] with[0] it[0] in[0] a[0] single[0] block[0] of[0] code[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] icb70f2edbb4968a2cc43e78eba71f16f7f93d6e4[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
5665 commit 21a4f5c3b6eb96aa5cab9e055869c5f46df4c5cc add cla check to projectcontrol.canpushtoatleastoneref() this is a refactoring, it should not change functionality at all. move cla check out of receivecommits and into projectcontrol. create a common capable class to facilitate this. change-id: i43ff798bcb727918eb39b1ec8dc7e14278c91b1f 	5665 commit 21a4f5c3b6eb96a5cab9e055869c5f46df4c5c add cla check to projectcontrol.<br>canpushtoatleastoneref( this is a refactoring, it should not change functionality at all.<br> move cla check out of receivecommits and into projectcontrol.<br> create a common capable class to facilitate this.<br> change-id: i43ff798bcb727918eb39b1ec8dc7e14278c91b1f	2	-1	 5665[0] commit[0] 21a4f5c3b6eb96aa5cab9e055869c5f46df4c5cc/21a4f5c3b6eb96a5cab9e055869c5f46df4c5c[0][+0.6 MultipleLetters] add[0] cla[0] check[0] to[0] projectcontrol[0] [[Sentence=-1,2=word max, 1-5]] canpushtoatleastoneref[0] this[0] is[0] a[0] refactoring[0] it[0] should[0] not[0] change[0] functionality[0] at[0] all[0] [[Sentence=-1,1=word max, 1-5]] move[0] cla[0] check[0] out[0] of[0] receivecommits[0] and[0] into[0] projectcontrol[0] [[Sentence=-1,1=word max, 1-5]] create[0] a[0] common[0] capable[0] class[0] to[0] facilitate[0] this[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i43ff798bcb727918eb39b1ec8dc7e14278c91b1f[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
6600 commit 293a3e2f254de802902acd4fb880070099f65882 refactor and add to streaming events schema combine changes, accounts, and patchsets into their own trees in the serialized json. also add more fields including change numbers, owners for the change, canonical url to the change, and description of the approval type. change-id: i23b75896bc34fa8695105eff68142e974f1067c8 	6600 commit 293a3e2f254de802902acd4fb880070099f65882 refactor and add to streaming events schema combine changes, accounts, and patchsets into their own trees in the serialized json.<br> also add more fields including change numbers, owners for the change, canonical url to the change, and description of the approval type.<br> change-id: i23b75896bc34fa8695105eff68142e974f1067c8	1	-1	 6600[0] commit[0] 293a3e2f254de802902acd4fb880070099f65882[0] refactor[0] and[0] add[0] to[0] streaming[0] events[0] schema[0] combine[0] changes[0] accounts[0] and[0] patchsets[0] into[0] their[0] own[0] trees[0] in[0] the[0] serialized[0] json[0] [[Sentence=-1,1=word max, 1-5]] also[0] add[0] more[0] fields[0] including[0] change[0] numbers[0] owners[0] for[0] the[0] change[0] canonical[0] url[0] to[0] the[0] change[0] and[0] description[0] of[0] the[0] approval[0] type[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i23b75896bc34fa8695105eff68142e974f1067c8[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6866 commit bbf1aaccde2cd0c9d9becff1f7a784466726abda init: refactor init to be small parts created through guice i was nuts when i wrote init. making it all one giant program in a single class was simply insane. instead we break it down into many smaller classes and use guice to manage the creation, dependency injection, and control flow. since init knew about most of the files under the  site_path we put them all into a single immutable class called sitepaths and replace all references to these throughout the code base to use sitepaths and these well defined constants. init can now also import gerritserver.properties into the newer style gerrit.config and secure.config. this ensure the database settings are setup with the current defaults change-id: i4f5d8256497c1a97df35754dbe6193c78edde9e1 signed-off-by: shawn o. pearce  sop@google.com  	6866 commit bbf1accde2cd0c9d9becff1f7a784466726abda init: refactor init to be small parts created through guice i was nuts when i wrote init.<br> making it all one giant program in a single class was simply insane.<br> instead we break it down into many smaller classes and use guice to manage the creation, dependency injection, and control flow.<br> since init knew about most of the files under the  site_path we put them all into a single immutable class called sitepaths and replace all references to these throughout the code base to use sitepaths and these well defined constants.<br> init can now also import gerritserver.<br>properties into the newer style gerrit.<br>config and secure.<br>config.<br> this ensure the database settings are setup with the current defaults change-id: i4f5d8256497c1a97df35754dbe6193c78edde9e1 signed-off-by: shawn o.<br> pearce  sop@google.<br>com 	2	-2	 6866[0] commit[0] bbf1aaccde2cd0c9d9becff1f7a784466726abda/bbf1accde2cd0c9d9becff1f7a784466726abda[0] init[0] refactor[0] init[0] to[0] be[0] small[0] parts[0] created[0] through[0] guice[0] i[0] was[0] nuts[0] when[0] i[0] wrote[0] init[0] [[Sentence=-1,1=word max, 1-5]] making[0] it[0] all[0] one[0] giant[0] program[0] in[0] a[0] single[0] class[0] was[0] simply[0] insane[-1] [[Sentence=-2,1=word max, 1-5]] instead[0] we[0] break[0] it[0] down[0] into[0] many[0] smaller[0] classes[0] and[0] use[0] guice[0] to[0] manage[0] the[0] creation[0] dependency[0] injection[0] and[0] control[0] flow[0] [[Sentence=-1,1=word max, 1-5]] since[0] init[0] knew[0] about[0] most[0] of[0] the[0] files[0] under[0] the[0] site_path[0] we[0] put[0] them[0] all[0] into[0] a[0] single[0] immutable[0] class[0] called[0] sitepaths[0] and[0] replace[0] all[0] references[0] to[0] these[0] throughout[0] the[0] code[0] base[0] to[0] use[0] sitepaths[0] and[0] these[0] well[0] defined[0] constants[0] [[Sentence=-1,1=word max, 1-5]] init[0] can[0] now[0] also[0] import[0] gerritserver[0] [[Sentence=-1,1=word max, 1-5]] properties[0] into[0] the[0] newer[0] style[0] gerrit[0] [[Sentence=-1,1=word max, 1-5]] config[0] and[0] secure[1] [[Sentence=-1,2=word max, 1-5]] config[0] [[Sentence=-1,1=word max, 1-5]] this[0] ensure[0] the[0] database[0] settings[0] are[0] setup[0] with[0] the[0] current[0] defaults[0] change[0] id[0] i4f5d8256497c1a97df35754dbe6193c78edde9e1[0] signed[0] off[0] by[0] shawn[0] o[0] [[Sentence=-1,1=word max, 1-5]] pearce[0] sop@google[0] [[Sentence=-1,1=word max, 1-5]] com[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
7159 commit d4aa0cc9991a25e501d8fb7e9cdcdaf0a2656ca5 fix project owner permissions and refactor project admin service project owner permission were slightly broken in 2.0.19 as they required the owner to have read permission on their own project in order to use the branches panel to manage the branches. this was wrong, and not what we had intended to have happen. this refactoring pulls all of the individual rpc methods out of the projectadminserviceimpl into their own per-request classes, taking only their exact dependencies as injections from guice. we also now use the projectcontrol everywhere to manage access. branch creation and deletion checks are now performed in projectcontrol for both web and ssh interfaces. this allows a user who has ssh access to create or delete branches in a project to also use the web ui, even though they are not a project owner. currently the user must know (or guess) the project info page url however to gain access to the web ui if they are not listed as an owner for that project. like before however, project owners do not have create or delete branch access over ssh unless they specifically grant themselves this permission. this is intentional and is meant to reduce the risk of a branch being created or deleted remotely over ssh due to a typo while using "git push". change-id: i2d350f870817fdf51a7db4c644c7f47ecb2f6171 signed-off-by: shawn o. pearce  sop@google.com  	7159 commit d4a0cc991a25e501d8fb7e9cdcdaf0a2656ca5 fix project owner permissions and refactor project admin service project owner permission were slightly broken in 2.0.19 as they required the owner to have read permission on their own project in order to use the branches panel to manage the branches.<br> this was wrong, and not what we had intended to have happen.<br> this refactoring pulls all of the individual rpc methods out of the projectadminserviceimpl into their own per-request classes, taking only their exact dependencies as injections from guice.<br> we also now use the projectcontrol everywhere to manage access.<br> branch creation and deletion checks are now performed in projectcontrol for both web and ssh interfaces.<br> this allows a user who has ssh access to create or delete branches in a project to also use the web ui, even though they are not a project owner.<br> currently the user must know (or guess) the project info page url however to gain access to the web ui if they are not listed as an owner for that project.<br> like before however, project owners do not have create or delete branch access over ssh unless they specifically grant themselves this permission.<br> this is intentional and is meant to reduce the risk of a branch being created or deleted remotely over ssh due to a typo while using "git push"<br> change-id: i2d350f870817fdf51a7db4c644c7f47ecb2f6171 signed-off-by: shawn o.<br> pearce  sop@google.<br>com 	2	-2	 7159[0] commit[0] d4aa0cc9991a25e501d8fb7e9cdcdaf0a2656ca5/d4a0cc991a25e501d8fb7e9cdcdaf0a2656ca5[0][+0.6 MultipleLetters] fix[0] project[0] owner[0] permissions[0] and[0] refactor[0] project[0] admin[0] service[0] project[0] owner[0] permission[0] were[0] slightly[0] broken[-1][--1 LastWordBoosterStrength] in[0] 2[0] .0[0] .19[0] as[0] they[0] required[0] the[0] owner[0] to[0] have[0] read[0] permission[0] on[0] their[0] own[0] project[0] in[0] order[0] to[0] use[0] the[0] branches[0] panel[0] to[0] manage[0] the[0] branches[0] [[Sentence=-1,2=word max, 1-5]] this[0] was[0] wrong[0] and[0] not[0] what[0] we[0] had[0] intended[0] to[0] have[0] happen[0] [[Sentence=-1,1=word max, 1-5]] this[0] refactoring[0] pulls[0] all[0] of[0] the[0] individual[0] rpc[0] methods[0] out[0] of[0] the[0] projectadminserviceimpl[0] into[0] their[0] own[0] per[0] request[0] classes[0] taking[0] only[0] their[0] exact[0] dependencies[0] as[0] injections[0] from[0] guice[0] [[Sentence=-1,1=word max, 1-5]] we[0] also[0] now[0] use[0] the[0] projectcontrol[0] everywhere[0] to[0] manage[0] access[0] [[Sentence=-1,1=word max, 1-5]] branch[0] creation[0] and[0] deletion[0] checks[0] are[0] now[0] performed[0] in[0] projectcontrol[0] for[0] both[0] web[0] and[0] ssh[0] interfaces[0] [[Sentence=-1,1=word max, 1-5]] this[0] allows[0] a[0] user[0] who[0] has[0] ssh[0] access[0] to[0] create[0] or[0] delete[0] branches[0] in[0] a[0] project[0] to[0] also[0] use[0] the[0] web[0] ui[0] even[0] though[0] they[0] are[0] not[0] a[0] project[0] owner[0] [[Sentence=-1,1=word max, 1-5]] currently[0] the[0] user[0] must[0] know[0] or[0] guess[0] the[0] project[0] info[0] page[0] url[0] however[0] to[0] gain[0] access[0] to[0] the[0] web[0] ui[0] if[0] they[0] are[0] not[0] listed[0] as[0] an[0] owner[0] for[0] that[0] project[0] [[Sentence=-1,1=word max, 1-5]] like[0] before[0] however[0] project[0] owners[0] do[0] not[0] have[0] create[0] or[0] delete[0] branch[0] access[0] over[0] ssh[0] unless[0] they[0] specifically[0] grant[0] themselves[0] this[0] permission[0] [[Sentence=-1,1=word max, 1-5]] this[0] is[0] intentional[0] and[0] is[0] meant[0] to[0] reduce[0] the[0] risk[-1] of[0] a[0] branch[0] being[0] created[0] or[0] deleted[0] remotely[0] over[0] ssh[0] due[0] to[0] a[0] typo[0] while[0] using[0] git[0] push[0] [[Sentence=-2,1=word max, 1-5]] change[0] id[0] i2d350f870817fdf51a7db4c644c7f47ecb2f6171[0] signed[0] off[0] by[0] shawn[0] o[0] [[Sentence=-1,1=word max, 1-5]] pearce[0] sop@google[0] [[Sentence=-1,1=word max, 1-5]] com[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
7379 commit a2f9e6e741c83b7aa8fb8180af768340fdabc7b9 refactor ssh commands to use request scoped database handle this simplifies our code considerably, as we can now rely upon our cleanup code to release the handle. signed-off-by: shawn o. pearce  sop@google.com  	7379 commit a2f9e6e741c83b7a8fb8180af768340fdabc7b9 refactor ssh commands to use request scoped database handle this simplifies our code considerably, as we can now rely upon our cleanup code to release the handle.<br> signed-off-by: shawn o.<br> pearce  sop@google.<br>com 	1	-1	 7379[0] commit[0] a2f9e6e741c83b7aa8fb8180af768340fdabc7b9/a2f9e6e741c83b7a8fb8180af768340fdabc7b9[0] refactor[0] ssh[0] commands[0] to[0] use[0] request[0] scoped[0] database[0] handle[0] this[0] simplifies[0] our[0] code[0] considerably[0] as[0] we[0] can[0] now[0] rely[0] upon[0] our[0] cleanup[0] code[0] to[0] release[0] the[0] handle[0] [[Sentence=-1,1=word max, 1-5]] signed[0] off[0] by[0] shawn[0] o[0] [[Sentence=-1,1=word max, 1-5]] pearce[0] sop@google[0] [[Sentence=-1,1=word max, 1-5]] com[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7451 commit b17bb24cccacd896642f563763967baf3f4ae029 move authentication bits out of gerritserver instead they are in authconfig, which helps to isolate all of the auth related bits away from other things like caches and database. also, we use gerritcall more often for setting up the cookie or clearing it, rather than using accountcookie's duplicated code. signed-off-by: shawn o. pearce  sop@google.com  	7451 commit b17bb24ccacd896642f563763967baf3f4ae029 move authentication bits out of gerritserver instead they are in authconfig, which helps to isolate all of the auth related bits away from other things like caches and database.<br> also, we use gerritcall more often for setting up the cookie or clearing it, rather than using accountcookie's duplicated code.<br> signed-off-by: shawn o.<br> pearce  sop@google.<br>com 	1	-2	 7451[0] commit[0] b17bb24cccacd896642f563763967baf3f4ae029/b17bb24ccacd896642f563763967baf3f4ae029[0] move[0] authentication[0] bits[0] out[0] of[0] gerritserver[0] instead[0] they[0] are[0] in[0] authconfig[0] which[0] helps[0] to[0] isolate[-1] all[0] of[0] the[0] auth[0] related[0] bits[0] away[0] from[0] other[0] things[0] like[0] caches[0] and[0] database[0] [[Sentence=-2,1=word max, 1-5]] also[0] we[0] use[0] gerritcall[0] more[0] often[0] for[0] setting[0] up[0] the[0] cookie[0] or[0] clearing[0] it[0] rather[0] than[0] using[0] accountcookie's[0] duplicated[0] code[0] [[Sentence=-1,1=word max, 1-5]] signed[0] off[0] by[0] shawn[0] o[0] [[Sentence=-1,1=word max, 1-5]] pearce[0] sop@google[0] [[Sentence=-1,1=word max, 1-5]] com[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
