Rename Class	Translation	Positive	Negative	EmotionRationale
50 commit b8397698e2834ed8af03c1bff7d570aff0e2f5bb adt: rename addcompatibilityjaraction. it's time we rename this to addsupportjaraction. this is just a rename refactoring of that class name as well as the one of compatibilitylibraryhelper. no logic is being changed. change-id: ibafe516d5c8ce30d1e4834a47d4224f0c6fd487a 	50 commit b8397698e2834ed8af03c1bff7d570aff0e2f5bb adt: rename addcompatibilityjaraction.<br> it's time we rename this to addsupportjaraction.<br> this is just a rename refactoring of that class name as well as the one of compatibilitylibraryhelper.<br> no logic is being changed.<br> change-id: ibafe516d5c8ce30d1e4834a47d4224f0c6fd487a	1	-1	 50[0] commit[0] b8397698e2834ed8af03c1bff7d570aff0e2f5bb[0] adt[0] rename[0] addcompatibilityjaraction[0] [[Sentence=-1,1=word max, 1-5]] it's[0] time[0] we[0] rename[0] this[0] to[0] addsupportjaraction[0] [[Sentence=-1,1=word max, 1-5]] this[0] is[0] just[0] a[0] rename[0] refactoring[0] of[0] that[0] class[0] name[0] as[0] well[0] as[0] the[0] one[0] of[0] compatibilitylibraryhelper[0] [[Sentence=-1,1=word max, 1-5]] no[0] logic[0] is[0] being[0] changed[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] ibafe516d5c8ce30d1e4834a47d4224f0c6fd487a[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
586 commit 87107c5cb1fb5fdafdaa94460fb6797af60fcde9 rework sdk manager support for major.minor.micro revisions. 2 things in this cl: - there's a bit of refactoring: - previewversion becomes fullversion (which is a full major.minor.micro.preview) - and i introduce a majorrevision (which is just a major number) - package.getrevision() returns one of these revision objects instead of an integer which leads to a multide of small boring changes. - changed the packagedifflogic and its test to adequately use the new revision; "tools preview" packages are placed in their own category and releases can update previews but not the reverse. change-id: ia80fd9a3791919e827ce0d183c0f297f0d27f2e6 	586 commit 87107c5cb1fb5fdafda94460fb6797af60fcde9 rework sdk manager support for major.<br>minor.<br>micro revisions.<br> 2 things in this cl: - there's a bit of refactoring: - previewversion becomes fullversion (which is a full major.<br>minor.<br>micro.<br>preview) - and i introduce a majorrevision (which is just a major number) - package.<br>getrevision( returns one of these revision objects instead of an integer which leads to a multide of small boring changes.<br> - changed the packagedifflogic and its test to adequately use the new revision; "tools preview" packages are placed in their own category and releases can update previews but not the reverse.<br> change-id: ia80fd9a3791919e827ce0d183c0f297f0d27f2e6	1	-2	 586[0] commit[0] 87107c5cb1fb5fdafdaa94460fb6797af60fcde9/87107c5cb1fb5fdafda94460fb6797af60fcde9[0] rework[0] sdk[0] manager[0] support[0] for[0] major[0] [[Sentence=-1,1=word max, 1-5]] minor[0] [[Sentence=-1,1=word max, 1-5]] micro[0] revisions[0] [[Sentence=-1,1=word max, 1-5]] 2[0] things[0] in[0] this[0] cl[0] there's[0] a[0] bit[0] of[0] refactoring[0] previewversion[0] becomes[0] fullversion[0] which[0] is[0] a[0] full[0] major[0] [[Sentence=-1,1=word max, 1-5]] minor[0] [[Sentence=-1,1=word max, 1-5]] micro[0] [[Sentence=-1,1=word max, 1-5]] preview[0] and[0] i[0] introduce[0] a[0] majorrevision[0] which[0] is[0] just[0] a[0] major[0] number[0] package[0] [[Sentence=-1,1=word max, 1-5]] getrevision[0] returns[0] one[0] of[0] these[0] revision[0] objects[0] instead[0] of[0] an[0] integer[0] which[0] leads[0] to[0] a[0] multide[0] of[0] small[0] boring[-1] changes[0] [[Sentence=-2,1=word max, 1-5]] changed[0] the[0] packagedifflogic[0] and[0] its[0] test[0] to[0] adequately[0] use[0] the[0] new[0] revision[0] tools[0] preview[0] packages[0] are[0] placed[0] in[0] their[0] own[0] category[0] and[0] releases[0] can[0] update[0] previews[0] but[0] not[0] the[0] reverse[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] ia80fd9a3791919e827ce0d183c0f297f0d27f2e6[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
977 commit 88124bee305697810ee441a98f5a04dad1610750 merge: d93207c c87a0a0 merge "sdkcontroller: refactor emulator   listener names" 	977 commit 88124bee305697810ee441a98f5a04dad1610750 merge: d93207c c87a0a0 merge "sdkcontroller: refactor emulator   listener names"	1	-1	 977[0] commit[0] 88124bee305697810ee441a98f5a04dad1610750[0] merge[0] d93207c[0] c87a0a0[0] merge[0] sdkcontroller[0] refactor[0] emulator[0] listener[0] names[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
984 commit c87a0a0ac401d121ddd282ca1dd03d505f7ab5af sdkcontroller: refactor emulator   listener names simple rename refactoring in the lib: - emulator    emulatorconnection - onemulatorlistener    emulatorlistener change-id: i0827b564dd7edec065c634d0860014cb0e15af35 	984 commit c87a0a0ac401d121dd282ca1dd03d505f7ab5af sdkcontroller: refactor emulator   listener names simple rename refactoring in the lib: - emulator    emulatorconnection - onemulatorlistener    emulatorlistener change-id: i0827b564dd7edec065c634d0860014cb0e15af35	1	-1	 984[0] commit[0] c87a0a0ac401d121ddd282ca1dd03d505f7ab5af/c87a0a0ac401d121dd282ca1dd03d505f7ab5af[0] sdkcontroller[0] refactor[0] emulator[0] listener[0] names[0] simple[0] rename[0] refactoring[0] in[0] the[0] lib[0] emulator[0] emulatorconnection[0] onemulatorlistener[0] emulatorlistener[0] change[0] id[0] i0827b564dd7edec065c634d0860014cb0e15af35[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
1335 commit d6124a176326169bc87cb29823ca2dc906689680 a few simple name changes this changeset contains no semantic changes, just a couple of simple refactorings: (1) rename the "lint" class to "lintdriver". "lint" is a bit generic (there's already lintclient for example), and this object was already referred to as a driver from various other api's, such as context.getdriver(). (2) rename lintrunner in eclipse to eclipselintrunner, similar to the other eclipselintclient in the same package - and to avoid confusion with lintdriver. (3) move all the lint fix inner classes inside the lintfix class out as top level classes. the class was getting really large and there's really no good reason to keep all the individual fixes as inner classes; there's already a separate lint package for them. change-id: ifc0004bfb38f8e11e33e9ddc477b6cf07ca319f2 	1335 commit d6124a176326169bc87cb29823ca2dc906689680 a few simple name changes this changeset contains no semantic changes, just a couple of simple refactorings: (1) rename the "lint" class to "lintdriver"<br> "lint" is a bit generic (there's already lintclient for example) and this object was already referred to as a driver from various other api's, such as context.<br>getdriver(<br> (2) rename lintrunner in eclipse to eclipselintrunner, similar to the other eclipselintclient in the same package - and to avoid confusion with lintdriver.<br> (3) move all the lint fix inner classes inside the lintfix class out as top level classes.<br> the class was getting really large and there's really no good reason to keep all the individual fixes as inner classes; there's already a separate lint package for them.<br> change-id: ifc004bfb38f8e11e33e9ddc477b6cf07ca319f2	2	-2	 1335[0] commit[0] d6124a176326169bc87cb29823ca2dc906689680[0] a[0] few[0] simple[0] name[0] changes[0] this[0] changeset[0] contains[0] no[0] semantic[0] changes[0] just[0] a[0] couple[0] of[0] simple[0] refactorings[0] (1[0] rename[0] the[0] lint[0] class[0] to[0] lintdriver[0] [[Sentence=-1,1=word max, 1-5]] lint[0] is[0] a[0] bit[0] generic[0] there's[0] already[0] lintclient[0] for[0] example[0] and[0] this[0] object[0] was[0] already[0] referred[0] to[0] as[0] a[0] driver[0] from[0] various[0] other[0] api's[0] such[0] as[0] context[0] [[Sentence=-1,1=word max, 1-5]] getdriver[0] [[Sentence=-1,1=word max, 1-5]] (2[0] rename[0] lintrunner[0] in[0] eclipse[0] to[0] eclipselintrunner[0] similar[0] to[0] the[0] other[0] eclipselintclient[0] in[0] the[0] same[0] package[0] and[0] to[0] avoid[-1] confusion[-1] with[0] lintdriver[0] [[Sentence=-2,1=word max, 1-5]] (3[0] move[0] all[0] the[0] lint[0] fix[0] inner[0] classes[0] inside[0] the[0] lintfix[0] class[0] out[0] as[0] top[0] level[0] classes[0] [[Sentence=-1,1=word max, 1-5]] the[0] class[0] was[0] getting[0] really[0] large[0] and[0] there's[0] really[0] no[0] good[1] reason[0] to[0] keep[0] all[0] the[0] individual[0] fixes[0] as[0] inner[0] classes[0] there's[0] already[0] a[0] separate[0] lint[0] package[0] for[0] them[0] [[Sentence=-1,2=word max, 1-5]] change[0] id[0] ifc0004bfb38f8e11e33e9ddc477b6cf07ca319f2/ifc004bfb38f8e11e33e9ddc477b6cf07ca319f2[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
1475 commit 822f9455a9443da388572be16b48bc02f10b5047 merge: 942e457 734d947 merge "adt: refactor commonxmleditor in its own package." 	1475 commit 822f9455a9443da388572be16b48bc02f10b5047 merge: 942e457 734d947 merge "adt: refactor commonxmleditor in its own package.	1	-1	 1475[0] commit[0] 822f9455a9443da388572be16b48bc02f10b5047[0] merge[0] 942e457[0] 734d947[0] merge[0] adt[0] refactor[0] commonxmleditor[0] in[0] its[0] own[0] package[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
1476 commit 942e45774dac5f3ca8735c979d5627117e28cfea merge: 1864a92 bc08339 merge "adt: refactor editors.xml and editors.resources." 	1476 commit 942e45774dac5f3ca8735c979d5627117e28cfea merge: 1864a92 bc08339 merge "adt: refactor editors.<br>xml and editors.<br>resources.	1	-1	 1476[0] commit[0] 942e45774dac5f3ca8735c979d5627117e28cfea[0] merge[0] 1864a92[0] bc08339[0] merge[0] adt[0] refactor[0] editors[0] [[Sentence=-1,1=word max, 1-5]] xml[0] and[0] editors[0] [[Sentence=-1,1=word max, 1-5]] resources[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
1482 commit 734d947687f3f3a761f404dbb0bf3dfe8f3f5843 adt: refactor commonxmleditor in its own package. change-id: i0ee61ade9ea15335268fa313b74d9a949ecb189f 	1482 commit 734d947687f3f3a761f404dbb0bf3dfe8f3f5843 adt: refactor commonxmleditor in its own package.<br> change-id: i0ee61ade9ea15335268fa313b74d9a949ecb189f	1	-1	 1482[0] commit[0] 734d947687f3f3a761f404dbb0bf3dfe8f3f5843[0] adt[0] refactor[0] commonxmleditor[0] in[0] its[0] own[0] package[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i0ee61ade9ea15335268fa313b74d9a949ecb189f[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
1483 commit bc083393e77f8139a436683644065e396646d671 adt: refactor editors.xml and editors.resources. this renames: - xml.xmleditor to otherxml.otherxmleditor, - resources.resourceseditor to values.valueseditor the change to rename resources to values matches the folder name being /res/values. that's just a trivial refactoring with no logic change. change-id: i68bfa760f254fbbd3f2d5e3801a5092308e92f7f 	1483 commit bc083393e77f8139a436683644065e396646d671 adt: refactor editors.<br>xml and editors.<br>resources.<br> this renames: - xml.<br>xmleditor to otherxml.<br>otherxmleditor, - resources.<br>resourceseditor to values.<br>valueseditor the change to rename resources to values matches the folder name being /res/values.<br> that's just a trivial refactoring with no logic change.<br> change-id: i68bfa760f254fbbd3f2d5e3801a5092308e92f7f	2	-2	 1483[0] commit[0] bc083393e77f8139a436683644065e396646d671[0] adt[0] refactor[0] editors[0] [[Sentence=-1,1=word max, 1-5]] xml[0] and[0] editors[0] [[Sentence=-1,1=word max, 1-5]] resources[0] [[Sentence=-1,1=word max, 1-5]] this[0] renames[0] xml[0] [[Sentence=-1,1=word max, 1-5]] xmleditor[0] to[0] otherxml[0] [[Sentence=-1,1=word max, 1-5]] otherxmleditor[0] resources[0] [[Sentence=-1,1=word max, 1-5]] resourceseditor[0] to[0] values[1] [[Sentence=-1,2=word max, 1-5]] valueseditor[0] the[0] change[0] to[0] rename[0] resources[0] to[0] values[1] matches[0] the[0] folder[0] name[0] being[0] /res/values[0] [[Sentence=-1,2=word max, 1-5]] that's[0] just[0] a[0] trivial[-1] refactoring[0] with[0] no[0] logic[0] change[0] [[Sentence=-2,1=word max, 1-5]] change[0] id[0] i68bfa760f254fbbd3f2d5e3801a5092308e92f7f[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
1490 commit 6b1474d906d34115fb1fdfc406a1de237be3f89c merge: 6f3b2b2 7d7b8fb merge "adt: refactor common parts of the editordelegates." 	1490 commit 6b1474d906d34115fb1fdfc406a1de237be3f89c merge: 6f3b2b2 7d7b8fb merge "adt: refactor common parts of the editordelegates.	1	-1	 1490[0] commit[0] 6b1474d906d34115fb1fdfc406a1de237be3f89c[0] merge[0] 6f3b2b2[0] 7d7b8fb[0] merge[0] adt[0] refactor[0] common[0] parts[0] of[0] the[0] editordelegates[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
1513 commit 7d7b8fb5d49f986d0e01619829ae3f4f82df46ce adt: refactor common parts of the editordelegates. change-id: i439a81f8c05cacc257697d2cb0ac7f1e99b65439 	1513 commit 7d7b8fb5d49f986d0e01619829ae3f4f82df46ce adt: refactor common parts of the editordelegates.<br> change-id: i439a81f8c05cacc257697d2cb0ac7f1e99b65439	1	-1	 1513[0] commit[0] 7d7b8fb5d49f986d0e01619829ae3f4f82df46ce[0] adt[0] refactor[0] common[0] parts[0] of[0] the[0] editordelegates[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i439a81f8c05cacc257697d2cb0ac7f1e99b65439[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
1581 commit 581ca2e75fd638f6e95570ac54ff9e6b7b7cde84 extract positional xml parser into common and fix encoding issues the xml dom parser used by the lint cli driver (which tracks positions) is needed outside of lint, so pull it out of the lint/cli project, and refactor it such that it does not directly reference the lint position apis (but can utilize them when subclassed in lint). in addition, handle non-utf-8 file encodings. xml files can be encoded in other character sets, and can specify this via the encoding attribute in the xml prologue. until now, the cli lint runner would just read the xml file contents in using the default encoding and parse this. now there's a new utility method which takes a byte[] and infers the desired encoding and uses that to convert the byte[] into a string using the correct encoding. (we can't just pass an inputstream and let the sax parser handle this on its own because the xml parser needs to access the character stream in order to assign correct node offsets.) this code now also handles the byte order mark more cleanly. there are some new unit tests too to check the new encoding, bom and offset handling. change-id: ib0badbbe72172e3408c6d5af2413be51280a7724 	1581 commit 581ca2e75fd638f6e95570ac54ff9e6b7b7cde84 extract positional xml parser into common and fix encoding issues the xml dom parser used by the lint cli driver (which tracks positions) is needed outside of lint, so pull it out of the lint/cli project, and refactor it such that it does not directly reference the lint position apis (but can utilize them when subclassed in lint)<br> in addition, handle non-utf-8 file encodings.<br> xml files can be encoded in other character sets, and can specify this via the encoding attribute in the xml prologue.<br> until now, the cli lint runner would just read the xml file contents in using the default encoding and parse this.<br> now there's a new utility method which takes a byte[] and infers the desired encoding and uses that to convert the byte[] into a string using the correct encoding.<br> (we can't just pass an inputstream and let the sax parser handle this on its own because the xml parser needs to access the character stream in order to assign correct node offsets.<br> this code now also handles the byte order mark more cleanly.<br> there are some new unit tests too to check the new encoding, bom and offset handling.<br> change-id: ib0badbbe72172e3408c6d5af2413be51280a7724	1	-2	 1581[0] commit[0] 581ca2e75fd638f6e95570ac54ff9e6b7b7cde84[0] extract[0] positional[0] xml[0] parser[0] into[0] common[0] and[0] fix[0] encoding[0] issues[0] the[0] xml[0] dom[0] parser[0] used[0] by[0] the[0] lint[0] cli[0] driver[0] which[0] tracks[0] positions[0] is[0] needed[0] outside[0] of[0] lint[0] so[0] pull[0] it[0] out[0] of[0] the[0] lint/cli[0] project[0] and[0] refactor[0] it[0] such[0] that[0] it[0] does[0] not[0] directly[0] reference[0] the[0] lint[0] position[0] apis[0] but[0] can[0] utilize[0] them[0] when[0] subclassed[0] in[0] lint[0] [[Sentence=-1,1=word max, 1-5]] in[0] addition[0] handle[0] non[0] utf[0] -8[0] file[0] encodings[0] [[Sentence=-1,1=word max, 1-5]] xml[0] files[0] can[0] be[0] encoded[0] in[0] other[0] character[0] sets[0] and[0] can[0] specify[0] this[0] via[0] the[0] encoding[0] attribute[0] in[0] the[0] xml[0] prologue[0] [[Sentence=-1,1=word max, 1-5]] until[0] now[0] the[0] cli[0] lint[0] runner[0] would[0] just[0] read[0] the[0] xml[0] file[0] contents[0] in[0] using[0] the[0] default[-1] encoding[0] and[0] parse[0] this[0] [[Sentence=-2,1=word max, 1-5]] now[0] there's[0] a[0] new[0] utility[0] method[0] which[0] takes[0] a[0] byte[][0] and[0] infers[0] the[0] desired[0] encoding[0] and[0] uses[0] that[0] to[0] convert[0] the[0] byte[][0] into[0] a[0] string[0] using[0] the[0] correct[0] encoding[0] [[Sentence=-1,1=word max, 1-5]] we[0] can't[0] just[0] pass[0] an[0] inputstream[0] and[0] let[0] the[0] sax[0] parser[0] handle[0] this[0] on[0] its[0] own[0] because[0] the[0] xml[0] parser[0] needs[0] to[0] access[0] the[0] character[0] stream[0] in[0] order[0] to[0] assign[0] correct[0] node[0] offsets[0] [[Sentence=-1,1=word max, 1-5]] this[0] code[0] now[0] also[0] handles[0] the[0] byte[0] order[0] mark[0] more[0] cleanly[0] [[Sentence=-1,1=word max, 1-5]] there[0] are[0] some[0] new[0] unit[0] tests[0] too[0] to[0] check[0] the[0] new[0] encoding[0] bom[0] and[0] offset[0] handling[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] ib0badbbe72172e3408c6d5af2413be51280a7724[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
1713 commit 3ce45b249f898697ae82e8c6dd045966227f3438 lint infrastructure improvements this changeset fixes a bunch of issues in the infrastructure: (1) it cleans up the context class quite a bit. it had some hardcoded xml stuff in it, which is now in a separate xmlcontext class (and there will be a javacontext class in the java support cl). it also hides a bunch of public fields, cleans up some unused stuff, and introduces a couple of wrapper methods to make detector code cleaner; in particular, rather than calling context.client.report(context, ... you can now just call context.report(... and similarly there are wrappers for logging and checking for disabled issues. (2) the iparser interface is renamed to idomparser since in the next cl there will also be an ijavaparser. some other related cleanup. (3) there is now a "location.handle" interface. this allows detectors to create light-weight location holders, and later on call handle.resolve() to create a full-fledged location. this is useful when detectors don't yet know whether they'll need a location for a node, but want to store it for later in case they do. as an example, the unused resource detector creates location handles for declaration and only resolves full locations for those that are found to be unused. locations can now carry custom messages. for example, for a duplicate id error, the secondary location now contains a "original declaration here" message. and the cli and html reports now include alternate locations in the output. some other location cleanup too; using factory methods to make the code cleaner, some default implementations that can be shared, etc. (4) there's a new sdk info class intended to provide sdk information from a tool client (such as resource resolution). it currently just contains parent-view information, used for the obsoletelayoutparams detector and an upcoming cl for a viewtypedetector. (5) the detector class now provides dummy implementations for the inner-interfaces, so we no longer need the adapter classes. this makes it easy to implement the xmlscanner or javascanner interfaces without needing to also stub out a bunch of methods. change-id: i4b3aaabe51febb25b000f9086703653bea6cf7c9 	1713 commit 3ce45b249f898697ae82e8c6dd045966227f3438 lint infrastructure improvements this changeset fixes a bunch of issues in the infrastructure: (1) it cleans up the context class quite a bit.<br> it had some hardcoded xml stuff in it, which is now in a separate xmlcontext class (and there will be a javacontext class in the java support cl)<br> it also hides a bunch of public fields, cleans up some unused stuff, and introduces a couple of wrapper methods to make detector code cleaner; in particular, rather than calling context.<br>client.<br>report(context, .<br> you can now just call context.<br>report(<br> and similarly there are wrappers for logging and checking for disabled issues.<br> (2) the iparser interface is renamed to idomparser since in the next cl there will also be an ijavaparser.<br> some other related cleanup.<br> (3) there is now a "location.<br>handle" interface.<br> this allows detectors to create light-weight location holders, and later on call handle.<br>resolve( to create a full-fledged location.<br> this is useful when detectors don't yet know whether they'll need a location for a node, but want to store it for later in case they do.<br> as an example, the unused resource detector creates location handles for declaration and only resolves full locations for those that are found to be unused.<br> locations can now carry custom messages.<br> for example, for a duplicate id error, the secondary location now contains a "original declaration here" message.<br> and the cli and html reports now include alternate locations in the output.<br> some other location cleanup too; using factory methods to make the code cleaner, some default implementations that can be shared, etc.<br> (4) there's a new sdk info class intended to provide sdk information from a tool client (such as resource resolution)<br> it currently just contains parent-view information, used for the obsoletelayoutparams detector and an upcoming cl for a viewtypedetector.<br> (5) the detector class now provides dummy implementations for the inner-interfaces, so we no longer need the adapter classes.<br> this makes it easy to implement the xmlscanner or javascanner interfaces without needing to also stub out a bunch of methods.<br> change-id: i4b3abe51febb25b00f9086703653bea6cf7c9	2	-1	 1713[0] commit[0] 3ce45b249f898697ae82e8c6dd045966227f3438[0] lint[0] infrastructure[0] improvements[1] this[0] changeset[0] fixes[0] a[0] bunch[0] of[0] issues[0] in[0] the[0] infrastructure[0] (1[0] it[0] cleans[0] up[0] the[0] context[0] class[0] quite[0] a[0] bit[0] [[Sentence=-1,2=word max, 1-5]] it[0] had[0] some[0] hardcoded[0] xml[0] stuff[0] in[0] it[0] which[0] is[0] now[0] in[0] a[0] separate[0] xmlcontext[0] class[0] and[0] there[0] will[0] be[0] a[0] javacontext[0] class[0] in[0] the[0] java[0] support[0] cl[0] [[Sentence=-1,1=word max, 1-5]] it[0] also[0] hides[0] a[0] bunch[0] of[0] public[0] fields[0] cleans[0] up[0] some[0] unused[0] stuff[0] and[0] introduces[0] a[0] couple[0] of[0] wrapper[0] methods[0] to[0] make[0] detector[0] code[0] cleaner[0] in[0] particular[0] rather[0] than[0] calling[0] context[0] [[Sentence=-1,1=word max, 1-5]] client[0] [[Sentence=-1,1=word max, 1-5]] report[0] context[0] [[Sentence=-1,1=word max, 1-5]] you[0] can[0] now[0] just[0] call[0] context[0] [[Sentence=-1,1=word max, 1-5]] report[0] [[Sentence=-1,1=word max, 1-5]] and[0] similarly[0] there[0] are[0] wrappers[0] for[0] logging[0] and[0] checking[0] for[0] disabled[0] issues[0] [[Sentence=-1,1=word max, 1-5]] (2[0] the[0] iparser[0] interface[0] is[0] renamed[0] to[0] idomparser[0] since[0] in[0] the[0] next[0] cl[0] there[0] will[0] also[0] be[0] an[0] ijavaparser[0] [[Sentence=-1,1=word max, 1-5]] some[0] other[0] related[0] cleanup[0] [[Sentence=-1,1=word max, 1-5]] (3[0] there[0] is[0] now[0] a[0] location[0] [[Sentence=-1,1=word max, 1-5]] handle[0] interface[0] [[Sentence=-1,1=word max, 1-5]] this[0] allows[0] detectors[0] to[0] create[0] light[0] weight[0] location[0] holders[0] and[0] later[0] on[0] call[0] handle[0] [[Sentence=-1,1=word max, 1-5]] resolve[0] to[0] create[0] a[0] full[0] fledged[0] location[0] [[Sentence=-1,1=word max, 1-5]] this[0] is[0] useful[1] when[0] detectors[0] don't[0] yet[0] know[0] whether[0] they'll[0] need[0] a[0] location[0] for[0] a[0] node[0] but[0] want[0] to[0] store[0] it[0] for[0] later[0] in[0] case[0] they[0] do[0] [[Sentence=-1,2=word max, 1-5]] as[0] an[0] example[0] the[0] unused[0] resource[0] detector[0] creates[0] location[0] handles[0] for[0] declaration[0] and[0] only[0] resolves[1] full[0] locations[0] for[0] those[0] that[0] are[0] found[0] to[0] be[0] unused[0] [[Sentence=-1,2=word max, 1-5]] locations[0] can[0] now[0] carry[0] custom[0] messages[0] [[Sentence=-1,1=word max, 1-5]] for[0] example[0] for[0] a[0] duplicate[0] id[0] error[0] the[0] secondary[0] location[0] now[0] contains[0] a[0] original[0] declaration[0] here[0] message[0] [[Sentence=-1,1=word max, 1-5]] and[0] the[0] cli[0] and[0] html[0] reports[0] now[0] include[0] alternate[0] locations[0] in[0] the[0] output[0] [[Sentence=-1,1=word max, 1-5]] some[0] other[0] location[0] cleanup[0] too[0] using[0] factory[0] methods[0] to[0] make[0] the[0] code[0] cleaner[0] some[0] default[-1][--1 LastWordBoosterStrength] implementations[0] that[0] can[0] be[0] shared[0] etc[0] [[Sentence=-1,1=word max, 1-5]] (4[0] there's[0] a[0] new[0] sdk[0] info[0] class[0] intended[0] to[0] provide[0] sdk[0] information[0] from[0] a[0] tool[0] client[0] such[0] as[0] resource[0] resolution[0] [[Sentence=-1,1=word max, 1-5]] it[0] currently[0] just[0] contains[0] parent[0] view[0] information[0] used[0] for[0] the[0] obsoletelayoutparams[0] detector[0] and[0] an[0] upcoming[0] cl[0] for[0] a[0] viewtypedetector[0] [[Sentence=-1,1=word max, 1-5]] (5[0] the[0] detector[0] class[0] now[0] provides[0] dummy[0] implementations[0] for[0] the[0] inner[0] interfaces[0] so[0] we[0] no[0] longer[0] need[0] the[0] adapter[0] classes[0] [[Sentence=-1,1=word max, 1-5]] this[0] makes[0] it[0] easy[0] to[0] implement[0] the[0] xmlscanner[0] or[0] javascanner[0] interfaces[0] without[0] needing[0] to[0] also[0] stub[0] out[0] a[0] bunch[0] of[0] methods[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i4b3aaabe51febb25b000f9086703653bea6cf7c9/i4b3abe51febb25b00f9086703653bea6cf7c9[0][+0.6 MultipleLetters] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
3087 commit 52b554f195bbd9e6ee82b4a5c1cc3c7f4347523b split packagespage and packageloader inner classes. packagespage and packageloader have quite a number of inner classes. this splits them in separate package-protected classes, making the page source a tad shorter. this is a pure refactoring move/rename. no logic is modified. change-id: i88885aed40e34bd28de4b1ea4e1de66ea2ed89b8 	3087 commit 52b554f195bbd9e6ee82b4a5c1cc3c7f4347523b split packagespage and packageloader inner classes.<br> packagespage and packageloader have quite a number of inner classes.<br> this splits them in separate package-protected classes, making the page source a tad shorter.<br> this is a pure refactoring move/rename.<br> no logic is modified.<br> change-id: i885aed40e34bd28de4b1ea4e1de66ea2ed89b8	2	-2	 3087[0] commit[0] 52b554f195bbd9e6ee82b4a5c1cc3c7f4347523b[0] split[0] packagespage[0] and[0] packageloader[0] inner[0] classes[0] [[Sentence=-1,1=word max, 1-5]] packagespage[0] and[0] packageloader[0] have[0] quite[0] a[0] number[0] of[0] inner[0] classes[0] [[Sentence=-1,1=word max, 1-5]] this[0] splits[0] them[0] in[0] separate[0] package[0] protected[0] classes[0] making[0] the[0] page[0] source[-1] a[0] tad[0] shorter[0] [[Sentence=-2,1=word max, 1-5]] this[0] is[0] a[0] pure[0] refactoring[0] move/rename[0] [[Sentence=-1,1=word max, 1-5]] no[0] logic[0] is[0] modified[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i88885aed40e34bd28de4b1ea4e1de66ea2ed89b8/i885aed40e34bd28de4b1ea4e1de66ea2ed89b8[0][+0.6 MultipleLetters] [[Sentence=-1,2=word max, 1-5]][[[2,-2 max of sentences]]]
3302 commit 890caaaa39b983b44a528e96da046a402dff39d5 merge: c233709 8c09f35 merge "refactored monkeyrunner to use chimpchat" 	3302 commit 890ca39b983b44a528e96da046a402dff39d5 merge: c233709 8c09f35 merge "refactored monkeyrunner to use chimpchat"	2	-1	 3302[0] commit[0] 890caaaa39b983b44a528e96da046a402dff39d5/890ca39b983b44a528e96da046a402dff39d5[0][+0.6 MultipleLetters] merge[0] c233709[0] 8c09f35[0] merge[0] refactored[0] monkeyrunner[0] to[0] use[0] chimpchat[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
3325 commit 8c09f35fe02c38c18f8f7b9e0a531d6ac158476e refactored monkeyrunner to use chimpchat change-id: icbe5bcb066021d578faae43aa49b58ab1595870b 	3325 commit 8c09f35fe02c38c18f8f7b9e0a531d6ac158476e refactored monkeyrunner to use chimpchat change-id: icbe5bcb066021d578fae43a49b58ab1595870b	2	-1	 3325[0] commit[0] 8c09f35fe02c38c18f8f7b9e0a531d6ac158476e[0] refactored[0] monkeyrunner[0] to[0] use[0] chimpchat[0] change[0] id[0] icbe5bcb066021d578faae43aa49b58ab1595870b/icbe5bcb066021d578fae43a49b58ab1595870b[0][+0.6 MultipleLetters] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
3474 commit e67970189bad5e7cc04db1c41481e85c514d4397 merge: 5919901 9f5f7f1 merge "sdkmanager: refactor name of updaterwindow." 	3474 commit e67970189bad5e7cc04db1c41481e85c514d4397 merge: 5919901 9f5f7f1 merge "sdkmanager: refactor name of updaterwindow.	1	-1	 3474[0] commit[0] e67970189bad5e7cc04db1c41481e85c514d4397[0] merge[0] 5919901[0] 9f5f7f1[0] merge[0] sdkmanager[0] refactor[0] name[0] of[0] updaterwindow[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3475 commit 9f5f7f1bba88a85f9fbb827e36cbc93d4a8bb499 sdkmanager: refactor name of updaterwindow. since the sdkmanager now contains separate windows for the "sdk updater" versus the "avd manager", the various updaterwindow classes are renamed to sdkupdatewindow. we already have now a standalone avdmanagerwindow that matches this pattern. this is a pure refactoring/renaming cl with no workflow change whatsoever. change-id: i18ecb6aa33b7e9bd2294a959b371b424d03b2060 	3475 commit 9f5f7f1bba88a85f9fbb827e36cbc93d4a8bb499 sdkmanager: refactor name of updaterwindow.<br> since the sdkmanager now contains separate windows for the "sdk updater" versus the "avd manager" the various updaterwindow classes are renamed to sdkupdatewindow.<br> we already have now a standalone avdmanagerwindow that matches this pattern.<br> this is a pure refactoring/renaming cl with no workflow change whatsoever.<br> change-id: i18ecb6a33b7e9bd2294a959b371b424d03b2060	1	-1	 3475[0] commit[0] 9f5f7f1bba88a85f9fbb827e36cbc93d4a8bb499[0] sdkmanager[0] refactor[0] name[0] of[0] updaterwindow[0] [[Sentence=-1,1=word max, 1-5]] since[0] the[0] sdkmanager[0] now[0] contains[0] separate[0] windows[0] for[0] the[0] sdk[0] updater[0] versus[0] the[0] avd[0] manager[0] the[0] various[0] updaterwindow[0] classes[0] are[0] renamed[0] to[0] sdkupdatewindow[0] [[Sentence=-1,1=word max, 1-5]] we[0] already[0] have[0] now[0] a[0] standalone[0] avdmanagerwindow[0] that[0] matches[0] this[0] pattern[0] [[Sentence=-1,1=word max, 1-5]] this[0] is[0] a[0] pure[0] refactoring/renaming[0] cl[0] with[0] no[0] workflow[0] change[0] whatsoever[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i18ecb6aa33b7e9bd2294a959b371b424d03b2060/i18ecb6a33b7e9bd2294a959b371b424d03b2060[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3772 commit 9920695ea25aec4589d28c88f8874c86a6e908af separate monkeyrunner core logic refactored the monkeyrunner code to separate core logic from the jython wrapper. the core logic is now usable directly from java w/o the pollution from jython. the existing monkeyrunner classes are now just a thin and dumb wrapper atop the core. change-id: i6ef18ea92e0e9284c1fde949b4efb0e2e7170e57 	3772 commit 9920695ea25aec4589d28c88f8874c86a6e908af separate monkeyrunner core logic refactored the monkeyrunner code to separate core logic from the jython wrapper.<br> the core logic is now usable directly from java w/o the pollution from jython.<br> the existing monkeyrunner classes are now just a thin and dumb wrapper atop the core.<br> change-id: i6ef18ea92e0e9284c1fde949b4efb0e2e7170e57	1	-2	 3772[0] commit[0] 9920695ea25aec4589d28c88f8874c86a6e908af[0] separate[0] monkeyrunner[0] core[0] logic[0] refactored[0] the[0] monkeyrunner[0] code[0] to[0] separate[0] core[0] logic[0] from[0] the[0] jython[0] wrapper[0] [[Sentence=-1,1=word max, 1-5]] the[0] core[0] logic[0] is[0] now[0] usable[0] directly[0] from[0] java[0] w/o[0] the[0] pollution[-1] from[0] jython[0] [[Sentence=-2,1=word max, 1-5]] the[0] existing[0] monkeyrunner[0] classes[0] are[0] now[0] just[0] a[0] thin[0] and[0] dumb[-1] wrapper[0] atop[0] the[0] core[0] [[Sentence=-2,1=word max, 1-5]] change[0] id[0] i6ef18ea92e0e9284c1fde949b4efb0e2e7170e57[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
4633 commit 18284d7b4da35a990268f51cdab0abc3a8e6e061 merge: 77e0fde 95b17a5 merge "layoutlib api refactoring" 	4633 commit 18284d7b4da35a990268f51cdab0abc3a8e6e061 merge: 77e0fde 95b17a5 merge "layoutlib api refactoring"	1	-1	 4633[0] commit[0] 18284d7b4da35a990268f51cdab0abc3a8e6e061[0] merge[0] 77e0fde[0] 95b17a5[0] merge[0] layoutlib[0] api[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4634 commit 95b17a5e62eeeb7b38ef668508df43a1ee9e0880 layoutlib api refactoring change-id: i40abba4c4f786755c2a1c0e70df4d7bc08e2bcde 	4634 commit 95b17a5e62eeb7b38ef668508df43a1ee9e0880 layoutlib api refactoring change-id: i40abba4c4f786755c2a1c0e70df4d7bc08e2bcde	1	-1	 4634[0] commit[0] 95b17a5e62eeeb7b38ef668508df43a1ee9e0880/95b17a5e62eeb7b38ef668508df43a1ee9e0880[0] layoutlib[0] api[0] refactoring[0] change[0] id[0] i40abba4c4f786755c2a1c0e70df4d7bc08e2bcde[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4653 commit a59d9536fc130d649fba4d964636e6901b7e03e3 merge: b782d47 671d475 merge "refactor: rename palettecomposite into palettecontrol" 	4653 commit a59d9536fc130d649fba4d964636e6901b7e03e3 merge: b782d47 671d475 merge "refactor: rename palettecomposite into palettecontrol"	1	-1	 4653[0] commit[0] a59d9536fc130d649fba4d964636e6901b7e03e3[0] merge[0] b782d47[0] 671d475[0] merge[0] refactor[0] rename[0] palettecomposite[0] into[0] palettecontrol[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4654 commit 671d47558838b7c4c01b0830c251f18125fd89ce refactor: rename palettecomposite into palettecontrol change-id: i7ce573d729255a07a65857a7f17d6a1cbb7f96d8 	4654 commit 671d47558838b7c4c01b0830c251f18125fd89ce refactor: rename palettecomposite into palettecontrol change-id: i7ce573d729255a07a65857a7f17d6a1cbb7f96d8	1	-1	 4654[0] commit[0] 671d47558838b7c4c01b0830c251f18125fd89ce[0] refactor[0] rename[0] palettecomposite[0] into[0] palettecontrol[0] change[0] id[0] i7ce573d729255a07a65857a7f17d6a1cbb7f96d8[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5068 commit b293bb776f0e48674fb5f6e6a822a23011dab305 merge: 12479c5 83dba50 merge "add gesture support, marquee selection, and refactoring" 	5068 commit b293bb776f0e48674fb5f6e6a822a23011dab305 merge: 12479c5 83dba50 merge "add gesture support, marquee selection, and refactoring"	1	-1	 5068[0] commit[0] b293bb776f0e48674fb5f6e6a822a23011dab305[0] merge[0] 12479c5[0] 83dba50[0] merge[0] add[0] gesture[0] support[0] marquee[0] selection[0] and[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5072 commit 83dba505e22985fd2f9414e7c6ef14ce29d31713 add gesture support, marquee selection, and refactoring this checkin adds support for gestures and overlays. gestures are sessions of mouse/keyboard activity, and this is documented in the javadoc for the new gesture class. overlays are units of graphics, and these are documented in the overlay javadoc. the gesture architecture lets us isolate the logic for each different type of operation (marquee, resize, move, etc), and with associated overlays we don't attempt to for example paint drag feedback during a resize operation, etc. the checkin also adds marquee selection (as a second gesture, in addition to the existing drag & drop based move gesture), along with some associated changes in how the root view is treated. as part of isolating the mouse handling and painting related to gestures, painting etc., i also refactored the code quite a bit. layoutcanvas which used to be a large class has been split into a number of new classes, one for each area of responsibility: - the mouse listener and drag & drop code has been moved into a gesturemanager. (a lot of the drop handling code also came from the canvasdroplistener class.) - code related to maintaining the set of rendered views, and performing searches in the views, has been moved into a viewhierarchy class. - code related to selection has been moved into a selectionmanager. - various individual painting pieces (outline, hover, etc) have been moved into individual overlay classes such as outlineoverlay, hoveroverlay, selectionoverlay, etc. this also moved associated resource allocation and cleanup into the overlays. - new coordinate classes, controlpoint and layoutpoint, are used instead of ints and plain points to make it really clear which methods require coordinates in the layout (such as the viewhieararchy search methods) and which ones require coordinates in the canvas control (such as paint methods). there are factory methods to automatically construct the right kind of coordinate from different types of mouse events, as well as methods to convert between the two. i also tweaked the visual appearance of selection a bit more, and some other misc cleanup. change-id: i666aabdcd36720bebe406b68237e8966d985fb8f 	5072 commit 83dba505e22985fd2f9414e7c6ef14ce29d31713 add gesture support, marquee selection, and refactoring this checkin adds support for gestures and overlays.<br> gestures are sessions of mouse/keyboard activity, and this is documented in the javadoc for the new gesture class.<br> overlays are units of graphics, and these are documented in the overlay javadoc.<br> the gesture architecture lets us isolate the logic for each different type of operation (marquee, resize, move, etc) and with associated overlays we don't attempt to for example paint drag feedback during a resize operation, etc.<br> the checkin also adds marquee selection (as a second gesture, in addition to the existing drag & drop based move gesture) along with some associated changes in how the root view is treated.<br> as part of isolating the mouse handling and painting related to gestures, painting etc.<br> i also refactored the code quite a bit.<br> layoutcanvas which used to be a large class has been split into a number of new classes, one for each area of responsibility: - the mouse listener and drag & drop code has been moved into a gesturemanager.<br> (a lot of the drop handling code also came from the canvasdroplistener class.<br> - code related to maintaining the set of rendered views, and performing searches in the views, has been moved into a viewhierarchy class.<br> - code related to selection has been moved into a selectionmanager.<br> - various individual painting pieces (outline, hover, etc) have been moved into individual overlay classes such as outlineoverlay, hoveroverlay, selectionoverlay, etc.<br> this also moved associated resource allocation and cleanup into the overlays.<br> - new coordinate classes, controlpoint and layoutpoint, are used instead of ints and plain points to make it really clear which methods require coordinates in the layout (such as the viewhieararchy search methods) and which ones require coordinates in the canvas control (such as paint methods)<br> there are factory methods to automatically construct the right kind of coordinate from different types of mouse events, as well as methods to convert between the two.<br> i also tweaked the visual appearance of selection a bit more, and some other misc cleanup.<br> change-id: i66abdcd36720bebe406b68237e8966d985fb8f	2	-2	 5072[0] commit[0] 83dba505e22985fd2f9414e7c6ef14ce29d31713[0] add[0] gesture[0] support[0] marquee[0] selection[0] and[0] refactoring[0] this[0] checkin[0] adds[0] support[0] for[0] gestures[0] and[0] overlays[0] [[Sentence=-1,1=word max, 1-5]] gestures[0] are[0] sessions[0] of[0] mouse/keyboard[0] activity[0] and[0] this[0] is[0] documented[0] in[0] the[0] javadoc[0] for[0] the[0] new[0] gesture[0] class[0] [[Sentence=-1,1=word max, 1-5]] overlays[0] are[0] units[0] of[0] graphics[0] and[0] these[0] are[0] documented[0] in[0] the[0] overlay[0] javadoc[0] [[Sentence=-1,1=word max, 1-5]] the[0] gesture[0] architecture[0] lets[0] us[0] isolate[-1] the[0] logic[0] for[0] each[0] different[0] type[0] of[0] operation[0] marquee[0] resize[0] move[0] etc[0] and[0] with[0] associated[0] overlays[0] we[0] don't[0] attempt[0] to[0] for[0] example[0] paint[0] drag[0] feedback[0] during[0] a[0] resize[0] operation[0] etc[0] [[Sentence=-2,1=word max, 1-5]] the[0] checkin[0] also[0] adds[0] marquee[0] selection[0] as[0] a[0] second[0] gesture[0] in[0] addition[0] to[0] the[0] existing[0] drag[0] &[0] drop[-1] based[0] move[0] gesture[0] along[0] with[0] some[0] associated[0] changes[0] in[0] how[0] the[0] root[0] view[0] is[0] treated[0] [[Sentence=-2,1=word max, 1-5]] as[0] part[0] of[0] isolating[-1] the[0] mouse[0] handling[0] and[0] painting[0] related[0] to[0] gestures[0] painting[0] etc[0] [[Sentence=-2,1=word max, 1-5]] i[0] also[0] refactored[0] the[0] code[0] quite[0] a[0] bit[0] [[Sentence=-1,1=word max, 1-5]] layoutcanvas[0] which[0] used[0] to[0] be[0] a[0] large[0] class[0] has[0] been[0] split[0] into[0] a[0] number[0] of[0] new[0] classes[0] one[0] for[0] each[0] area[0] of[0] responsibility[0] the[0] mouse[0] listener[0] and[0] drag[0] &[0] drop[-1] code[0] has[0] been[0] moved[0] into[0] a[0] gesturemanager[0] [[Sentence=-2,1=word max, 1-5]] a[0] lot[0] of[0] the[0] drop[-1] handling[0] code[0] also[0] came[0] from[0] the[0] canvasdroplistener[0] class[0] [[Sentence=-2,1=word max, 1-5]] code[0] related[0] to[0] maintaining[0] the[0] set[0] of[0] rendered[0] views[0] and[0] performing[0] searches[0] in[0] the[0] views[0] has[0] been[0] moved[0] into[0] a[0] viewhierarchy[0] class[0] [[Sentence=-1,1=word max, 1-5]] code[0] related[0] to[0] selection[0] has[0] been[0] moved[0] into[0] a[0] selectionmanager[0] [[Sentence=-1,1=word max, 1-5]] various[0] individual[0] painting[0] pieces[0] outline[0] hover[0] etc[0] have[0] been[0] moved[0] into[0] individual[0] overlay[0] classes[0] such[0] as[0] outlineoverlay[0] hoveroverlay[0] selectionoverlay[0] etc[0] [[Sentence=-1,1=word max, 1-5]] this[0] also[0] moved[0] associated[0] resource[0] allocation[0] and[0] cleanup[0] into[0] the[0] overlays[0] [[Sentence=-1,1=word max, 1-5]] new[0] coordinate[0] classes[0] controlpoint[0] and[0] layoutpoint[0] are[0] used[0] instead[0] of[0] ints[0] and[0] plain[0] points[0] to[0] make[0] it[0] really[0] clear[0] which[0] methods[0] require[0] coordinates[0] in[0] the[0] layout[0] such[0] as[0] the[0] viewhieararchy[0] search[0] methods[0] and[0] which[0] ones[0] require[0] coordinates[0] in[0] the[0] canvas[0] control[0] such[0] as[0] paint[0] methods[0] [[Sentence=-1,1=word max, 1-5]] there[0] are[0] factory[0] methods[0] to[0] automatically[0] construct[0] the[0] right[0] kind[1] of[0] coordinate[0] from[0] different[0] types[0] of[0] mouse[0] events[0] as[0] well[0] as[0] methods[0] to[0] convert[0] between[0] the[0] two[0] [[Sentence=-1,2=word max, 1-5]] i[0] also[0] tweaked[0] the[0] visual[0] appearance[0] of[0] selection[0] a[0] bit[0] more[0] and[0] some[0] other[0] misc[0] cleanup[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i666aabdcd36720bebe406b68237e8966d985fb8f/i66abdcd36720bebe406b68237e8966d985fb8f[0][+0.6 MultipleLetters] [[Sentence=-1,2=word max, 1-5]][[[2,-2 max of sentences]]]
5496 commit dc251ccc3b44c65c30c1aedeef8d8aa486fa5b89 merge: 68ae080 59f8d50 merge "adt refactor the builders into their own package." 	5496 commit dc251cc3b44c65c30c1aedeef8d8a486fa5b89 merge: 68ae080 59f8d50 merge "adt refactor the builders into their own package.	2	-1	 5496[0] commit[0] dc251ccc3b44c65c30c1aedeef8d8aa486fa5b89/dc251cc3b44c65c30c1aedeef8d8a486fa5b89[0][+0.6 MultipleLetters] merge[0] 68ae080[0] 59f8d50[0] merge[0] adt[0] refactor[0] the[0] builders[0] into[0] their[0] own[0] package[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
5498 commit 59f8d5012426884e40b77b02a7c3274eb66019a1 adt refactor the builders into their own package. put the growing list of generic build classes into the main build package. change-id: i65d7067bb2547d7cc9b71674f4df8a6778dd8ac8 	5498 commit 59f8d5012426884e40b77b02a7c3274eb66019a1 adt refactor the builders into their own package.<br> put the growing list of generic build classes into the main build package.<br> change-id: i65d7067bb2547d7cc9b71674f4df8a6778dd8ac8	1	-1	 5498[0] commit[0] 59f8d5012426884e40b77b02a7c3274eb66019a1[0] adt[0] refactor[0] the[0] builders[0] into[0] their[0] own[0] package[0] [[Sentence=-1,1=word max, 1-5]] put[0] the[0] growing[0] list[0] of[0] generic[0] build[0] classes[0] into[0] the[0] main[0] build[0] package[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i65d7067bb2547d7cc9b71674f4df8a6778dd8ac8[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5825 commit b9a220dbb0fc481e5744417ca599176961f207b4 merge: e1da4a2 452ff02 merge "refactoring of apkbuilder to prepare for its integration into sdklib." 	5825 commit b9a220dbb0fc481e574417ca599176961f207b4 merge: e1da4a2 452ff02 merge "refactoring of apkbuilder to prepare for its integration into sdklib.	1	-1	 5825[0] commit[0] b9a220dbb0fc481e5744417ca599176961f207b4/b9a220dbb0fc481e574417ca599176961f207b4[0] merge[0] e1da4a2[0] 452ff02[0] merge[0] refactoring[0] of[0] apkbuilder[0] to[0] prepare[0] for[0] its[0] integration[0] into[0] sdklib[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5826 commit 452ff02ae286668819d1f4ca94f1ed15d2553807 refactoring of apkbuilder to prepare for its integration into sdklib. change-id: if75b9262126813769537435546be0ad4e4648ac2 	5826 commit 452ff02ae28668819d1f4ca94f1ed15d2553807 refactoring of apkbuilder to prepare for its integration into sdklib.<br> change-id: if75b9262126813769537435546be0ad4e4648ac2	1	-1	 5826[0] commit[0] 452ff02ae286668819d1f4ca94f1ed15d2553807/452ff02ae28668819d1f4ca94f1ed15d2553807[0] refactoring[0] of[0] apkbuilder[0] to[0] prepare[0] for[0] its[0] integration[0] into[0] sdklib[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] if75b9262126813769537435546be0ad4e4648ac2[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5837 commit 8468e27abead39a9c2027095965874f2386c67db merge: 006471e c4e3431 merge "adt: refactor androideditor into androidxmleditor." 	5837 commit 8468e27abead39a9c2027095965874f2386c67db merge: 006471e c4e3431 merge "adt: refactor androideditor into androidxmleditor.	1	-1	 5837[0] commit[0] 8468e27abead39a9c2027095965874f2386c67db[0] merge[0] 006471e[0] c4e3431[0] merge[0] adt[0] refactor[0] androideditor[0] into[0] androidxmleditor[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5840 commit c4e3431fab6279bf4d7a2a0a9dac79a35d457c65 adt: refactor androideditor into androidxmleditor. next we'll introduce a new androidtexteditor base class. change-id: i2cdf4c7cb7a2eec03f7c523294a14f98bfd072f8 	5840 commit c4e3431fab6279bf4d7a2a0a9dac79a35d457c65 adt: refactor androideditor into androidxmleditor.<br> next we'll introduce a new androidtexteditor base class.<br> change-id: i2cdf4c7cb7a2eec03f7c523294a14f98bfd072f8	1	-1	 5840[0] commit[0] c4e3431fab6279bf4d7a2a0a9dac79a35d457c65[0] adt[0] refactor[0] androideditor[0] into[0] androidxmleditor[0] [[Sentence=-1,1=word max, 1-5]] next[0] we'll[0] introduce[0] a[0] new[0] androidtexteditor[0] base[0] class[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i2cdf4c7cb7a2eec03f7c523294a14f98bfd072f8[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9695 commit d0b384b30ae5c034aedcedf10c541080d1d80c70 ai 144490: am: cl 144488 am: cl 144486 adt: call the extract string refactoring to create a new xml string id when selecting a string reference. original author: raphael merged from: //branches/cupcake/... original author: android-build automated import of cl 144490 	9695 commit d0b384b30ae5c034aedcedf10c541080d1d80c70 ai 14490: am: cl 14488 am: cl 14486 adt: call the extract string refactoring to create a new xml string id when selecting a string reference.<br> original author: raphael merged from: //branches/cupcake/.<br> original author: android-build automated import of cl 14490	1	-1	 9695[0] commit[0] d0b384b30ae5c034aedcedf10c541080d1d80c70[0] ai[0] 144490/14490[0] am[0] cl[0] 144488/14488[0] am[0] cl[0] 144486/14486[0] adt[0] call[0] the[0] extract[0] string[0] refactoring[0] to[0] create[0] a[0] new[0] xml[0] string[0] id[0] when[0] selecting[0] a[0] string[0] reference[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] raphael[0] merged[0] from[0] //branches/cupcake/[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] android[0] build[0] automated[0] import[0] of[0] cl[0] 144490/14490[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9697 commit 4fcaf6a92b08fa7ed2a4c868d139d138f8c281b8 ai 144486: adt: call the extract string refactoring to create a new xml string id when selecting a string reference. bug 1722971 automated import of cl 144486 	9697 commit 4fcaf6a92b08fa7ed2a4c868d139d138f8c281b8 ai 14486: adt: call the extract string refactoring to create a new xml string id when selecting a string reference.<br> bug 1722971 automated import of cl 14486	1	-1	 9697[0] commit[0] 4fcaf6a92b08fa7ed2a4c868d139d138f8c281b8[0] ai[0] 144486/14486[0] adt[0] call[0] the[0] extract[0] string[0] refactoring[0] to[0] create[0] a[0] new[0] xml[0] string[0] id[0] when[0] selecting[0] a[0] string[0] reference[0] [[Sentence=-1,1=word max, 1-5]] bug[0] 1722971[0] automated[0] import[0] of[0] cl[0] 144486/14486[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9698 commit 36936dfeeca9ff39abf49d24dd8435769908cd51 ai 144488: am: cl 144486 adt: call the extract string refactoring to create a new xml string id when selecting a string reference. original author: raphael merged from: //branches/cupcake/... automated import of cl 144488 	9698 commit 36936dfeeca9ff39abf49d24dd8435769908cd51 ai 14488: am: cl 14486 adt: call the extract string refactoring to create a new xml string id when selecting a string reference.<br> original author: raphael merged from: //branches/cupcake/.<br> automated import of cl 14488	1	-1	 9698[0] commit[0] 36936dfeeca9ff39abf49d24dd8435769908cd51[0] ai[0] 144488/14488[0] am[0] cl[0] 144486/14486[0] adt[0] call[0] the[0] extract[0] string[0] refactoring[0] to[0] create[0] a[0] new[0] xml[0] string[0] id[0] when[0] selecting[0] a[0] string[0] reference[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] raphael[0] merged[0] from[0] //branches/cupcake/[0] [[Sentence=-1,1=word max, 1-5]] automated[0] import[0] of[0] cl[0] 144488/14488[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
