Move Attribute	Translation	Positive	Negative	EmotionRationale
1713 commit 3ce45b249f898697ae82e8c6dd045966227f3438 lint infrastructure improvements this changeset fixes a bunch of issues in the infrastructure: (1) it cleans up the context class quite a bit. it had some hardcoded xml stuff in it, which is now in a separate xmlcontext class (and there will be a javacontext class in the java support cl). it also hides a bunch of public fields, cleans up some unused stuff, and introduces a couple of wrapper methods to make detector code cleaner; in particular, rather than calling context.client.report(context, ... you can now just call context.report(... and similarly there are wrappers for logging and checking for disabled issues. (2) the iparser interface is renamed to idomparser since in the next cl there will also be an ijavaparser. some other related cleanup. (3) there is now a "location.handle" interface. this allows detectors to create light-weight location holders, and later on call handle.resolve() to create a full-fledged location. this is useful when detectors don't yet know whether they'll need a location for a node, but want to store it for later in case they do. as an example, the unused resource detector creates location handles for declaration and only resolves full locations for those that are found to be unused. locations can now carry custom messages. for example, for a duplicate id error, the secondary location now contains a "original declaration here" message. and the cli and html reports now include alternate locations in the output. some other location cleanup too; using factory methods to make the code cleaner, some default implementations that can be shared, etc. (4) there's a new sdk info class intended to provide sdk information from a tool client (such as resource resolution). it currently just contains parent-view information, used for the obsoletelayoutparams detector and an upcoming cl for a viewtypedetector. (5) the detector class now provides dummy implementations for the inner-interfaces, so we no longer need the adapter classes. this makes it easy to implement the xmlscanner or javascanner interfaces without needing to also stub out a bunch of methods. change-id: i4b3aaabe51febb25b000f9086703653bea6cf7c9 	1713 commit 3ce45b249f898697ae82e8c6dd045966227f3438 lint infrastructure improvements this changeset fixes a bunch of issues in the infrastructure: (1) it cleans up the context class quite a bit.<br> it had some hardcoded xml stuff in it, which is now in a separate xmlcontext class (and there will be a javacontext class in the java support cl)<br> it also hides a bunch of public fields, cleans up some unused stuff, and introduces a couple of wrapper methods to make detector code cleaner; in particular, rather than calling context.<br>client.<br>report(context, .<br> you can now just call context.<br>report(<br> and similarly there are wrappers for logging and checking for disabled issues.<br> (2) the iparser interface is renamed to idomparser since in the next cl there will also be an ijavaparser.<br> some other related cleanup.<br> (3) there is now a "location.<br>handle" interface.<br> this allows detectors to create light-weight location holders, and later on call handle.<br>resolve( to create a full-fledged location.<br> this is useful when detectors don't yet know whether they'll need a location for a node, but want to store it for later in case they do.<br> as an example, the unused resource detector creates location handles for declaration and only resolves full locations for those that are found to be unused.<br> locations can now carry custom messages.<br> for example, for a duplicate id error, the secondary location now contains a "original declaration here" message.<br> and the cli and html reports now include alternate locations in the output.<br> some other location cleanup too; using factory methods to make the code cleaner, some default implementations that can be shared, etc.<br> (4) there's a new sdk info class intended to provide sdk information from a tool client (such as resource resolution)<br> it currently just contains parent-view information, used for the obsoletelayoutparams detector and an upcoming cl for a viewtypedetector.<br> (5) the detector class now provides dummy implementations for the inner-interfaces, so we no longer need the adapter classes.<br> this makes it easy to implement the xmlscanner or javascanner interfaces without needing to also stub out a bunch of methods.<br> change-id: i4b3abe51febb25b00f9086703653bea6cf7c9	2	-1	 1713[0] commit[0] 3ce45b249f898697ae82e8c6dd045966227f3438[0] lint[0] infrastructure[0] improvements[1] this[0] changeset[0] fixes[0] a[0] bunch[0] of[0] issues[0] in[0] the[0] infrastructure[0] (1[0] it[0] cleans[0] up[0] the[0] context[0] class[0] quite[0] a[0] bit[0] [[Sentence=-1,2=word max, 1-5]] it[0] had[0] some[0] hardcoded[0] xml[0] stuff[0] in[0] it[0] which[0] is[0] now[0] in[0] a[0] separate[0] xmlcontext[0] class[0] and[0] there[0] will[0] be[0] a[0] javacontext[0] class[0] in[0] the[0] java[0] support[0] cl[0] [[Sentence=-1,1=word max, 1-5]] it[0] also[0] hides[0] a[0] bunch[0] of[0] public[0] fields[0] cleans[0] up[0] some[0] unused[0] stuff[0] and[0] introduces[0] a[0] couple[0] of[0] wrapper[0] methods[0] to[0] make[0] detector[0] code[0] cleaner[0] in[0] particular[0] rather[0] than[0] calling[0] context[0] [[Sentence=-1,1=word max, 1-5]] client[0] [[Sentence=-1,1=word max, 1-5]] report[0] context[0] [[Sentence=-1,1=word max, 1-5]] you[0] can[0] now[0] just[0] call[0] context[0] [[Sentence=-1,1=word max, 1-5]] report[0] [[Sentence=-1,1=word max, 1-5]] and[0] similarly[0] there[0] are[0] wrappers[0] for[0] logging[0] and[0] checking[0] for[0] disabled[0] issues[0] [[Sentence=-1,1=word max, 1-5]] (2[0] the[0] iparser[0] interface[0] is[0] renamed[0] to[0] idomparser[0] since[0] in[0] the[0] next[0] cl[0] there[0] will[0] also[0] be[0] an[0] ijavaparser[0] [[Sentence=-1,1=word max, 1-5]] some[0] other[0] related[0] cleanup[0] [[Sentence=-1,1=word max, 1-5]] (3[0] there[0] is[0] now[0] a[0] location[0] [[Sentence=-1,1=word max, 1-5]] handle[0] interface[0] [[Sentence=-1,1=word max, 1-5]] this[0] allows[0] detectors[0] to[0] create[0] light[0] weight[0] location[0] holders[0] and[0] later[0] on[0] call[0] handle[0] [[Sentence=-1,1=word max, 1-5]] resolve[0] to[0] create[0] a[0] full[0] fledged[0] location[0] [[Sentence=-1,1=word max, 1-5]] this[0] is[0] useful[1] when[0] detectors[0] don't[0] yet[0] know[0] whether[0] they'll[0] need[0] a[0] location[0] for[0] a[0] node[0] but[0] want[0] to[0] store[0] it[0] for[0] later[0] in[0] case[0] they[0] do[0] [[Sentence=-1,2=word max, 1-5]] as[0] an[0] example[0] the[0] unused[0] resource[0] detector[0] creates[0] location[0] handles[0] for[0] declaration[0] and[0] only[0] resolves[1] full[0] locations[0] for[0] those[0] that[0] are[0] found[0] to[0] be[0] unused[0] [[Sentence=-1,2=word max, 1-5]] locations[0] can[0] now[0] carry[0] custom[0] messages[0] [[Sentence=-1,1=word max, 1-5]] for[0] example[0] for[0] a[0] duplicate[0] id[0] error[0] the[0] secondary[0] location[0] now[0] contains[0] a[0] original[0] declaration[0] here[0] message[0] [[Sentence=-1,1=word max, 1-5]] and[0] the[0] cli[0] and[0] html[0] reports[0] now[0] include[0] alternate[0] locations[0] in[0] the[0] output[0] [[Sentence=-1,1=word max, 1-5]] some[0] other[0] location[0] cleanup[0] too[0] using[0] factory[0] methods[0] to[0] make[0] the[0] code[0] cleaner[0] some[0] default[-1][--1 LastWordBoosterStrength] implementations[0] that[0] can[0] be[0] shared[0] etc[0] [[Sentence=-1,1=word max, 1-5]] (4[0] there's[0] a[0] new[0] sdk[0] info[0] class[0] intended[0] to[0] provide[0] sdk[0] information[0] from[0] a[0] tool[0] client[0] such[0] as[0] resource[0] resolution[0] [[Sentence=-1,1=word max, 1-5]] it[0] currently[0] just[0] contains[0] parent[0] view[0] information[0] used[0] for[0] the[0] obsoletelayoutparams[0] detector[0] and[0] an[0] upcoming[0] cl[0] for[0] a[0] viewtypedetector[0] [[Sentence=-1,1=word max, 1-5]] (5[0] the[0] detector[0] class[0] now[0] provides[0] dummy[0] implementations[0] for[0] the[0] inner[0] interfaces[0] so[0] we[0] no[0] longer[0] need[0] the[0] adapter[0] classes[0] [[Sentence=-1,1=word max, 1-5]] this[0] makes[0] it[0] easy[0] to[0] implement[0] the[0] xmlscanner[0] or[0] javascanner[0] interfaces[0] without[0] needing[0] to[0] also[0] stub[0] out[0] a[0] bunch[0] of[0] methods[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i4b3aaabe51febb25b000f9086703653bea6cf7c9/i4b3abe51febb25b00f9086703653bea6cf7c9[0][+0.6 MultipleLetters] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
1945 commit 8027fad9680e1622d7c70be330422d6b11fc6c88 more lint checks: translation, i18n, proguard, gridlayout, "px" this changeset adds more lint checks: (1) translation. it looks at all the string values in the application, and if there are discrepancies (where a translatable string is not defined in all provided languages and regions) then these are listed. (2) internationalization. it looks for text: and contentdescription: attributes and ensures that these refer to @string resources, not hardcoded string values. this lint warning also has an associated quickfix when shown in eclipse which invokes the extract string refactoring wizard on the right selection context. (3) proguard. it looks for the old (broken) patterns we had in older proguard.cfg files (-keepclasseswithmembernames instead of -keepclasseswithmembers which implies shrinking.) (4) gridlayout. it looks at the layout constraints provided on views in a gridlayout and ensures that they fall within the overall dimensions of the grid. (5) "px" usage. it looks for dimensions using "px" as a unit and recommends switching to dp instead. this lint warning also has a quickfix in eclipse which pops up a dialog asking for the screen density and then converts the px value to the right dp value and changes the unit. (6) textfields. it looks at edittexts and makes sure they either set inputtype, hint or inputmethod. there's a quickfix in eclipse for setting the inputtype, which adds the property and automatically invokes content assist for showing the possible values. this changeset also adds some quick fixes for a few existing lint warnings: (7) accessibility: insert a content description attribute, front the editor and select the placeholder value. (8) useless leaf layout: remove the leaf layout (9) useless middle layout: invoke the remove container visual refactoring 10) inefficient linear layout weights: change the attribute to 0dp plus unit tests. change-id: iebd7b23224a898bd1851abd578460019aee44df5 	1945 commit 8027fad9680e1622d7c70be330422d6b11fc6c88 more lint checks: translation, i18n, proguard, gridlayout, "px" this changeset adds more lint checks: (1) translation.<br> it looks at all the string values in the application, and if there are discrepancies (where a translatable string is not defined in all provided languages and regions) then these are listed.<br> (2) internationalization.<br> it looks for text: and contentdescription: attributes and ensures that these refer to @string resources, not hardcoded string values.<br> this lint warning also has an associated quickfix when shown in eclipse which invokes the extract string refactoring wizard on the right selection context.<br> (3) proguard.<br> it looks for the old (broken) patterns we had in older proguard.<br>cfg files (keepclasseswithmembernames instead of -keepclasseswithmembers which implies shrinking.<br> (4) gridlayout.<br> it looks at the layout constraints provided on views in a gridlayout and ensures that they fall within the overall dimensions of the grid.<br> (5) "px" usage.<br> it looks for dimensions using "px" as a unit and recommends switching to dp instead.<br> this lint warning also has a quickfix in eclipse which pops up a dialog asking for the screen density and then converts the px value to the right dp value and changes the unit.<br> (6) textfields.<br> it looks at edittexts and makes sure they either set inputtype, hint or inputmethod.<br> there's a quickfix in eclipse for setting the inputtype, which adds the property and automatically invokes content assist for showing the possible values.<br> this changeset also adds some quick fixes for a few existing lint warnings: (7) accessibility: insert a content description attribute, front the editor and select the placeholder value.<br> (8) useless leaf layout: remove the leaf layout (9) useless middle layout: invoke the remove container visual refactoring 10) inefficient linear layout weights: change the attribute to 0dp plus unit tests.<br> change-id: iebd7b23224a898bd1851abd578460019aee44df5	2	-3	 1945[0] commit[0] 8027fad9680e1622d7c70be330422d6b11fc6c88[0] more[0] lint[0] checks[0] translation[0] i18n[0] proguard[0] gridlayout[0] px[0] this[0] changeset[0] adds[0] more[0] lint[0] checks[0] (1[0] translation[0] [[Sentence=-1,1=word max, 1-5]] it[0] looks[0] at[0] all[0] the[0] string[0] values[1] in[0] the[0] application[0] and[0] if[0] there[0] are[0] discrepancies[0] where[0] a[0] translatable[0] string[0] is[0] not[0] defined[0] in[0] all[0] provided[0] languages[0] and[0] regions[0] then[0] these[0] are[0] listed[0] [[Sentence=-1,2=word max, 1-5]] (2[0] internationalization[0] [[Sentence=-1,1=word max, 1-5]] it[0] looks[0] for[0] text[0] and[0] contentdescription[0] attributes[0] and[0] ensures[0] that[0] these[0] refer[0] to[0] @string[0] resources[0] not[0] hardcoded[0] string[0] values[1] [[Sentence=-1,2=word max, 1-5]] this[0] lint[0] warning[0] also[0] has[0] an[0] associated[0] quickfix[0] when[0] shown[0] in[0] eclipse[0] which[0] invokes[0] the[0] extract[0] string[0] refactoring[0] wizard[0] on[0] the[0] right[0] selection[0] context[0] [[Sentence=-1,1=word max, 1-5]] (3[0] proguard[0] [[Sentence=-1,1=word max, 1-5]] it[0] looks[0] for[0] the[0] old[0] broken[-1] patterns[0] we[0] had[0] in[0] older[0] proguard[0] [[Sentence=-2,1=word max, 1-5]] cfg[0] files[0] keepclasseswithmembernames[0] instead[0] of[0] keepclasseswithmembers[0] which[0] implies[0] shrinking[0] [[Sentence=-1,1=word max, 1-5]] (4[0] gridlayout[0] [[Sentence=-1,1=word max, 1-5]] it[0] looks[0] at[0] the[0] layout[0] constraints[0] provided[0] on[0] views[0] in[0] a[0] gridlayout[0] and[0] ensures[0] that[0] they[0] fall[0] within[0] the[0] overall[0] dimensions[0] of[0] the[0] grid[0] [[Sentence=-1,1=word max, 1-5]] (5[0] px[0] usage[0] [[Sentence=-1,1=word max, 1-5]] it[0] looks[0] for[0] dimensions[0] using[0] px[0] as[0] a[0] unit[0] and[0] recommends[0] switching[0] to[0] dp[0] instead[0] [[Sentence=-1,1=word max, 1-5]] this[0] lint[0] warning[0] also[0] has[0] a[0] quickfix[0] in[0] eclipse[0] which[0] pops[0] up[0] a[0] dialog[0] asking[0] for[0] the[0] screen[0] density[0] and[0] then[0] converts[0] the[0] px[0] value[0] to[0] the[0] right[0] dp[0] value[0] and[0] changes[0] the[0] unit[0] [[Sentence=-1,1=word max, 1-5]] (6[0] textfields[0] [[Sentence=-1,1=word max, 1-5]] it[0] looks[0] at[0] edittexts[0] and[0] makes[0] sure[0] they[0] either[0] set[0] inputtype[0] hint[0] or[0] inputmethod[0] [[Sentence=-1,1=word max, 1-5]] there's[0] a[0] quickfix[0] in[0] eclipse[0] for[0] setting[0] the[0] inputtype[0] which[0] adds[0] the[0] property[0] and[0] automatically[0] invokes[0] content[0] assist[0] for[0] showing[0] the[0] possible[0] values[1] [[Sentence=-1,2=word max, 1-5]] this[0] changeset[0] also[0] adds[0] some[0] quick[0] fixes[0] for[0] a[0] few[0] existing[0] lint[0] warnings[0] (7[0] accessibility[0] insert[0] a[0] content[0] description[0] attribute[0] front[0] the[0] editor[0] and[0] select[0] the[0] placeholder[0] value[0] [[Sentence=-1,1=word max, 1-5]] (8[0] useless[-2] leaf[0] layout[0] remove[0] the[0] leaf[0] layout[0] (9[0] useless[-2] middle[0] layout[0] invoke[0] the[0] remove[0] container[0] visual[0] refactoring[0] 10[0] inefficient[0] linear[0] layout[0] weights[0] change[0] the[0] attribute[0] to[0] 0dp[0] plus[0] unit[0] tests[0] [[Sentence=-3,1=word max, 1-5]] change[0] id[0] iebd7b23224a898bd1851abd578460019aee44df5[0] [[Sentence=-1,1=word max, 1-5]][[[2,-3 max of sentences]]]
5499 commit 3d3c3c3a3e4e05f7ae7a0dff440fe500f90b785c adt: make release and debug builds really different. release export should not be debug builds that are stripped of their signature and (optionnaly) resigned. instead they should actually build the apk in "release" mode. refactor postcompilerhelper to be easier to use for export feature (moved all error handling into the actual incrementalbuilder since we don't want the helper to put error/warning marker during release export). update the api of apkbuilder and postcompilerhelper to deal better with signing key: - option to package with a "sign with debug" flag. - new option to package/sign with given keys. debug build (through incremental builder) use the new aapt option --debug-mode that automatically insert debuggable true in the manifest. this allows for the same source code to generate debug and release builds. currently, only the "export unsigned release apk" action use the new "release" build. need to update the export wizard. also need to add support for this in ant. new folder in sdk.git/testapps for test projects to be used in upcoming automated build tests. simple "basicproject" to start with. change-id: i3041312bc817153603656de2aa355f8fcaf00b5b 	5499 commit 3d3c3c3a3e4e05f7ae7a0dff440fe500f90b785c adt: make release and debug builds really different.<br> release export should not be debug builds that are stripped of their signature and (optionnaly) resigned.<br> instead they should actually build the apk in "release" mode.<br> refactor postcompilerhelper to be easier to use for export feature (moved all error handling into the actual incrementalbuilder since we don't want the helper to put error/warning marker during release export)<br> update the api of apkbuilder and postcompilerhelper to deal better with signing key: - option to package with a "sign with debug" flag.<br> - new option to package/sign with given keys.<br> debug build (through incremental builder) use the new apt option -debug-mode that automatically insert debuggable true in the manifest.<br> this allows for the same source code to generate debug and release builds.<br> currently, only the "export unsigned release apk" action use the new "release" build.<br> need to update the export wizard.<br> also need to add support for this in ant.<br> new folder in sdk.<br>git/testapps for test projects to be used in upcoming automated build tests.<br> simple "basicproject" to start with.<br> change-id: i3041312bc817153603656de2a355f8fcaf00b5b	2	-2	 5499[0] commit[0] 3d3c3c3a3e4e05f7ae7a0dff440fe500f90b785c[0] adt[0] make[0] release[0] and[0] debug[0] builds[0] really[0] different[0] [[Sentence=-1,1=word max, 1-5]] release[0] export[0] should[0] not[0] be[0] debug[0] builds[0] that[0] are[0] stripped[0] of[0] their[0] signature[0] and[0] optionnaly[0] resigned[-1] [[Sentence=-2,1=word max, 1-5]] instead[0] they[0] should[0] actually[0] build[0] the[0] apk[0] in[0] release[0] mode[0] [[Sentence=-1,1=word max, 1-5]] refactor[0] postcompilerhelper[0] to[0] be[0] easier[0] to[0] use[0] for[0] export[0] feature[0] moved[0] all[0] error[0] handling[0] into[0] the[0] actual[0] incrementalbuilder[0] since[0] we[0] don't[0] want[0] the[0] helper[0] to[0] put[0] error/warning[0] marker[0] during[0] release[0] export[0] [[Sentence=-1,1=word max, 1-5]] update[0] the[0] api[0] of[0] apkbuilder[0] and[0] postcompilerhelper[0] to[0] deal[0] better[0] with[0] signing[0] key[0] option[0] to[0] package[0] with[0] a[0] sign[0] with[0] debug[0] flag[0] [[Sentence=-1,1=word max, 1-5]] new[0] option[0] to[0] package/sign[0] with[0] given[0] keys[0] [[Sentence=-1,1=word max, 1-5]] debug[0] build[0] through[0] incremental[0] builder[0] use[0] the[0] new[0] aapt/apt[0] option[0] debug[0] mode[0] that[0] automatically[0] insert[0] debuggable[0] true[1] in[0] the[0] manifest[0] [[Sentence=-1,2=word max, 1-5]] this[0] allows[0] for[0] the[0] same[0] source[-1] code[0] to[0] generate[0] debug[0] and[0] release[0] builds[0] [[Sentence=-2,1=word max, 1-5]] currently[0] only[0] the[0] export[0] unsigned[0] release[0] apk[0] action[0] use[0] the[0] new[0] release[0] build[0] [[Sentence=-1,1=word max, 1-5]] need[0] to[0] update[0] the[0] export[0] wizard[0] [[Sentence=-1,1=word max, 1-5]] also[0] need[0] to[0] add[0] support[0] for[0] this[0] in[0] ant[0] [[Sentence=-1,1=word max, 1-5]] new[0] folder[0] in[0] sdk[0] [[Sentence=-1,1=word max, 1-5]] git/testapps[0] for[0] test[0] projects[0] to[0] be[0] used[0] in[0] upcoming[0] automated[0] build[0] tests[0] [[Sentence=-1,1=word max, 1-5]] simple[0] basicproject[0] to[0] start[0] with[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i3041312bc817153603656de2aa355f8fcaf00b5b/i3041312bc817153603656de2a355f8fcaf00b5b[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
5567 commit 99bd6912e7b5b97fc6d4bb787e76b2d9dfffd7ae refactoring and integrating into eclipse change-id: i1fd3c3828fb2474f2f7394ee2831fcd7eb675878 	5567 commit 99bd6912e7b5b97fc6d4bb787e76b2d9dffd7ae refactoring and integrating into eclipse change-id: i1fd3c3828fb2474f2f7394ee2831fcd7eb675878	1	-1	 5567[0] commit[0] 99bd6912e7b5b97fc6d4bb787e76b2d9dfffd7ae/99bd6912e7b5b97fc6d4bb787e76b2d9dffd7ae[0] refactoring[0] and[0] integrating[0] into[0] eclipse[0] change[0] id[0] i1fd3c3828fb2474f2f7394ee2831fcd7eb675878[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5920 commit d5579c79e7dcb1eda9835f5a2c7299be7eab28b0 refactored the android manifest into sdklib. api change to make it use ifilewrapper instead of ifile. old androidmanifestparser changed to androidmanifesthelper which is now mostly wrapper methods to add eclipse specific parameters. also moved adt...androidconstants.class_* to sdklib...sdkconstants (needed by the parser) and removed androidconstants.fn_android_manifest since sdkconstants.fn_android_manifest_xml existed too. moved the eclipse implementation of iabstractfile/folder change-id: i59bdbe90ba9a4c0b5bb2c4c68945b8877d4eed3d 	5920 commit d5579c79e7dcb1eda9835f5a2c7299be7eab28b0 refactored the android manifest into sdklib.<br> api change to make it use ifilewrapper instead of ifile.<br> old androidmanifestparser changed to androidmanifesthelper which is now mostly wrapper methods to add eclipse specific parameters.<br> also moved adt.<br>androidconstants.<br>class_* to sdklib.<br>sdkconstants (needed by the parser) and removed androidconstants.<br>fn_android_manifest since sdkconstants.<br>fn_android_manifest_xml existed too.<br> moved the eclipse implementation of iabstractfile/folder change-id: i59bdbe90ba9a4c0b5bb2c4c68945b8877d4eed3d	1	-1	 5920[0] commit[0] d5579c79e7dcb1eda9835f5a2c7299be7eab28b0[0] refactored[0] the[0] android[0] manifest[0] into[0] sdklib[0] [[Sentence=-1,1=word max, 1-5]] api[0] change[0] to[0] make[0] it[0] use[0] ifilewrapper[0] instead[0] of[0] ifile[0] [[Sentence=-1,1=word max, 1-5]] old[0] androidmanifestparser[0] changed[0] to[0] androidmanifesthelper[0] which[0] is[0] now[0] mostly[0] wrapper[0] methods[0] to[0] add[0] eclipse[0] specific[0] parameters[0] [[Sentence=-1,1=word max, 1-5]] also[0] moved[0] adt[0] [[Sentence=-1,1=word max, 1-5]] androidconstants[0] [[Sentence=-1,1=word max, 1-5]] class_[0] to[0] sdklib[0] [[Sentence=-1,1=word max, 1-5]] sdkconstants[0] needed[0] by[0] the[0] parser[0] and[0] removed[0] androidconstants[0] [[Sentence=-1,1=word max, 1-5]] fn_android_manifest[0] since[0] sdkconstants[0] [[Sentence=-1,1=word max, 1-5]] fn_android_manifest_xml[0] existed[0] too[0] [[Sentence=-1,1=word max, 1-5]] moved[0] the[0] eclipse[0] implementation[0] of[0] iabstractfile/folder[0] change[0] id[0] i59bdbe90ba9a4c0b5bb2c4c68945b8877d4eed3d[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7929 commit bcf38645bef192b380f0d338b263aea075cd1aeb add method profiling support to ddms. new button allows to start/stop tracing. when clicking stop, ddms downloads the trace file and starts traceview. also refactored some common parts of the hprof and tracing handlers into a common class. the goal is to have a default, extensible implementation of the hprof handler that ddms and the plug-in can reuse. this will reduce duplicated code. change-id: ifc48926c7f6f1c3ea49a4aa94053664be83cbb06 	7929 commit bcf38645bef192b380f0d338b263aea075cd1aeb add method profiling support to ddms.<br> new button allows to start/stop tracing.<br> when clicking stop, ddms downloads the trace file and starts traceview.<br> also refactored some common parts of the hprof and tracing handlers into a common class.<br> the goal is to have a default, extensible implementation of the hprof handler that ddms and the plug-in can reuse.<br> this will reduce duplicated code.<br> change-id: ifc48926c7f6f1c3ea49a4a94053664be83cbb06	1	-2	 7929[0] commit[0] bcf38645bef192b380f0d338b263aea075cd1aeb[0] add[0] method[0] profiling[0] support[0] to[0] ddms[0] [[Sentence=-1,1=word max, 1-5]] new[0] button[0] allows[0] to[0] start/stop[0] tracing[0] [[Sentence=-1,1=word max, 1-5]] when[0] clicking[0] stop[0] ddms[0] downloads[0] the[0] trace[0] file[0] and[0] starts[0] traceview[0] [[Sentence=-1,1=word max, 1-5]] also[0] refactored[0] some[0] common[0] parts[0] of[0] the[0] hprof[0] and[0] tracing[0] handlers[0] into[0] a[0] common[0] class[0] [[Sentence=-1,1=word max, 1-5]] the[0] goal[0] is[0] to[0] have[0] a[0] default[-1] extensible[0] implementation[0] of[0] the[0] hprof[0] handler[0] that[0] ddms[0] and[0] the[0] plug[0] in[0] can[0] reuse[0] [[Sentence=-2,1=word max, 1-5]] this[0] will[0] reduce[0] duplicated[0] code[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] ifc48926c7f6f1c3ea49a4aa94053664be83cbb06/ifc48926c7f6f1c3ea49a4a94053664be83cbb06[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
8852 commit c0b5d489887aadb389854ca7a5856b084abd1ef0 merge: c10c06d 69d1a9b am defc3d14: merge change 3407 into donut merge commit 'defc3d14e1b43cbab5877f9c9112b170cc61c4a5' * commit 'defc3d14e1b43cbab5877f9c9112b170cc61c4a5': sdk updater: refactor install into archive. 	8852 commit c0b5d489887adb389854ca7a5856b084abd1ef0 merge: c10c06d 69d1a9b am defc3d14: merge change 3407 into donut merge commit 'defc3d14e1b43cbab5877f9c9112b170cc61c4a5' * commit 'defc3d14e1b43cbab5877f9c9112b170cc61c4a5': sdk updater: refactor install into archive.	1	-1	 8852[0] commit[0] c0b5d489887aadb389854ca7a5856b084abd1ef0/c0b5d489887adb389854ca7a5856b084abd1ef0[0] merge[0] c10c06d[0] 69d1a9b[0] am[0] defc3d14[0] merge[0] change[0] 3407[0] into[0] donut[0] merge[0] commit[0] 'defc3d14e1b43cbab5877f9c9112b170cc61c4a5'[0] commit[0] 'defc3d14e1b43cbab5877f9c9112b170cc61c4a5'[0] sdk[0] updater[0] refactor[0] install[0] into[0] archive[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8853 commit 69d1a9b48d069fd96bf8e9102b92811a48b53541 merge: 033f001 0fc874c merge change 3407 into donut * changes: sdk updater: refactor install into archive. 	8853 commit 69d1a9b48d069fd96bf8e9102b92811a48b53541 merge: 033f001 0fc874c merge change 3407 into donut * changes: sdk updater: refactor install into archive.	1	-1	 8853[0] commit[0] 69d1a9b48d069fd96bf8e9102b92811a48b53541[0] merge[0] 033f001[0] 0fc874c[0] merge[0] change[0] 3407[0] into[0] donut[0] changes[0] sdk[0] updater[0] refactor[0] install[0] into[0] archive[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8866 commit 0fc874ce466821f764ae67e490b5ca93cc608df5 sdk updater: refactor install into archive. 	8866 commit 0fc874ce466821f764ae67e490b5ca93cc608df5 sdk updater: refactor install into archive.	1	-1	 8866[0] commit[0] 0fc874ce466821f764ae67e490b5ca93cc608df5[0] sdk[0] updater[0] refactor[0] install[0] into[0] archive[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9710 commit 45299317fe7d0dbfca0c5811fe1248d92b1a986f ai 144402: am: cl 144284 am: cl 144283 adt: enhance resource chooser with ability to create new xml strings. that's a first pass. there's a fair bit of refactoring involved, so it's split in two cls. next cl will add more functionality. original author: raphael merged from: //branches/cupcake/... original author: android-build automated import of cl 144402 	9710 commit 45299317fe7d0dbfca0c5811fe1248d92b1a986f ai 14402: am: cl 144284 am: cl 144283 adt: enhance resource chooser with ability to create new xml strings.<br> that's a first pass.<br> there's a fair bit of refactoring involved, so it's split in two cls.<br> next cl will add more functionality.<br> original author: raphael merged from: //branches/cupcake/.<br> original author: android-build automated import of cl 14402	1	-1	 9710[0] commit[0] 45299317fe7d0dbfca0c5811fe1248d92b1a986f[0] ai[0] 144402/14402[0] am[0] cl[0] 144284[0] am[0] cl[0] 144283[0] adt[0] enhance[0] resource[0] chooser[0] with[0] ability[0] to[0] create[0] new[0] xml[0] strings[0] [[Sentence=-1,1=word max, 1-5]] that's[0] a[0] first[0] pass[0] [[Sentence=-1,1=word max, 1-5]] there's[0] a[0] fair[0] bit[0] of[0] refactoring[0] involved[0] so[0] it's[0] split[0] in[0] two[0] cls[0] [[Sentence=-1,1=word max, 1-5]] next[0] cl[0] will[0] add[0] more[0] functionality[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] raphael[0] merged[0] from[0] //branches/cupcake/[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] android[0] build[0] automated[0] import[0] of[0] cl[0] 144402/14402[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9724 commit 1d4c7481b53214effc069d4269c4c17f888ff43f ai 144284: am: cl 144283 adt: enhance resource chooser with ability to create new xml strings. that's a first pass. there's a fair bit of refactoring involved, so it's split in two cls. next cl will add more functionality. original author: raphael merged from: //branches/cupcake/... automated import of cl 144284 	9724 commit 1d4c7481b53214effc069d4269c4c17f88ff43f ai 144284: am: cl 144283 adt: enhance resource chooser with ability to create new xml strings.<br> that's a first pass.<br> there's a fair bit of refactoring involved, so it's split in two cls.<br> next cl will add more functionality.<br> original author: raphael merged from: //branches/cupcake/.<br> automated import of cl 144284	1	-1	 9724[0] commit[0] 1d4c7481b53214effc069d4269c4c17f888ff43f/1d4c7481b53214effc069d4269c4c17f88ff43f[0] ai[0] 144284[0] am[0] cl[0] 144283[0] adt[0] enhance[0] resource[0] chooser[0] with[0] ability[0] to[0] create[0] new[0] xml[0] strings[0] [[Sentence=-1,1=word max, 1-5]] that's[0] a[0] first[0] pass[0] [[Sentence=-1,1=word max, 1-5]] there's[0] a[0] fair[0] bit[0] of[0] refactoring[0] involved[0] so[0] it's[0] split[0] in[0] two[0] cls[0] [[Sentence=-1,1=word max, 1-5]] next[0] cl[0] will[0] add[0] more[0] functionality[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] raphael[0] merged[0] from[0] //branches/cupcake/[0] [[Sentence=-1,1=word max, 1-5]] automated[0] import[0] of[0] cl[0] 144284[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9725 commit b6ae62d621b3ce744727fb4cac7e6ae79b524657 ai 144283: adt: enhance resource chooser with ability to create new xml strings. that's a first pass. there's a fair bit of refactoring involved, so it's split in two cls. next cl will add more functionality. bug 1722971 automated import of cl 144283 	9725 commit b6ae62d621b3ce744727fb4cac7e6ae79b524657 ai 144283: adt: enhance resource chooser with ability to create new xml strings.<br> that's a first pass.<br> there's a fair bit of refactoring involved, so it's split in two cls.<br> next cl will add more functionality.<br> bug 1722971 automated import of cl 144283	1	-1	 9725[0] commit[0] b6ae62d621b3ce744727fb4cac7e6ae79b524657[0] ai[0] 144283[0] adt[0] enhance[0] resource[0] chooser[0] with[0] ability[0] to[0] create[0] new[0] xml[0] strings[0] [[Sentence=-1,1=word max, 1-5]] that's[0] a[0] first[0] pass[0] [[Sentence=-1,1=word max, 1-5]] there's[0] a[0] fair[0] bit[0] of[0] refactoring[0] involved[0] so[0] it's[0] split[0] in[0] two[0] cls[0] [[Sentence=-1,1=word max, 1-5]] next[0] cl[0] will[0] add[0] more[0] functionality[0] [[Sentence=-1,1=word max, 1-5]] bug[0] 1722971[0] automated[0] import[0] of[0] cl[0] 144283[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
