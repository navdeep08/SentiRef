Extract Interface	Translation	Positive	Negative	EmotionRationale
3809 commit 9a802fd306aa12da7a5c770868ec16fb4c5621a5 merge: d7c4ca2 52188bb merge "sdk manager 2: refactor window implementation." 	3809 commit 9a802fd306a12da7a5c770868ec16fb4c5621a5 merge: d7c4ca2 52188bb merge "sdk manager 2: refactor window implementation.	1	-1	 3809[0] commit[0] 9a802fd306aa12da7a5c770868ec16fb4c5621a5/9a802fd306a12da7a5c770868ec16fb4c5621a5[0] merge[0] d7c4ca2[0] 52188bb[0] merge[0] sdk[0] manager[0] 2[0] refactor[0] window[0] implementation[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3826 commit 52188bba8b3c61e9aafd5b0da4c173209a480d4e sdk manager 2: refactor window implementation. the previous patch based the implementation of the new window on top of the old updaterwindowimpl. although that works since there are many things in common, in practice the goal is to get rid of the old one eventually so it's easier to not add a dependency that needs to be removed later. change-id: ic1eac19dcc7e91d6750b7462eb2d28b447acad3a 	3826 commit 52188bba8b3c61e9afd5b0da4c173209a480d4e sdk manager 2: refactor window implementation.<br> the previous patch based the implementation of the new window on top of the old updaterwindowimpl.<br> although that works since there are many things in common, in practice the goal is to get rid of the old one eventually so it's easier to not add a dependency that needs to be removed later.<br> change-id: ic1eac19dcc7e91d6750b7462eb2d28b447acad3a	1	-2	 3826[0] commit[0] 52188bba8b3c61e9aafd5b0da4c173209a480d4e/52188bba8b3c61e9afd5b0da4c173209a480d4e[0] sdk[0] manager[0] 2[0] refactor[0] window[0] implementation[0] [[Sentence=-1,1=word max, 1-5]] the[0] previous[0] patch[0] based[0] the[0] implementation[0] of[0] the[0] new[0] window[0] on[0] top[0] of[0] the[0] old[0] updaterwindowimpl[0] [[Sentence=-1,1=word max, 1-5]] although[0] that[0] works[0] since[0] there[0] are[0] many[0] things[0] in[0] common[0] in[0] practice[0] the[0] goal[0] is[0] to[0] get[0] rid[-1] of[0] the[0] old[0] one[0] eventually[0] so[0] it's[0] easier[0] to[0] not[0] add[0] a[0] dependency[0] that[0] needs[0] to[0] be[0] removed[0] later[0] [[Sentence=-2,1=word max, 1-5]] change[0] id[0] ic1eac19dcc7e91d6750b7462eb2d28b447acad3a[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
3998 commit 57eb998efcd6031d01fc441ed0bd8b09c30b78c0 merge: 3a66185 da02c18 merge "resource management refactoring and clean-up." 	3998 commit 57eb998efcd6031d01fc441ed0bd8b09c30b78c0 merge: 3a66185 da02c18 merge "resource management refactoring and clean-up.	1	-1	 3998[0] commit[0] 57eb998efcd6031d01fc441ed0bd8b09c30b78c0[0] merge[0] 3a66185[0] da02c18[0] merge[0] resource[0] management[0] refactoring[0] and[0] clean[0] up[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4007 commit da02c18ad5b54d97a1fcfd5f6633062b0c873c22 resource management refactoring and clean-up. - (i)resourcerepository is now a common class instead of an interface. this contains most of the code to control a repository (which was extracted from projectresources) projectresources extends it adding minor features such as library support, and inline id definition. frameworkresources extends it adding support for public resources (which used to be duplicated and dispersed in weird places). changed the way resources are reloaded on resource change event. instead of marking the resources as modified (using resource.touch()), the resources are now parsed as the files are processed during the resource delta visitor. this makes more sense as there are now other listeners to the resource changes (hyperlinks) that access the resource list in their listeners, which wouldn't work previously. this also makes the code cleaner as the previous method had to query the repo for items and return a list of new ones, which was kinda crappy. the new code is much simpler, as is the post update process. - resourceitem is now the base class for resource items. it includes all the small methods that were added by all the child classes or interfaces. project/configurableresourceitem are merged into the based class. iidresourceitem and idresourceitem are gone and replaced by a simpler inlineresourceitem. frameworkresourceitem is a simple override for framework resources. - also improved the api of a bit for the resource repository, making more use of unmodifiable lists and emptylist/map() change-id: ie3ac1995213fed66153c7e7ecbdd170ec257be62 	4007 commit da02c18ad5b54d97a1fcfd5f6633062b0c873c22 resource management refactoring and clean-up.<br> - (i)resourcerepository is now a common class instead of an interface.<br> this contains most of the code to control a repository (which was extracted from projectresources) projectresources extends it adding minor features such as library support, and inline id definition.<br> frameworkresources extends it adding support for public resources (which used to be duplicated and dispersed in weird places)<br> changed the way resources are reloaded on resource change event.<br> instead of marking the resources as modified (using resource.<br>touch( the resources are now parsed as the files are processed during the resource delta visitor.<br> this makes more sense as there are now other listeners to the resource changes (hyperlinks) that access the resource list in their listeners, which wouldn't work previously.<br> this also makes the code cleaner as the previous method had to query the repo for items and return a list of new ones, which was kinda crappy.<br> the new code is much simpler, as is the post update process.<br> - resourceitem is now the base class for resource items.<br> it includes all the small methods that were added by all the child classes or interfaces.<br> project/configurableresourceitem are merged into the based class.<br> idresourceitem and idresourceitem are gone and replaced by a simpler inlineresourceitem.<br> frameworkresourceitem is a simple override for framework resources.<br> - also improved the api of a bit for the resource repository, making more use of unmodifiable lists and emptylist/map( change-id: ie3ac1995213fed66153c7e7ecbdd170ec257be62	2	-3	 4007[0] commit[0] da02c18ad5b54d97a1fcfd5f6633062b0c873c22[0] resource[0] management[0] refactoring[0] and[0] clean[0] up[0] [[Sentence=-1,1=word max, 1-5]] i[0] resourcerepository[0] is[0] now[0] a[0] common[0] class[0] instead[0] of[0] an[0] interface[0] [[Sentence=-1,1=word max, 1-5]] this[0] contains[0] most[0] of[0] the[0] code[0] to[0] control[0] a[0] repository[0] which[0] was[0] extracted[0] from[0] projectresources[0] projectresources[0] extends[0] it[0] adding[0] minor[0] features[0] such[0] as[0] library[0] support[0] and[0] inline[0] id[0] definition[0] [[Sentence=-1,1=word max, 1-5]] frameworkresources[0] extends[0] it[0] adding[0] support[0] for[0] public[0] resources[0] which[0] used[0] to[0] be[0] duplicated[0] and[0] dispersed[0] in[0] weird[-1] places[0] [[Sentence=-2,1=word max, 1-5]] changed[0] the[0] way[0] resources[0] are[0] reloaded[0] on[0] resource[0] change[0] event[0] [[Sentence=-1,1=word max, 1-5]] instead[0] of[0] marking[0] the[0] resources[0] as[0] modified[0] using[0] resource[0] [[Sentence=-1,1=word max, 1-5]] touch[0] the[0] resources[0] are[0] now[0] parsed[0] as[0] the[0] files[0] are[0] processed[0] during[0] the[0] resource[0] delta[0] visitor[0] [[Sentence=-1,1=word max, 1-5]] this[0] makes[0] more[0] sense[0] as[0] there[0] are[0] now[0] other[0] listeners[0] to[0] the[0] resource[0] changes[0] hyperlinks[0] that[0] access[0] the[0] resource[0] list[0] in[0] their[0] listeners[0] which[0] wouldn't[0] work[0] previously[0] [[Sentence=-1,1=word max, 1-5]] this[0] also[0] makes[0] the[0] code[0] cleaner[0] as[0] the[0] previous[0] method[0] had[0] to[0] query[0] the[0] repo[0] for[0] items[0] and[0] return[0] a[0] list[0] of[0] new[0] ones[0] which[0] was[0] kinda[0] crappy[-2] [[Sentence=-3,1=word max, 1-5]] the[0] new[0] code[0] is[0] much[0] simpler[0] as[0] is[0] the[0] post[0] update[0] process[0] [[Sentence=-1,1=word max, 1-5]] resourceitem[0] is[0] now[0] the[0] base[0] class[0] for[0] resource[0] items[0] [[Sentence=-1,1=word max, 1-5]] it[0] includes[0] all[0] the[0] small[0] methods[0] that[0] were[0] added[0] by[0] all[0] the[0] child[0] classes[0] or[0] interfaces[0] [[Sentence=-1,1=word max, 1-5]] project/configurableresourceitem[0] are[0] merged[0] into[0] the[0] based[0] class[0] [[Sentence=-1,1=word max, 1-5]] iidresourceitem/idresourceitem[0] and[0] idresourceitem[0] are[0] gone[0] and[0] replaced[0] by[0] a[0] simpler[0] inlineresourceitem[0] [[Sentence=-1,1=word max, 1-5]] frameworkresourceitem[0] is[0] a[0] simple[0] override[0] for[0] framework[0] resources[0] [[Sentence=-1,1=word max, 1-5]] also[0] improved[1] the[0] api[0] of[0] a[0] bit[0] for[0] the[0] resource[0] repository[0] making[0] more[0] use[0] of[0] unmodifiable[0] lists[0] and[0] emptylist/map[0] change[0] id[0] ie3ac1995213fed66153c7e7ecbdd170ec257be62[0] [[Sentence=-1,2=word max, 1-5]][[[2,-3 max of sentences]]]
4633 commit 18284d7b4da35a990268f51cdab0abc3a8e6e061 merge: 77e0fde 95b17a5 merge "layoutlib api refactoring" 	4633 commit 18284d7b4da35a990268f51cdab0abc3a8e6e061 merge: 77e0fde 95b17a5 merge "layoutlib api refactoring"	1	-1	 4633[0] commit[0] 18284d7b4da35a990268f51cdab0abc3a8e6e061[0] merge[0] 77e0fde[0] 95b17a5[0] merge[0] layoutlib[0] api[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4634 commit 95b17a5e62eeeb7b38ef668508df43a1ee9e0880 layoutlib api refactoring change-id: i40abba4c4f786755c2a1c0e70df4d7bc08e2bcde 	4634 commit 95b17a5e62eeb7b38ef668508df43a1ee9e0880 layoutlib api refactoring change-id: i40abba4c4f786755c2a1c0e70df4d7bc08e2bcde	1	-1	 4634[0] commit[0] 95b17a5e62eeeb7b38ef668508df43a1ee9e0880/95b17a5e62eeb7b38ef668508df43a1ee9e0880[0] layoutlib[0] api[0] refactoring[0] change[0] id[0] i40abba4c4f786755c2a1c0e70df4d7bc08e2bcde[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5857 commit 953aeea61efb31402198b969478d1bda5dcbe613 adt gle2: access attributeinfo from groovy scripts. this cl extracts iattributeinfo from declarestyleable -- this used to be the metadata extracted from an attribute declared in attrs.xml. the interface that is now available to groovy scripts lets them check whether an attribute is a reference, a string, etc. for an enum or flag that means having access to the defined values too. in the case of the absolutelayout drop, we use this info to check if an attribute is a reference. for example when duplicating a relativelayout dropped in an absolutelayout, we need to create new ids and the relativelayout is prone to have inner self-references that can be automatically adjusted that way. a large part of the cl is about refactoring the various manually-created attributes in the descriptors for resources, xml, and such. in this case the iattributeinfo that is made available via the attributedescriptor is not used, but it made sense to keep this consistent in case we want to expose it later and to avoid having to care about special cases. change-id: ic02f69bc16f0e549fcac3956ae93b86651c5be3c 	5857 commit 953aeea61efb31402198b969478d1bda5dcbe613 adt gle2: access attributeinfo from groovy scripts.<br> this cl extracts iattributeinfo from declarestyleable - this used to be the metadata extracted from an attribute declared in attrs.<br>xml.<br> the interface that is now available to groovy scripts lets them check whether an attribute is a reference, a string, etc.<br> for an enum or flag that means having access to the defined values too.<br> in the case of the absolutelayout drop, we use this info to check if an attribute is a reference.<br> for example when duplicating a relativelayout dropped in an absolutelayout, we need to create new ids and the relativelayout is prone to have inner self-references that can be automatically adjusted that way.<br> a large part of the cl is about refactoring the various manually-created attributes in the descriptors for resources, xml, and such.<br> in this case the iattributeinfo that is made available via the attributedescriptor is not used, but it made sense to keep this consistent in case we want to expose it later and to avoid having to care about special cases.<br> change-id: ic02f69bc16f0e549fcac3956ae93b86651c5be3c	2	-2	 5857[0] commit[0] 953aeea61efb31402198b969478d1bda5dcbe613[0] adt[0] gle2[0] access[0] attributeinfo[0] from[0] groovy[0] scripts[0] [[Sentence=-1,1=word max, 1-5]] this[0] cl[0] extracts[0] iattributeinfo[0] from[0] declarestyleable[0] this[0] used[0] to[0] be[0] the[0] metadata[0] extracted[0] from[0] an[0] attribute[0] declared[0] in[0] attrs[0] [[Sentence=-1,1=word max, 1-5]] xml[0] [[Sentence=-1,1=word max, 1-5]] the[0] interface[0] that[0] is[0] now[0] available[0] to[0] groovy[0] scripts[0] lets[0] them[0] check[0] whether[0] an[0] attribute[0] is[0] a[0] reference[0] a[0] string[0] etc[0] [[Sentence=-1,1=word max, 1-5]] for[0] an[0] enum[0] or[0] flag[0] that[0] means[0] having[0] access[0] to[0] the[0] defined[0] values[1] too[0] [[Sentence=-1,2=word max, 1-5]] in[0] the[0] case[0] of[0] the[0] absolutelayout[0] drop[-1] we[0] use[0] this[0] info[0] to[0] check[0] if[0] an[0] attribute[0] is[0] a[0] reference[0] [[Sentence=-2,1=word max, 1-5]] for[0] example[0] when[0] duplicating[0] a[0] relativelayout[0] dropped[0] in[0] an[0] absolutelayout[0] we[0] need[0] to[0] create[0] new[0] ids[0] and[0] the[0] relativelayout[0] is[0] prone[0] to[0] have[0] inner[0] self[0] references[0] that[0] can[0] be[0] automatically[0] adjusted[0] that[0] way[0] [[Sentence=-1,1=word max, 1-5]] a[0] large[0] part[0] of[0] the[0] cl[0] is[0] about[0] refactoring[0] the[0] various[0] manually[0] created[0] attributes[0] in[0] the[0] descriptors[0] for[0] resources[0] xml[0] and[0] such[0] [[Sentence=-1,1=word max, 1-5]] in[0] this[0] case[0] the[0] iattributeinfo[0] that[0] is[0] made[0] available[0] via[0] the[0] attributedescriptor[0] is[0] not[0] used[0] but[0] it[0] made[0] sense[0] to[0] keep[0] this[0] consistent[0] in[0] case[0] we[0] want[0] to[0] expose[-1] it[0] later[0] and[0] to[0] avoid[-1] having[0] to[0] care[1] about[0] special[1] cases[0] [[Sentence=-2,2=word max, 1-5]] change[0] id[0] ic02f69bc16f0e549fcac3956ae93b86651c5be3c[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
9032 commit d4579ba67bfc0788a716485003d14064a5266b69 merge: 5b6490d c77d5c0 am 906e6529: merge change 2300 into donut merge commit '906e6529fce5e5c4473d9bcdb05c03b13dac2b8f' * commit '906e6529fce5e5c4473d9bcdb05c03b13dac2b8f': sdk updater: some refactoring and some new features. 	9032 commit d4579ba67bfc0788a716485003d14064a5266b69 merge: 5b6490d c77d5c0 am 906e6529: merge change 2300 into donut merge commit '906e6529fce5e5c4473d9bcdb05c03b13dac2b8f' * commit '906e6529fce5e5c4473d9bcdb05c03b13dac2b8f': sdk updater: some refactoring and some new features.	1	-1	 9032[0] commit[0] d4579ba67bfc0788a716485003d14064a5266b69[0] merge[0] 5b6490d[0] c77d5c0[0] am[0] 906e6529[0] merge[0] change[0] 2300[0] into[0] donut[0] merge[0] commit[0] '906e6529fce5e5c4473d9bcdb05c03b13dac2b8f'[0] commit[0] '906e6529fce5e5c4473d9bcdb05c03b13dac2b8f'[0] sdk[0] updater[0] some[0] refactoring[0] and[0] some[0] new[0] features[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9033 commit c77d5c0e2971720263b79fc328253512a7c1b129 merge: 6076db8 e2c0e97 merge change 2300 into donut * changes: sdk updater: some refactoring and some new features. 	9033 commit c77d5c0e2971720263b79fc328253512a7c1b129 merge: 6076db8 e2c0e97 merge change 2300 into donut * changes: sdk updater: some refactoring and some new features.	1	-1	 9033[0] commit[0] c77d5c0e2971720263b79fc328253512a7c1b129[0] merge[0] 6076db8[0] e2c0e97[0] merge[0] change[0] 2300[0] into[0] donut[0] changes[0] sdk[0] updater[0] some[0] refactoring[0] and[0] some[0] new[0] features[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9035 commit e2c0e975c244290674db1eb42e27bc03eb8d3b77 sdk updater: some refactoring and some new features. the refactoring part involves moving as much as possible stuff in sdklib/internal/repository. the ui has moved in sdkuilib/internal/repository except a specific public wrapper for calling the sdk updater window. there are also a bunch of new classes to handle the internal structures: package is the base type and to match the xml element names we have platformpackage, addonpackage, docpackage and toolpackage. all headers have been fixed. 	9035 commit e2c0e975c244290674db1eb42e27bc03eb8d3b77 sdk updater: some refactoring and some new features.<br> the refactoring part involves moving as much as possible stuff in sdklib/internal/repository.<br> the ui has moved in sdkuilib/internal/repository except a specific public wrapper for calling the sdk updater window.<br> there are also a bunch of new classes to handle the internal structures: package is the base type and to match the xml element names we have platformpackage, addonpackage, docpackage and toolpackage.<br> all headers have been fixed.	1	-1	 9035[0] commit[0] e2c0e975c244290674db1eb42e27bc03eb8d3b77[0] sdk[0] updater[0] some[0] refactoring[0] and[0] some[0] new[0] features[0] [[Sentence=-1,1=word max, 1-5]] the[0] refactoring[0] part[0] involves[0] moving[0] as[0] much[0] as[0] possible[0] stuff[0] in[0] sdklib/internal/repository[0] [[Sentence=-1,1=word max, 1-5]] the[0] ui[0] has[0] moved[0] in[0] sdkuilib/internal/repository[0] except[0] a[0] specific[0] public[0] wrapper[0] for[0] calling[0] the[0] sdk[0] updater[0] window[0] [[Sentence=-1,1=word max, 1-5]] there[0] are[0] also[0] a[0] bunch[0] of[0] new[0] classes[0] to[0] handle[0] the[0] internal[0] structures[0] package[0] is[0] the[0] base[0] type[0] and[0] to[0] match[0] the[0] xml[0] element[0] names[0] we[0] have[0] platformpackage[0] addonpackage[0] docpackage[0] and[0] toolpackage[0] [[Sentence=-1,1=word max, 1-5]] all[0] headers[0] have[0] been[0] fixed[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
