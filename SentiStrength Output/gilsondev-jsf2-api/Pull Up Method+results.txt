Pull Up Method	Translation	Positive	Negative	EmotionRationale
3004 commit 5c20a06242caaf73ec20043437578ce343bff6c4 issue: 274-facelets final refactoring. automated tests on java se 5 with v2 and v3 prelude work successfully. section: modified files ---------------------------- a jsf-api/src/javax/faces/webapp/pdl/facelets/tag/delegatingmetataghandler.java m jsf-api/src/javax/faces/webapp/pdl/facelets/tag/componenthandler.java m jsf-api/src/javax/faces/webapp/pdl/facelets/tag/faceletsattachedobjecthandler.java - this extends metataghandler and is the superclass of componenthandler and faceletsattachedobjecthandler. it contains methods formerly common to both classes. m jsf-api/doc/web-facesconfig_2_0.xsd m jsf-api/src/javax/faces/factoryfinder.java m jsf-ri/src/com/sun/faces/jsf-ri-config.xml m jsf-ri/src/com/sun/faces/config/processor/factoryconfigprocessor.java a   jsf-api/src/javax/faces/webapp/pdl/facelets/tag/taghandlerdelegatefactory.java a   jsf-ri/src/com/sun/faces/facelets/tag/jsf/taghandlerdelegatefactoryimpl.java d jsf-api/src/javax/faces/webapp/pdl/facelets/tag/taghandlerhelperfactory.java d jsf-ri/src/com/sun/faces/facelets/tag/jsf/taghandlerhelperfactoryimpl.java d jsf-api/src/javax/faces/webapp/pdl/facelets/tag/taghandlerhelper.java d jsf-ri/src/com/sun/faces/facelets/tag/jsf/validatortaghandlerhelperimpl.java d jsf-ri/src/com/sun/faces/facelets/tag/jsf/behaviortaghandlerhelperimpl.java d jsf-ri/src/com/sun/faces/facelets/tag/jsf/componenttaghandlerhelperimpl.java d jsf-ri/src/com/sun/faces/facelets/tag/jsf/convertertaghandlerhelperimpl.java a   jsf-api/src/javax/faces/webapp/pdl/facelets/tag/taghandlerdelegate.java a   jsf-ri/src/com/sun/faces/facelets/tag/jsf/behaviortaghandlerdelegateimpl.java a   jsf-ri/src/com/sun/faces/facelets/tag/jsf/componenttaghandlerdelegateimpl.java a   jsf-ri/src/com/sun/faces/facelets/tag/jsf/convertertaghandlerdelegateimpl.java a   jsf-ri/src/com/sun/faces/facelets/tag/jsf/validatortaghandlerdelegateimpl.java m jsf-api/src/javax/faces/webapp/pdl/facelets/tag/converterhandler.java m jsf-api/src/javax/faces/webapp/pdl/facelets/tag/validatorhandler.java m jsf-api/src/javax/faces/webapp/pdl/facelets/tag/behaviorhandler.java m jsf-ri/src/com/sun/faces/facelets/tag/jsf/core/beanvalidatehandler.java m jsf-ri/src/com/sun/faces/facelets/tag/jsf/compositecomponenttaghandler.java - rename taghandlerhelper* to taghandlerdelegate* 	3004 commit 5c20a06242caf73ec20043437578ce343bff6c4 issue: 274-facelets final refactoring.<br> automated tests on java se 5 with v2 and v3 prelude work successfully.<br> section: modified files - a jsf-api/src/javax/faces/webapp/pdl/facelets/tag/delegatingmetataghandler.<br>java m jsf-api/src/javax/faces/webapp/pdl/facelets/tag/componenthandler.<br>java m jsf-api/src/javax/faces/webapp/pdl/facelets/tag/faceletsattachedobjecthandler.<br>java - this extends metataghandler and is the superclass of componenthandler and faceletsattachedobjecthandler.<br> it contains methods formerly common to both classes.<br> m jsf-api/doc/web-facesconfig_2_0.<br>xsd m jsf-api/src/javax/faces/factoryfinder.<br>java m jsf-ri/src/com/sun/faces/jsf-ri-config.<br>xml m jsf-ri/src/com/sun/faces/config/processor/factoryconfigprocessor.<br>java a   jsf-api/src/javax/faces/webapp/pdl/facelets/tag/taghandlerdelegatefactory.<br>java a   jsf-ri/src/com/sun/faces/facelets/tag/jsf/taghandlerdelegatefactoryimpl.<br>java d jsf-api/src/javax/faces/webapp/pdl/facelets/tag/taghandlerhelperfactory.<br>java d jsf-ri/src/com/sun/faces/facelets/tag/jsf/taghandlerhelperfactoryimpl.<br>java d jsf-api/src/javax/faces/webapp/pdl/facelets/tag/taghandlerhelper.<br>java d jsf-ri/src/com/sun/faces/facelets/tag/jsf/validatortaghandlerhelperimpl.<br>java d jsf-ri/src/com/sun/faces/facelets/tag/jsf/behaviortaghandlerhelperimpl.<br>java d jsf-ri/src/com/sun/faces/facelets/tag/jsf/componenttaghandlerhelperimpl.<br>java d jsf-ri/src/com/sun/faces/facelets/tag/jsf/convertertaghandlerhelperimpl.<br>java a   jsf-api/src/javax/faces/webapp/pdl/facelets/tag/taghandlerdelegate.<br>java a   jsf-ri/src/com/sun/faces/facelets/tag/jsf/behaviortaghandlerdelegateimpl.<br>java a   jsf-ri/src/com/sun/faces/facelets/tag/jsf/componenttaghandlerdelegateimpl.<br>java a   jsf-ri/src/com/sun/faces/facelets/tag/jsf/convertertaghandlerdelegateimpl.<br>java a   jsf-ri/src/com/sun/faces/facelets/tag/jsf/validatortaghandlerdelegateimpl.<br>java m jsf-api/src/javax/faces/webapp/pdl/facelets/tag/converterhandler.<br>java m jsf-api/src/javax/faces/webapp/pdl/facelets/tag/validatorhandler.<br>java m jsf-api/src/javax/faces/webapp/pdl/facelets/tag/behaviorhandler.<br>java m jsf-ri/src/com/sun/faces/facelets/tag/jsf/core/beanvalidatehandler.<br>java m jsf-ri/src/com/sun/faces/facelets/tag/jsf/compositecomponenttaghandler.<br>java - rename taghandlerhelper* to taghandlerdelegate*	1	-1	 3004[0] commit[0] 5c20a06242caaf73ec20043437578ce343bff6c4/5c20a06242caf73ec20043437578ce343bff6c4[0] issue[0] 274[0] facelets[0] final[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]] automated[0] tests[0] on[0] java[0] se[0] 5[0] with[0] v2[0] and[0] v3[0] prelude[0] work[0] successfully[0] [[Sentence=-1,1=word max, 1-5]] section[0] modified[0] files[0] a[0] jsf[0] api/src/javax/faces/webapp/pdl/facelets/tag/delegatingmetataghandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] api/src/javax/faces/webapp/pdl/facelets/tag/componenthandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] api/src/javax/faces/webapp/pdl/facelets/tag/faceletsattachedobjecthandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] this[0] extends[0] metataghandler[0] and[0] is[0] the[0] superclass[0] of[0] componenthandler[0] and[0] faceletsattachedobjecthandler[0] [[Sentence=-1,1=word max, 1-5]] it[0] contains[0] methods[0] formerly[0] common[0] to[0] both[0] classes[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] api/doc/web[0] facesconfig_2_0[0] [[Sentence=-1,1=word max, 1-5]] xsd[0] m[0] jsf[0] api/src/javax/faces/factoryfinder[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] ri/src/com/sun/faces/jsf[0] ri[0] config[0] [[Sentence=-1,1=word max, 1-5]] xml[0] m[0] jsf[0] ri/src/com/sun/faces/config/processor/factoryconfigprocessor[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] api/src/javax/faces/webapp/pdl/facelets/tag/taghandlerdelegatefactory[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/taghandlerdelegatefactoryimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] d[0] jsf[0] api/src/javax/faces/webapp/pdl/facelets/tag/taghandlerhelperfactory[0] [[Sentence=-1,1=word max, 1-5]] java[0] d[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/taghandlerhelperfactoryimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] d[0] jsf[0] api/src/javax/faces/webapp/pdl/facelets/tag/taghandlerhelper[0] [[Sentence=-1,1=word max, 1-5]] java[0] d[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/validatortaghandlerhelperimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] d[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/behaviortaghandlerhelperimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] d[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/componenttaghandlerhelperimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] d[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/convertertaghandlerhelperimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] api/src/javax/faces/webapp/pdl/facelets/tag/taghandlerdelegate[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/behaviortaghandlerdelegateimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/componenttaghandlerdelegateimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/convertertaghandlerdelegateimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/validatortaghandlerdelegateimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] api/src/javax/faces/webapp/pdl/facelets/tag/converterhandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] api/src/javax/faces/webapp/pdl/facelets/tag/validatorhandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] api/src/javax/faces/webapp/pdl/facelets/tag/behaviorhandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/core/beanvalidatehandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/compositecomponenttaghandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] rename[0] taghandlerhelper[0] to[0] taghandlerdelegate[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6447 commit 715c8ccc22149ef585499a97f6a12024b443b3c7 [project @ 2004-01-20 03:04:08 by craigmcc] [accessibility] add "scope" attribute to all  th  elements rendered by the standard renderkit. take advantage of the opportunity to refactor the complex renderers somewhat, and abstract some utility methods to *always* deal with children and facets that have rendered "false". no jsf-api changes are included in this bundle, but the descriptions of the standard renderers in standard-html-renderkit.xml will need to be refined (on the jsfa131 branch). unit tests and demos run. ri changes:            m src/com/sun/faces/renderkit/html_basic/htmlbasicrenderer.java - add protected getchildren() method that automatically skips children with rendered false. - add protected encoderecursive() method, extracted out of the three renderers that had private implementations. make it use the new getchildren() method so it won't even try to render children with rendered false. - add protected getfacet() method, which will return a facet only if it exists and has rendered true. m src/com/sun/faces/renderkit/html_basic/gridrenderer.java m src/com/sun/faces/renderkit/html_basic/tablerenderer.java - use the utility methods described above, remove encoderecursive(). - generate  thead  and  tfoot  sections in encodebegin(), and render them both *before* the table body. this renders fine in mozilla 1.5 and ie6, but will need to be double checked on others. - inside the  thead  section, use  th  consistently to mark the column headings. for accessibility, render appropriate "scope" attributes on these elements. - tablerenderer: do not count columns with rendered false when calculating the colspan value for table-wide header and footer facets. - tablerenderer: render both the table-wide and column-wide headers inside the  thead , and table-wide and column-wide headers inside the  tfoot . m src/com/sun/faces/renderkit/html_basic/grouprenderer.java - use the utility methods described above, remove encoderecursive(). - abstract decision on whether a span element was needed into a private boolean method, and simplify the generation. m web/test/correctrenderersresponse_4 m web/test/renderresponse_correct - updated golden files. demo changes:              m standard/src/standard/uidatabean.java - add a "footer" event handler method to detect when a button rendered in a column footer is pressed. m standard/web/uidata.jsp - add overall table header and footer facets. - add footer facets on most (but not all) columns, to verify correct behavior and placement. - include a button in the footer for the commands column. m standard/web/panel_grid_row.jsp - add a panel group inside the footer facet, with an "id" to force generation of the span. m standard/web/stylesheet.css - add a style definition for "list-footer" that was referenced but not present. original author: craigmcc date: 2004-01-20 03:04:38 00:00 	6447 commit 715c8cc22149ef585499a97f6a12024b443b3c7 [project @ 2004-01-20 03:04:08 by craigmcc] [accessibility] add "scope" attribute to all  th  elements rendered by the standard renderkit.<br> take advantage of the opportunity to refactor the complex renderers somewhat, and abstract some utility methods to *always* deal with children and facets that have rendered "false"<br> no jsf-api changes are included in this bundle, but the descriptions of the standard renderers in standard-html-renderkit.<br>xml will need to be refined (on the jsfa131 branch)<br> unit tests and demos run.<br> ri changes:            m src/com/sun/faces/renderkit/html_basic/htmlbasicrenderer.<br>java - add protected getchildren( method that automatically skips children with rendered false.<br> - add protected encoderecursive( method, extracted out of the three renderers that had private implementations.<br> make it use the new getchildren( method so it won't even try to render children with rendered false.<br> - add protected getfacet( method, which will return a facet only if it exists and has rendered true.<br> m src/com/sun/faces/renderkit/html_basic/gridrenderer.<br>java m src/com/sun/faces/renderkit/html_basic/tablerenderer.<br>java - use the utility methods described above, remove encoderecursive(<br> - generate  thead  and  tfoot  sections in encodebegin( and render them both *before* the table body.<br> this renders fine in mozilla 1.5 and ie6, but will need to be double checked on others.<br> - inside the  thead  section, use  th  consistently to mark the column headings.<br> for accessibility, render appropriate "scope" attributes on these elements.<br> - tablerenderer: do not count columns with rendered false when calculating the colspan value for table-wide header and footer facets.<br> - tablerenderer: render both the table-wide and column-wide headers inside the  thead , and table-wide and column-wide headers inside the  tfoot .<br> m src/com/sun/faces/renderkit/html_basic/grouprenderer.<br>java - use the utility methods described above, remove encoderecursive(<br> - abstract decision on whether a span element was needed into a private boolean method, and simplify the generation.<br> m web/test/correctrenderersresponse_4 m web/test/renderresponse_correct - updated golden files.<br> demo changes:              m standard/src/standard/uidatabean.<br>java - add a "footer" event handler method to detect when a button rendered in a column footer is pressed.<br> m standard/web/uidata.<br>jsp - add overall table header and footer facets.<br> - add footer facets on most (but not all) columns, to verify correct behavior and placement.<br> - include a button in the footer for the commands column.<br> m standard/web/panel_grid_row.<br>jsp - add a panel group inside the footer facet, with an "id" to force generation of the span.<br> m standard/web/stylesheet.<br>css - add a style definition for "list-footer" that was referenced but not present.<br> original author: craigmc date: 2004-01-20 03:04:38 00:00	3	-1	 6447[0] commit[0] 715c8ccc22149ef585499a97f6a12024b443b3c7/715c8cc22149ef585499a97f6a12024b443b3c7[0] [project[0] @[0] 2004[0] -01[0] -20[0] 03[0] :04[0] :08[0] by[0] craigmcc][0] [accessibility][0] add[0] scope[0] attribute[0] to[0] all[0] th[0] elements[0] rendered[0] by[0] the[0] standard[0] renderkit[0] [[Sentence=-1,1=word max, 1-5]] take[0] advantage[0] of[0] the[0] opportunity[0] to[0] refactor[0] the[0] complex[0] renderers[0] somewhat[0] and[0] abstract[0] some[0] utility[0] methods[0] to[0] always[0] deal[0] with[0] children[0] and[0] facets[0] that[0] have[0] rendered[0] false[0] [[Sentence=-1,1=word max, 1-5]] no[0] jsf[0] api[0] changes[0] are[0] included[0] in[0] this[0] bundle[0] but[0] the[0] descriptions[0] of[0] the[0] standard[0] renderers[0] in[0] standard[0] html[0] renderkit[0] [[Sentence=-1,1=word max, 1-5]] xml[0] will[0] need[0] to[0] be[0] refined[0] on[0] the[0] jsfa131[0] branch[0] [[Sentence=-1,1=word max, 1-5]] unit[0] tests[0] and[0] demos[0] run[0] [[Sentence=-1,1=word max, 1-5]] ri[0] changes[0] m[0] src/com/sun/faces/renderkit/html_basic/htmlbasicrenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] add[0] protected[0] getchildren[0] method[0] that[0] automatically[0] skips[0] children[0] with[0] rendered[0] false[0] [[Sentence=-1,1=word max, 1-5]] add[0] protected[0] encoderecursive[0] method[0] extracted[0] out[0] of[0] the[0] three[0] renderers[0] that[0] had[0] private[0] implementations[0] [[Sentence=-1,1=word max, 1-5]] make[0] it[0] use[0] the[0] new[0] getchildren[0] method[0] so[0] it[0] won't[0] even[0] try[0] to[0] render[0] children[0] with[0] rendered[0] false[0] [[Sentence=-1,1=word max, 1-5]] add[0] protected[0] getfacet[0] method[0] which[0] will[0] return[0] a[0] facet[0] only[0] if[0] it[0] exists[0] and[0] has[0] rendered[0] true[1] [[Sentence=-1,2=word max, 1-5]] m[0] src/com/sun/faces/renderkit/html_basic/gridrenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] src/com/sun/faces/renderkit/html_basic/tablerenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] use[0] the[0] utility[0] methods[0] described[0] above[0] remove[0] encoderecursive[0] [[Sentence=-1,1=word max, 1-5]] generate[0] thead[0] and[0] tfoot[0] sections[0] in[0] encodebegin[0] and[0] render[0] them[0] both[0] before[0] the[0] table[0] body[0] [[Sentence=-1,1=word max, 1-5]] this[0] renders[0] fine[2] in[0] mozilla[0] 1[0] .5[0] and[0] ie6[0] but[0] will[0] need[0] to[0] be[0] double[0] checked[0] on[0] others[0] [[Sentence=-1,3=word max, 1-5]] inside[0] the[0] thead[0] section[0] use[0] th[0] consistently[0] to[0] mark[0] the[0] column[0] headings[0] [[Sentence=-1,1=word max, 1-5]] for[0] accessibility[0] render[0] appropriate[0] scope[0] attributes[0] on[0] these[0] elements[0] [[Sentence=-1,1=word max, 1-5]] tablerenderer[0] do[0] not[0] count[0] columns[0] with[0] rendered[0] false[0] when[0] calculating[0] the[0] colspan[0] value[0] for[0] table[0] wide[0] header[0] and[0] footer[0] facets[0] [[Sentence=-1,1=word max, 1-5]] tablerenderer[0] render[0] both[0] the[0] table[0] wide[0] and[0] column[0] wide[0] headers[0] inside[0] the[0] thead[0] and[0] table[0] wide[0] and[0] column[0] wide[0] headers[0] inside[0] the[0] tfoot[0] [[Sentence=-1,1=word max, 1-5]] m[0] src/com/sun/faces/renderkit/html_basic/grouprenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] use[0] the[0] utility[0] methods[0] described[0] above[0] remove[0] encoderecursive[0] [[Sentence=-1,1=word max, 1-5]] abstract[0] decision[0] on[0] whether[0] a[0] span[0] element[0] was[0] needed[0] into[0] a[0] private[0] boolean[0] method[0] and[0] simplify[0] the[0] generation[0] [[Sentence=-1,1=word max, 1-5]] m[0] web/test/correctrenderersresponse_4[0] m[0] web/test/renderresponse_correct[0] updated[0] golden[0] files[0] [[Sentence=-1,1=word max, 1-5]] demo[0] changes[0] m[0] standard/src/standard/uidatabean[0] [[Sentence=-1,1=word max, 1-5]] java[0] add[0] a[0] footer[0] event[0] handler[0] method[0] to[0] detect[0] when[0] a[0] button[0] rendered[0] in[0] a[0] column[0] footer[0] is[0] pressed[0] [[Sentence=-1,1=word max, 1-5]] m[0] standard/web/uidata[0] [[Sentence=-1,1=word max, 1-5]] jsp[0] add[0] overall[0] table[0] header[0] and[0] footer[0] facets[0] [[Sentence=-1,1=word max, 1-5]] add[0] footer[0] facets[0] on[0] most[0] but[0] not[0] all[0] columns[0] to[0] verify[0] correct[0] behavior[0] and[0] placement[0] [[Sentence=-1,1=word max, 1-5]] include[0] a[0] button[0] in[0] the[0] footer[0] for[0] the[0] commands[0] column[0] [[Sentence=-1,1=word max, 1-5]] m[0] standard/web/panel_grid_row[0] [[Sentence=-1,1=word max, 1-5]] jsp[0] add[0] a[0] panel[0] group[0] inside[0] the[0] footer[0] facet[0] with[0] an[0] id[0] to[0] force[0] generation[0] of[0] the[0] span[0] [[Sentence=-1,1=word max, 1-5]] m[0] standard/web/stylesheet[0] [[Sentence=-1,1=word max, 1-5]] css[0] add[0] a[0] style[0] definition[0] for[0] list[0] footer[0] that[0] was[0] referenced[0] but[0] not[0] present[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] craigmcc/craigmc[0] date[0] 2004[0] -01[0] -20[0] 03[0] :04[0] :38[0] 00[0] :00[0] [[Sentence=-1,1=word max, 1-5]][[[3,-1 max of sentences]]]
8158 commit 5ae30f55351e05d72d3c2485ff953fb45a0fd0e7 [project @ 2002-09-13 23:43:46 by visvan] renderkit refactorisation m src/com/sun/faces/renderkit/html_basic/checkboxrenderer.java m src/com/sun/faces/renderkit/html_basic/daterenderer.java m src/com/sun/faces/renderkit/html_basic/htmlbasicrenderer.java m src/com/sun/faces/renderkit/html_basic/labelrenderer.java m src/com/sun/faces/renderkit/html_basic/numberrenderer.java m src/com/sun/faces/renderkit/html_basic/radiorenderer.java m src/com/sun/faces/renderkit/html_basic/secretrenderer.java m src/com/sun/faces/renderkit/html_basic/textarearenderer.java m src/com/sun/faces/renderkit/html_basic/textrenderer.java move all of the common functionality in decode() to htmlbasicrenderer which is the superclass for all renderers. introduce a method called getconvertedvalue() which could be overridden by renderers that need to perform type conversion on the request parameter value. this method would return null if type conversion failed and return the converted object if conversion is successful. this method could be a no-op in htmlbasicrenderer or abstract. the advantage of no-op is that the renderers which don't do any type conversion doesn't have to implement it. the folllowing renderers don't have to be modified because their decode is a no-op except for button which has a different decoding logic. button data errors form grid group image label list selectmany and selectonerenderers. original author: visvan date: 2002-09-13 23:43:47 00:00 	8158 commit 5ae30f55351e05d72d3c2485ff953fb45a0fd0e7 [project @ 2002-09-13 23:43:46 by visvan] renderkit refactorisation m src/com/sun/faces/renderkit/html_basic/checkboxrenderer.<br>java m src/com/sun/faces/renderkit/html_basic/daterenderer.<br>java m src/com/sun/faces/renderkit/html_basic/htmlbasicrenderer.<br>java m src/com/sun/faces/renderkit/html_basic/labelrenderer.<br>java m src/com/sun/faces/renderkit/html_basic/numberrenderer.<br>java m src/com/sun/faces/renderkit/html_basic/radiorenderer.<br>java m src/com/sun/faces/renderkit/html_basic/secretrenderer.<br>java m src/com/sun/faces/renderkit/html_basic/textarearenderer.<br>java m src/com/sun/faces/renderkit/html_basic/textrenderer.<br>java move all of the common functionality in decode( to htmlbasicrenderer which is the superclass for all renderers.<br> introduce a method called getconvertedvalue( which could be overridden by renderers that need to perform type conversion on the request parameter value.<br> this method would return null if type conversion failed and return the converted object if conversion is successful.<br> this method could be a no-op in htmlbasicrenderer or abstract.<br> the advantage of no-op is that the renderers which don't do any type conversion doesn't have to implement it.<br> the following renderers don't have to be modified because their decode is a no-op except for button which has a different decoding logic.<br> button data errors form grid group image label list selectmany and selectonerenderers.<br> original author: visvan date: 2002-09-13 23:43:47 00:00	1	-1	 8158[0] commit[0] 5ae30f55351e05d72d3c2485ff953fb45a0fd0e7[0] [project[0] @[0] 2002[0] -09[0] -13[0] 23[0] :43[0] :46[0] by[0] visvan][0] renderkit[0] refactorisation[0] m[0] src/com/sun/faces/renderkit/html_basic/checkboxrenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] src/com/sun/faces/renderkit/html_basic/daterenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] src/com/sun/faces/renderkit/html_basic/htmlbasicrenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] src/com/sun/faces/renderkit/html_basic/labelrenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] src/com/sun/faces/renderkit/html_basic/numberrenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] src/com/sun/faces/renderkit/html_basic/radiorenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] src/com/sun/faces/renderkit/html_basic/secretrenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] src/com/sun/faces/renderkit/html_basic/textarearenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] src/com/sun/faces/renderkit/html_basic/textrenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] move[0] all[0] of[0] the[0] common[0] functionality[0] in[0] decode[0] to[0] htmlbasicrenderer[0] which[0] is[0] the[0] superclass[0] for[0] all[0] renderers[0] [[Sentence=-1,1=word max, 1-5]] introduce[0] a[0] method[0] called[0] getconvertedvalue[0] which[0] could[0] be[0] overridden[0] by[0] renderers[0] that[0] need[0] to[0] perform[0] type[0] conversion[0] on[0] the[0] request[0] parameter[0] value[0] [[Sentence=-1,1=word max, 1-5]] this[0] method[0] would[0] return[0] null[0] if[0] type[0] conversion[0] failed[0] and[0] return[0] the[0] converted[0] object[0] if[0] conversion[0] is[0] successful[0] [[Sentence=-1,1=word max, 1-5]] this[0] method[0] could[0] be[0] a[0] no[0] op[0] in[0] htmlbasicrenderer[0] or[0] abstract[0] [[Sentence=-1,1=word max, 1-5]] the[0] advantage[0] of[0] no[0] op[0] is[0] that[0] the[0] renderers[0] which[0] don't[0] do[0] any[0] type[0] conversion[0] doesn't[0] have[0] to[0] implement[0] it[0] [[Sentence=-1,1=word max, 1-5]] the[0] folllowing/following[0] renderers[0] don't[0] have[0] to[0] be[0] modified[0] because[0] their[0] decode[0] is[0] a[0] no[0] op[0] except[0] for[0] button[0] which[0] has[0] a[0] different[0] decoding[0] logic[0] [[Sentence=-1,1=word max, 1-5]] button[0] data[0] errors[0] form[0] grid[0] group[0] image[0] label[0] list[0] selectmany[0] and[0] selectonerenderers[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] visvan[0] date[0] 2002[0] -09[0] -13[0] 23[0] :43[0] :47[0] 00[0] :00[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
