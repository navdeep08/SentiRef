Extract Method	Translation	Positive	Negative	EmotionRationale
1180 commit 72140669f117ddeb6ca345a9279cb189a70c71a5 part 1 of refactoring to enable leveraging glassfish 3.1 annotation scanning facility https://javaserverfaces.dev.java.net/issues/show_bug.cgi?id 1835 section: modified files ---------------------------- m jsf-ri/src/main/java/com/sun/faces/spi/injectionproviderfactory.java m jsf-ri/src/main/java/com/sun/faces/spi/injectionprovider.java m jsf-ri/src/main/java/com/sun/faces/vendor/webcontainerinjectionprovider.java - add method   public abstract map class ? extends annotation , set class ?    getannotatedclassesincurrentmodule()   throws injectionproviderexception; this enables the spi to provide annotation scanning. m jsf-ri/src/main/java/com/sun/faces/config/configmanager.java - in preparation for moving around the point in time when the injectionprovider reference is obtained, delay any access of jar files to be as late as possible. m jsf-ri/src/main/java/com/sun/faces/config/annotationscanner.java a jsf-ri/src/main/java/com/sun/faces/config/javaclassscanningannotationscanner.java - refactor these annotationscanner to push the java class scanning down a level, but keeping the scripting scanning up at the top level. m jsf-ri/src/main/java/com/sun/faces/spi/annotationproviderfactory.java - for now, continue to use the javaclassscanningannotationscanner as the default annotation scanner. 	1180 commit 72140669f117ddeb6ca345a9279cb189a70c71a5 part 1 of refactoring to enable leveraging glassfish 3.1 annotation scanning facility https://javaserverfaces.<br>dev.<br>java.<br>net/issues/show_bug.<br>cgi?<br>id 1835 section: modified files - m jsf-ri/src/main/java/com/sun/faces/spi/injectionproviderfactory.<br>java m jsf-ri/src/main/java/com/sun/faces/spi/injectionprovider.<br>java m jsf-ri/src/main/java/com/sun/faces/vendor/webcontainerinjectionprovider.<br>java - add method   public abstract map class ?<br> extends annotation , set class ?<br>    getannotatedclassesincurrentmodule(   throws injectionproviderexception; this enables the spi to provide annotation scanning.<br> m jsf-ri/src/main/java/com/sun/faces/config/configmanager.<br>java - in preparation for moving around the point in time when the injectionprovider reference is obtained, delay any access of jar files to be as late as possible.<br> m jsf-ri/src/main/java/com/sun/faces/config/annotationscanner.<br>java a jsf-ri/src/main/java/com/sun/faces/config/javaclasscanningannotationscanner.<br>java - refactor these annotationscanner to push the java class scanning down a level, but keeping the scripting scanning up at the top level.<br> m jsf-ri/src/main/java/com/sun/faces/spi/annotationproviderfactory.<br>java - for now, continue to use the javaclasscanningannotationscanner as the default annotation scanner.	1	-2	 1180[0] commit[0] 72140669f117ddeb6ca345a9279cb189a70c71a5[0] part[0] 1[0] of[0] refactoring[0] to[0] enable[0] leveraging[0] glassfish[0] 3[0] .1[0] annotation[0] scanning[0] facility[0] https[0] ://javaserverfaces[0] [[Sentence=-1,1=word max, 1-5]] dev[0] [[Sentence=-1,1=word max, 1-5]] java[0] [[Sentence=-1,1=word max, 1-5]] net/issues/show_bug[0] [[Sentence=-1,1=word max, 1-5]] cgi[0] [[Sentence=-1,1=word max, 1-5]] id[0] 1835[0] section[0] modified[0] files[0] m[0] jsf[0] ri/src/main/java/com/sun/faces/spi/injectionproviderfactory[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] ri/src/main/java/com/sun/faces/spi/injectionprovider[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] ri/src/main/java/com/sun/faces/vendor/webcontainerinjectionprovider[0] [[Sentence=-1,1=word max, 1-5]] java[0] add[0] method[0] public[0] abstract[0] map[0] class[0] [[Sentence=-1,1=word max, 1-5]] extends[0] annotation[0] set[0] class[0] [[Sentence=-1,1=word max, 1-5]] getannotatedclassesincurrentmodule[0] throws[0] injectionproviderexception[0] this[0] enables[0] the[0] spi[0] to[0] provide[0] annotation[0] scanning[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/main/java/com/sun/faces/config/configmanager[0] [[Sentence=-1,1=word max, 1-5]] java[0] in[0] preparation[0] for[0] moving[0] around[0] the[0] point[0] in[0] time[0] when[0] the[0] injectionprovider[0] reference[0] is[0] obtained[0] delay[-1] any[0] access[0] of[0] jar[0] files[0] to[0] be[0] as[0] late[0] as[0] possible[0] [[Sentence=-2,1=word max, 1-5]] m[0] jsf[0] ri/src/main/java/com/sun/faces/config/annotationscanner[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/src/main/java/com/sun/faces/config/javaclassscanningannotationscanner/ri/src/main/java/com/sun/faces/config/javaclasscanningannotationscanner[0] [[Sentence=-1,1=word max, 1-5]] java[0] refactor[0] these[0] annotationscanner[0] to[0] push[0] the[0] java[0] class[0] scanning[0] down[0] a[0] level[0] but[0] keeping[0] the[0] scripting[0] scanning[0] up[0] at[0] the[0] top[0] level[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/main/java/com/sun/faces/spi/annotationproviderfactory[0] [[Sentence=-1,1=word max, 1-5]] java[0] for[0] now[0] continue[0] to[0] use[0] the[0] javaclassscanningannotationscanner/javaclasscanningannotationscanner[0] as[0] the[0] default[-1] annotation[0] scanner[0] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
1391 commit 5740f9cb061e74bf3f9c85286c4f7e9520ee092f complete forward port of jsf 1.2 performance fixes from adf team to 2.1 head https://javaserverfaces.dev.java.net/issues/show_bug.cgi?id 1720 this code was authored by blake sullivan, ed burns, and others. since it was already checked in to 1.2, i'm not sending it out for review . section: modified files ---------------------------- m jsf-api/src/main/java/javax/faces/webapp/uicomponentclassictagbase.java - remove the context_map because in jsf 2.0 we have the context attributes map. - in findcomponent(), pass the context attributes map to _getparentuicomponentclassictagbase(). - in the version of _getparentuicomponentclassictagbase() that takes a facescontext as its argument, pass the context attributes map. - in {push,pop}uicomponentclassictagbase(), do{start,end}tag(), generateincrementedid(), setjspid(), use the context attributes map. - remove getcontextmap(), _getcontextmap(), releasecontextmap(), m jsf-ri/test/com/sun/faces/application/testhasdeprstatemanagerimpl.java - fix imports. - very important call to newview.setviewid(). m jsf-ri/test/com/sun/faces/el/testnestedelresolver.java - very important make sure the facescompositeelresolver is an instance of the new class demuxcompositeelresolver(). m jsf-ri/src/main/java/com/sun/faces/lifecycle/elresolverinitphaselistener.java - the changes in this class are very delicate and important. this change-bundle changes the order of instantiation of various resolvers to fix a long-standing mojarra bug regarding programmatic elresolver installation. m jsf-ri/src/main/java/com/sun/faces/el/scopedattributeelresolver.java - in getvalue(), use property.tostring() rather than (string) property. m jsf-ri/src/main/java/com/sun/faces/el/implicitobjectelresolver.java - issue 1616. use a hashmap rather than a binarysearch. - take great care to ensure the list of implicit objects is correct with respect to jsf 2.0. m jsf-ri/src/main/java/com/sun/faces/el/facescompositeelresolver.java - this is part of blake's big elresolver refactoring. the core concept in this refactoring is the realization that the design of el uses the presence of "null" as the value of the base argument to mean, "act as variableresolver". this was the design choice taken by pierre delisle and the unified el exeprt group back in the jsr-252 days. it works well enough, but it does carry with it a performance problem: the set of implicit objects is known by the system, and this knowledge can be exploited to short-circuit the search process. blake's enhancement leverages this knowledge. m jsf-ri/src/main/java/com/sun/faces/el/variableresolverchainwrapper.java - lots of tweaks here to get blake's enhancement to work. m jsf-ri/src/main/java/com/sun/faces/el/elutils.java - change the signature of buildfacesresolver() to support blake's optimization. m jsf-ri/src/main/java/com/sun/faces/application/applicationassociate.java - ivars for vrchainwrappers for blake's optimization. m jsf-ri/src/main/java/com/sun/faces/el/implicitobjectelresolverforjsp.java - use the map, not the binary search. m jsf-ri/src/main/java/com/sun/faces/el/variableresolverimpl.java - add a getdelegate() method. m jsf-ri/src/main/java/com/sun/faces/taglib/jsf_core/loadbundletag.java m jsf-ri/src/main/java/com/sun/faces/taglib/jsf_core/subviewtag.java - if you need to access reqeuststatemanager's statemap multiple times in one method, only get the map once. m jsf-ri/src/main/java/com/sun/faces/application/applicationimpl.java - change the timing of initialization of elresolvers to fix the long standing faces bug, as well as implementing blake's optimization. m jsf-ri/src/main/java/com/sun/faces/application/viewhandlerimpl.java - if you need to access reqeuststatemanager's statemap multiple times in one method, only get the map once. m jsf-ri/src/main/java/com/sun/faces/config/configurelistener.java - the empty resolver must be an instance of chaintypecompositeelresolver. m jsf-ri/src/main/java/com/sun/faces/util/requeststatemanager.java - provide static accessor to get the map. m jsf-ri/build-tests.xml m jsf-ri/build.xml - make sure the build identifier is always updated. m jsf-ri/systest-per-webapp/build.xml m jsf-ri/systest-per-webapp/build-tests.xml   replace-variableresolver-programmatically,   add-elresolver-and-replace-variableresolver-programmatically,   replace-variableresolver-and-add-elresolver-programmatically, m jsf-ri/systest/src/com/sun/faces/systest/model/testbean.java m jsf-ri/systest/web/web-inf/faces-config.xml - content for resourcebundletype facesresourcebundleresolvergettypetest a jsf-ri/src/main/java/com/sun/faces/el/demuxcompositeelresolver.java a jsf-ri/src/main/java/com/sun/faces/el/chaintypecompositeelresolver.java - these new classes are the heart of blake's enhancement. a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/src a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/src/java a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/src/java/com a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/src/java/com/sun a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/src/java/com/sun/faces a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/src/java/com/sun/faces/systest a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/src/java/com/sun/faces/systest/replacevariableresolvertestcase.java a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/src/java/com/sun/faces/systest/newvariableresolver.java a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/src/java/com/sun/faces/systest/bean.java a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/src/java/com/sun/faces/systest/programmaticaddvariableresolverlistener.java a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/web a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/web/web-inf a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/web/web-inf/faces-config.xml a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/web/web-inf/web.xml a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/web/test.jsp a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/web/test1.jsp a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/src a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/src/java a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/src/java/com a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/src/java/com/sun a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/src/java/com/sun/faces a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/src/java/com/sun/faces/systest a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/src/java/com/sun/faces/systest/newvariableresolver.java a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/src/java/com/sun/faces/systest/bean.java a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/src/java/com/sun/faces/systest/addelresolverandreplacevariableresolverprogrammaticallytestcase.java a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/src/java/com/sun/faces/systest/newelresolver.java a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/src/java/com/sun/faces/systest/programmaticaddelresolverlistenerandsetvariableresolver.java a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/web a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/web/web-inf a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/web/web-inf/faces-config.xml a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/web/web-inf/web.xml a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/web/test.jsp a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/web/test1.jsp a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/src a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/src/java a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/src/java/com a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/src/java/com/sun a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/src/java/com/sun/faces a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/src/java/com/sun/faces/systest a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/src/java/com/sun/faces/systest/newvariableresolver.java a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/src/java/com/sun/faces/systest/programmaticsetvariableresolverandaddelresolverlistenerfilter.java a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/src/java/com/sun/faces/systest/bean.java a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/src/java/com/sun/faces/systest/replacevariableresolverandaddelresolverprogrammaticallytestcase.java a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/src/java/com/sun/faces/systest/newelresolver.java a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/web a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/web/web-inf a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/web/web-inf/faces-config.xml a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/web/web-inf/web.xml a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/web/test.jsp a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/web/test1.jsp a jsf-ri/systest/src/com/sun/faces/systest/resources/resourcebundleelresolvertestcase.java a jsf-ri/systest/web/resourcebundle05.jsp - lots of new tests! 	1391 commit 5740f9cb061e74bf3f9c85286c4f7e9520ee092f complete forward port of jsf 1.2 performance fixes from adf team to 2.1 head https://javaserverfaces.<br>dev.<br>java.<br>net/issues/show_bug.<br>cgi?<br>id 1720 this code was authored by blake sullivan, ed burns, and others.<br> since it was already checked in to 1.2, i'm not sending it out for review .<br> section: modified files - m jsf-api/src/main/java/javax/faces/webapp/uicomponentclassictagbase.<br>java - remove the context_map because in jsf 2.0 we have the context attributes map.<br> - in findcomponent( pass the context attributes map to _getparentuicomponentclassictagbase(<br> - in the version of _getparentuicomponentclassictagbase( that takes a facescontext as its argument, pass the context attributes map.<br> - in {push,pop}uicomponentclassictagbase( do{start,end}tag( generateincrementedid( setjspid( use the context attributes map.<br> - remove getcontextmap( _getcontextmap( releasecontextmap( m jsf-ri/test/com/sun/faces/application/testhasdeprstatemanagerimpl.<br>java - fix imports.<br> - very important call to newview.<br>setviewid(<br> m jsf-ri/test/com/sun/faces/el/testnestedelresolver.<br>java - very important make sure the facescompositeelresolver is an instance of the new class demuxcompositeelresolver(<br> m jsf-ri/src/main/java/com/sun/faces/lifecycle/elresolverinitphaselistener.<br>java - the changes in this class are very delicate and important.<br> this change-bundle changes the order of instantiation of various resolvers to fix a long-standing mojarra bug regarding programmatic elresolver installation.<br> m jsf-ri/src/main/java/com/sun/faces/el/scopedattributeelresolver.<br>java - in getvalue( use property.<br>tostring( rather than (string) property.<br> m jsf-ri/src/main/java/com/sun/faces/el/implicitobjectelresolver.<br>java - issue 1616.<br> use a hashmap rather than a binarysearch.<br> - take great care to ensure the list of implicit objects is correct with respect to jsf 2.0.<br> m jsf-ri/src/main/java/com/sun/faces/el/facescompositeelresolver.<br>java - this is part of blake's big elresolver refactoring.<br> the core concept in this refactoring is the realization that the design of el uses the presence of "null" as the value of the base argument to mean, "act as variableresolver"<br> this was the design choice taken by pierre delisle and the unified el exeprt group back in the jsr-252 days.<br> it works well enough, but it does carry with it a performance problem: the set of implicit objects is known by the system, and this knowledge can be exploited to short-circuit the search process.<br> blake's enhancement leverages this knowledge.<br> m jsf-ri/src/main/java/com/sun/faces/el/variableresolverchainwrapper.<br>java - lots of tweaks here to get blake's enhancement to work.<br> m jsf-ri/src/main/java/com/sun/faces/el/elutils.<br>java - change the signature of buildfacesresolver( to support blake's optimization.<br> m jsf-ri/src/main/java/com/sun/faces/application/applicationassociate.<br>java - ivars for vrchainwrappers for blake's optimization.<br> m jsf-ri/src/main/java/com/sun/faces/el/implicitobjectelresolverforjsp.<br>java - use the map, not the binary search.<br> m jsf-ri/src/main/java/com/sun/faces/el/variableresolverimpl.<br>java - add a getdelegate( method.<br> m jsf-ri/src/main/java/com/sun/faces/taglib/jsf_core/loadbundletag.<br>java m jsf-ri/src/main/java/com/sun/faces/taglib/jsf_core/subviewtag.<br>java - if you need to access reqeuststatemanager's statemap multiple times in one method, only get the map once.<br> m jsf-ri/src/main/java/com/sun/faces/application/applicationimpl.<br>java - change the timing of initialization of elresolvers to fix the long standing faces bug, as well as implementing blake's optimization.<br> m jsf-ri/src/main/java/com/sun/faces/application/viewhandlerimpl.<br>java - if you need to access reqeuststatemanager's statemap multiple times in one method, only get the map once.<br> m jsf-ri/src/main/java/com/sun/faces/config/configurelistener.<br>java - the empty resolver must be an instance of chaintypecompositeelresolver.<br> m jsf-ri/src/main/java/com/sun/faces/util/requeststatemanager.<br>java - provide static accessor to get the map.<br> m jsf-ri/build-tests.<br>xml m jsf-ri/build.<br>xml - make sure the build identifier is always updated.<br> m jsf-ri/systest-per-webapp/build.<br>xml m jsf-ri/systest-per-webapp/build-tests.<br>xml   replace-variableresolver-programmatically,   add-elresolver-and-replace-variableresolver-programmatically,   replace-variableresolver-and-add-elresolver-programmatically, m jsf-ri/systest/src/com/sun/faces/systest/model/testbean.<br>java m jsf-ri/systest/web/web-inf/faces-config.<br>xml - content for resourcebundletype facesresourcebundleresolvergettypetest a jsf-ri/src/main/java/com/sun/faces/el/demuxcompositeelresolver.<br>java a jsf-ri/src/main/java/com/sun/faces/el/chaintypecompositeelresolver.<br>java - these new classes are the heart of blake's enhancement.<br> a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/src a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/src/java a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/src/java/com a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/src/java/com/sun a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/src/java/com/sun/faces a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/src/java/com/sun/faces/systest a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/src/java/com/sun/faces/systest/replacevariableresolvertestcase.<br>java a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/src/java/com/sun/faces/systest/newvariableresolver.<br>java a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/src/java/com/sun/faces/systest/bean.<br>java a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/src/java/com/sun/faces/systest/programmaticaddvariableresolverlistener.<br>java a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/web a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/web/web-inf a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/web/web-inf/faces-config.<br>xml a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/web/web-inf/web.<br>xml a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/web/test.<br>jsp a jsf-ri/systest-per-webapp/replace-variableresolver-programmatically/web/test1.<br>jsp a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/src a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/src/java a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/src/java/com a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/src/java/com/sun a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/src/java/com/sun/faces a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/src/java/com/sun/faces/systest a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/src/java/com/sun/faces/systest/newvariableresolver.<br>java a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/src/java/com/sun/faces/systest/bean.<br>java a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/src/java/com/sun/faces/systest/addelresolverandreplacevariableresolverprogrammaticallytestcase.<br>java a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/src/java/com/sun/faces/systest/newelresolver.<br>java a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/src/java/com/sun/faces/systest/programmaticaddelresolverlistenerandsetvariableresolver.<br>java a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/web a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/web/web-inf a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/web/web-inf/faces-config.<br>xml a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/web/web-inf/web.<br>xml a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/web/test.<br>jsp a jsf-ri/systest-per-webapp/add-elresolver-and-replace-variableresolver-programmatically/web/test1.<br>jsp a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/src a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/src/java a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/src/java/com a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/src/java/com/sun a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/src/java/com/sun/faces a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/src/java/com/sun/faces/systest a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/src/java/com/sun/faces/systest/newvariableresolver.<br>java a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/src/java/com/sun/faces/systest/programmaticsetvariableresolverandaddelresolverlistenerfilter.<br>java a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/src/java/com/sun/faces/systest/bean.<br>java a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/src/java/com/sun/faces/systest/replacevariableresolverandaddelresolverprogrammaticallytestcase.<br>java a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/src/java/com/sun/faces/systest/newelresolver.<br>java a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/web a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/web/web-inf a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/web/web-inf/faces-config.<br>xml a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/web/web-inf/web.<br>xml a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/web/test.<br>jsp a jsf-ri/systest-per-webapp/replace-variableresolver-and-add-elresolver-programmatically/web/test1.<br>jsp a jsf-ri/systest/src/com/sun/faces/systest/resources/resourcebundleelresolvertestcase.<br>java a jsf-ri/systest/web/resourcebundle05.<br>jsp - lots of new tests!	3	-2	 1391[0] commit[0] 5740f9cb061e74bf3f9c85286c4f7e9520ee092f[0] complete[0] forward[0] port[0] of[0] jsf[0] 1[0] .2[0] performance[0] fixes[0] from[0] adf[0] team[0] to[0] 2[0] .1[0] head[0] https[0] ://javaserverfaces[0] [[Sentence=-1,1=word max, 1-5]] dev[0] [[Sentence=-1,1=word max, 1-5]] java[0] [[Sentence=-1,1=word max, 1-5]] net/issues/show_bug[0] [[Sentence=-1,1=word max, 1-5]] cgi[0] [[Sentence=-1,1=word max, 1-5]] id[0] 1720[0] this[0] code[0] was[0] authored[0] by[0] blake[0] sullivan[0] ed[0] burns[-1] and[0] others[0] [[Sentence=-2,1=word max, 1-5]] since[0] it[0] was[0] already[0] checked[0] in[0] to[0] 1[0] .2[0] i'm[0] not[0] sending[0] it[0] out[0] for[0] review[0] [[Sentence=-1,1=word max, 1-5]] section[0] modified[0] files[0] m[0] jsf[0] api/src/main/java/javax/faces/webapp/uicomponentclassictagbase[0] [[Sentence=-1,1=word max, 1-5]] java[0] remove[0] the[0] context_map[0] because[0] in[0] jsf[0] 2[0] .0[0] we[0] have[0] the[0] context[0] attributes[0] map[0] [[Sentence=-1,1=word max, 1-5]] in[0] findcomponent[0] pass[0] the[0] context[0] attributes[0] map[0] to[0] _getparentuicomponentclassictagbase[0] [[Sentence=-1,1=word max, 1-5]] in[0] the[0] version[0] of[0] _getparentuicomponentclassictagbase[0] that[0] takes[0] a[0] facescontext[0] as[0] its[0] argument[-1] pass[0] the[0] context[0] attributes[0] map[0] [[Sentence=-2,1=word max, 1-5]] in[0] {push[0] pop}uicomponentclassictagbase[0] do{start[0] end}tag[0] generateincrementedid[0] setjspid[0] use[0] the[0] context[0] attributes[0] map[0] [[Sentence=-1,1=word max, 1-5]] remove[0] getcontextmap[0] _getcontextmap[0] releasecontextmap[0] m[0] jsf[0] ri/test/com/sun/faces/application/testhasdeprstatemanagerimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] fix[0] imports[0] [[Sentence=-1,1=word max, 1-5]] very[0] important[0] call[0] to[0] newview[0] [[Sentence=-1,1=word max, 1-5]] setviewid[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/test/com/sun/faces/el/testnestedelresolver[0] [[Sentence=-1,1=word max, 1-5]] java[0] very[0] important[0] make[0] sure[0] the[0] facescompositeelresolver[0] is[0] an[0] instance[0] of[0] the[0] new[0] class[0] demuxcompositeelresolver[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/main/java/com/sun/faces/lifecycle/elresolverinitphaselistener[0] [[Sentence=-1,1=word max, 1-5]] java[0] the[0] changes[0] in[0] this[0] class[0] are[0] very[0] delicate[0] and[0] important[0] [[Sentence=-1,1=word max, 1-5]] this[0] change[0] bundle[0] changes[0] the[0] order[0] of[0] instantiation[0] of[0] various[0] resolvers[1] to[0] fix[0] a[0] long[0] standing[0] mojarra[0] bug[0] regarding[0] programmatic[0] elresolver[0] installation[0] [[Sentence=-1,2=word max, 1-5]] m[0] jsf[0] ri/src/main/java/com/sun/faces/el/scopedattributeelresolver[0] [[Sentence=-1,1=word max, 1-5]] java[0] in[0] getvalue[0] use[0] property[0] [[Sentence=-1,1=word max, 1-5]] tostring[0] rather[0] than[0] string[0] property[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/main/java/com/sun/faces/el/implicitobjectelresolver[0] [[Sentence=-1,1=word max, 1-5]] java[0] issue[0] 1616[0] [[Sentence=-1,1=word max, 1-5]] use[0] a[0] hashmap[0] rather[0] than[0] a[0] binarysearch[0] [[Sentence=-1,1=word max, 1-5]] take[0] great[2] care[1] to[0] ensure[0] the[0] list[0] of[0] implicit[0] objects[0] is[0] correct[0] with[0] respect[2] to[0] jsf[0] 2[0] .0[0] [[Sentence=-1,3=word max, 1-5]] m[0] jsf[0] ri/src/main/java/com/sun/faces/el/facescompositeelresolver[0] [[Sentence=-1,1=word max, 1-5]] java[0] this[0] is[0] part[0] of[0] blake's[0] big[0] elresolver[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]] the[0] core[0] concept[0] in[0] this[0] refactoring[0] is[0] the[0] realization[0] that[0] the[0] design[0] of[0] el[0] uses[0] the[0] presence[0] of[0] null[0] as[0] the[0] value[0] of[0] the[0] base[0] argument[-1] to[0] mean[0] act[0] as[0] variableresolver[0] [[Sentence=-2,1=word max, 1-5]] this[0] was[0] the[0] design[0] choice[0] taken[0] by[0] pierre[0] delisle[0] and[0] the[0] unified[0] el[0] exeprt[0] group[0] back[0] in[0] the[0] jsr[0] -252[0] days[0] [[Sentence=-1,1=word max, 1-5]] it[0] works[0] well[0] enough[0] but[0] it[0] does[0] carry[0] with[0] it[0] a[0] performance[0] problem[-1] the[0] set[0] of[0] implicit[0] objects[0] is[0] known[0] by[0] the[0] system[0] and[0] this[0] knowledge[0] can[0] be[0] exploited[0] to[0] short[0] circuit[0] the[0] search[0] process[0] [[Sentence=-2,1=word max, 1-5]] blake's[0] enhancement[0] leverages[0] this[0] knowledge[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/main/java/com/sun/faces/el/variableresolverchainwrapper[0] [[Sentence=-1,1=word max, 1-5]] java[0] lots[0] of[0] tweaks[0] here[0] to[0] get[0] blake's[0] enhancement[0] to[0] work[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/main/java/com/sun/faces/el/elutils[0] [[Sentence=-1,1=word max, 1-5]] java[0] change[0] the[0] signature[0] of[0] buildfacesresolver[0] to[0] support[0] blake's[0] optimization[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/main/java/com/sun/faces/application/applicationassociate[0] [[Sentence=-1,1=word max, 1-5]] java[0] ivars[0] for[0] vrchainwrappers[0] for[0] blake's[0] optimization[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/main/java/com/sun/faces/el/implicitobjectelresolverforjsp[0] [[Sentence=-1,1=word max, 1-5]] java[0] use[0] the[0] map[0] not[0] the[0] binary[0] search[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/main/java/com/sun/faces/el/variableresolverimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] add[0] a[0] getdelegate[0] method[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/main/java/com/sun/faces/taglib/jsf_core/loadbundletag[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] ri/src/main/java/com/sun/faces/taglib/jsf_core/subviewtag[0] [[Sentence=-1,1=word max, 1-5]] java[0] if[0] you[0] need[0] to[0] access[0] reqeuststatemanager's[0] statemap[0] multiple[0] times[0] in[0] one[0] method[0] only[0] get[0] the[0] map[0] once[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/main/java/com/sun/faces/application/applicationimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] change[0] the[0] timing[0] of[0] initialization[0] of[0] elresolvers[0] to[0] fix[0] the[0] long[0] standing[0] faces[0] bug[0] as[0] well[0] as[0] implementing[0] blake's[0] optimization[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/main/java/com/sun/faces/application/viewhandlerimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] if[0] you[0] need[0] to[0] access[0] reqeuststatemanager's[0] statemap[0] multiple[0] times[0] in[0] one[0] method[0] only[0] get[0] the[0] map[0] once[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/main/java/com/sun/faces/config/configurelistener[0] [[Sentence=-1,1=word max, 1-5]] java[0] the[0] empty[0] resolver[1] must[0] be[0] an[0] instance[0] of[0] chaintypecompositeelresolver[0] [[Sentence=-1,2=word max, 1-5]] m[0] jsf[0] ri/src/main/java/com/sun/faces/util/requeststatemanager[0] [[Sentence=-1,1=word max, 1-5]] java[0] provide[0] static[0] accessor[0] to[0] get[0] the[0] map[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/build[0] tests[0] [[Sentence=-1,1=word max, 1-5]] xml[0] m[0] jsf[0] ri/build[0] [[Sentence=-1,1=word max, 1-5]] xml[0] make[0] sure[0] the[0] build[0] identifier[0] is[0] always[0] updated[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/systest[0] per[0] webapp/build[0] [[Sentence=-1,1=word max, 1-5]] xml[0] m[0] jsf[0] ri/systest[0] per[0] webapp/build[0] tests[0] [[Sentence=-1,1=word max, 1-5]] xml[0] replace[0] variableresolver[0] programmatically[0] add[0] elresolver[0] and[0] replace[0] variableresolver[0] programmatically[0] replace[0] variableresolver[0] and[0] add[0] elresolver[0] programmatically[0] m[0] jsf[0] ri/systest/src/com/sun/faces/systest/model/testbean[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] ri/systest/web/web[0] inf/faces[0] config[0] [[Sentence=-1,1=word max, 1-5]] xml[0] content[0] for[0] resourcebundletype[0] facesresourcebundleresolvergettypetest[0] a[0] jsf[0] ri/src/main/java/com/sun/faces/el/demuxcompositeelresolver[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/src/main/java/com/sun/faces/el/chaintypecompositeelresolver[0] [[Sentence=-1,1=word max, 1-5]] java[0] these[0] new[0] classes[0] are[0] the[0] heart[0] of[0] blake's[0] enhancement[0] [[Sentence=-1,1=word max, 1-5]] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] programmatically[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] programmatically/src[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] programmatically/src/java[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] programmatically/src/java/com[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] programmatically/src/java/com/sun[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] programmatically/src/java/com/sun/faces[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] programmatically/src/java/com/sun/faces/systest[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] programmatically/src/java/com/sun/faces/systest/replacevariableresolvertestcase[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] programmatically/src/java/com/sun/faces/systest/newvariableresolver[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] programmatically/src/java/com/sun/faces/systest/bean[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] programmatically/src/java/com/sun/faces/systest/programmaticaddvariableresolverlistener[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] programmatically/web[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] programmatically/web/web[0] inf[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] programmatically/web/web[0] inf/faces[0] config[0] [[Sentence=-1,1=word max, 1-5]] xml[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] programmatically/web/web[0] inf/web[0] [[Sentence=-1,1=word max, 1-5]] xml[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] programmatically/web/test[0] [[Sentence=-1,1=word max, 1-5]] jsp[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] programmatically/web/test1[0] [[Sentence=-1,1=word max, 1-5]] jsp[0] a[0] jsf[0] ri/systest[0] per[0] webapp/add[0] elresolver[0] and[0] replace[0] variableresolver[0] programmatically[0] a[0] jsf[0] ri/systest[0] per[0] webapp/add[0] elresolver[0] and[0] replace[0] variableresolver[0] programmatically/src[0] a[0] jsf[0] ri/systest[0] per[0] webapp/add[0] elresolver[0] and[0] replace[0] variableresolver[0] programmatically/src/java[0] a[0] jsf[0] ri/systest[0] per[0] webapp/add[0] elresolver[0] and[0] replace[0] variableresolver[0] programmatically/src/java/com[0] a[0] jsf[0] ri/systest[0] per[0] webapp/add[0] elresolver[0] and[0] replace[0] variableresolver[0] programmatically/src/java/com/sun[0] a[0] jsf[0] ri/systest[0] per[0] webapp/add[0] elresolver[0] and[0] replace[0] variableresolver[0] programmatically/src/java/com/sun/faces[0] a[0] jsf[0] ri/systest[0] per[0] webapp/add[0] elresolver[0] and[0] replace[0] variableresolver[0] programmatically/src/java/com/sun/faces/systest[0] a[0] jsf[0] ri/systest[0] per[0] webapp/add[0] elresolver[0] and[0] replace[0] variableresolver[0] programmatically/src/java/com/sun/faces/systest/newvariableresolver[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/systest[0] per[0] webapp/add[0] elresolver[0] and[0] replace[0] variableresolver[0] programmatically/src/java/com/sun/faces/systest/bean[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/systest[0] per[0] webapp/add[0] elresolver[0] and[0] replace[0] variableresolver[0] programmatically/src/java/com/sun/faces/systest/addelresolverandreplacevariableresolverprogrammaticallytestcase[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/systest[0] per[0] webapp/add[0] elresolver[0] and[0] replace[0] variableresolver[0] programmatically/src/java/com/sun/faces/systest/newelresolver[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/systest[0] per[0] webapp/add[0] elresolver[0] and[0] replace[0] variableresolver[0] programmatically/src/java/com/sun/faces/systest/programmaticaddelresolverlistenerandsetvariableresolver[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/systest[0] per[0] webapp/add[0] elresolver[0] and[0] replace[0] variableresolver[0] programmatically/web[0] a[0] jsf[0] ri/systest[0] per[0] webapp/add[0] elresolver[0] and[0] replace[0] variableresolver[0] programmatically/web/web[0] inf[0] a[0] jsf[0] ri/systest[0] per[0] webapp/add[0] elresolver[0] and[0] replace[0] variableresolver[0] programmatically/web/web[0] inf/faces[0] config[0] [[Sentence=-1,1=word max, 1-5]] xml[0] a[0] jsf[0] ri/systest[0] per[0] webapp/add[0] elresolver[0] and[0] replace[0] variableresolver[0] programmatically/web/web[0] inf/web[0] [[Sentence=-1,1=word max, 1-5]] xml[0] a[0] jsf[0] ri/systest[0] per[0] webapp/add[0] elresolver[0] and[0] replace[0] variableresolver[0] programmatically/web/test[0] [[Sentence=-1,1=word max, 1-5]] jsp[0] a[0] jsf[0] ri/systest[0] per[0] webapp/add[0] elresolver[0] and[0] replace[0] variableresolver[0] programmatically/web/test1[0] [[Sentence=-1,1=word max, 1-5]] jsp[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] and[0] add[0] elresolver[0] programmatically[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] and[0] add[0] elresolver[0] programmatically/src[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] and[0] add[0] elresolver[0] programmatically/src/java[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] and[0] add[0] elresolver[0] programmatically/src/java/com[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] and[0] add[0] elresolver[0] programmatically/src/java/com/sun[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] and[0] add[0] elresolver[0] programmatically/src/java/com/sun/faces[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] and[0] add[0] elresolver[0] programmatically/src/java/com/sun/faces/systest[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] and[0] add[0] elresolver[0] programmatically/src/java/com/sun/faces/systest/newvariableresolver[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] and[0] add[0] elresolver[0] programmatically/src/java/com/sun/faces/systest/programmaticsetvariableresolverandaddelresolverlistenerfilter[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] and[0] add[0] elresolver[0] programmatically/src/java/com/sun/faces/systest/bean[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] and[0] add[0] elresolver[0] programmatically/src/java/com/sun/faces/systest/replacevariableresolverandaddelresolverprogrammaticallytestcase[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] and[0] add[0] elresolver[0] programmatically/src/java/com/sun/faces/systest/newelresolver[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] and[0] add[0] elresolver[0] programmatically/web[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] and[0] add[0] elresolver[0] programmatically/web/web[0] inf[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] and[0] add[0] elresolver[0] programmatically/web/web[0] inf/faces[0] config[0] [[Sentence=-1,1=word max, 1-5]] xml[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] and[0] add[0] elresolver[0] programmatically/web/web[0] inf/web[0] [[Sentence=-1,1=word max, 1-5]] xml[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] and[0] add[0] elresolver[0] programmatically/web/test[0] [[Sentence=-1,1=word max, 1-5]] jsp[0] a[0] jsf[0] ri/systest[0] per[0] webapp/replace[0] variableresolver[0] and[0] add[0] elresolver[0] programmatically/web/test1[0] [[Sentence=-1,1=word max, 1-5]] jsp[0] a[0] jsf[0] ri/systest/src/com/sun/faces/systest/resources/resourcebundleelresolvertestcase[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/systest/web/resourcebundle05[0] [[Sentence=-1,1=word max, 1-5]] jsp[0] lots[0] of[0] new[0] tests[0] [[Sentence=-1,1=word max, 1-5]][[[3,-2 max of sentences]]]
1495 commit 98f57b0443fc8ae94474aeeb35f2ce80d83e1d38 fix for issue 1588 index: jsf-ri/src/com/sun/faces/config/webconfiguration.java                                           currently webconfiguration.isset() only covers context parameters that start with "com.sun.faces". enhanced this to include "javax.faces" context parameters as well so that multiviewhandler can check to see whether the "javax.faces.default_suffix" parameter is set. switch the setparams from a list string  to a set string  and use a hashset instead of an arraylist to allow for faster lookups. index: jsf-ri/src/com/sun/faces/application/view/multiviewhandler.java                                                 if convertviewid() fails to find a physical resource corresponding to the converted view id, rather than returning an unconverted view id (which triggered the request dispatch infinite loop from issue 1001), fall back on the legacy 1.2 behavior. let webconfiguration do the string split for us. moved common code into appendorreplaceextension() and refactor convertviewid() and legacyconvertviewid() to use this utility method. index: jsf-ri/src/com/sun/faces/application/view/jspviewhandlingstrategy.java                                                     remove getresource() check that was added to work around the request dispatch infinite loop reported in issue 1001. we'll no longer hit this now that multiviewhandler ensures that view ids are converted. 	1495 commit 98f57b0443fc8ae94474aeeb35f2ce80d83e1d38 fix for issue 1588 index: jsf-ri/src/com/sun/faces/config/webconfiguration.<br>java                                           currently webconfiguration.<br>isset( only covers context parameters that start with "com.<br>sun.<br>faces"<br> enhanced this to include "javax.<br>faces" context parameters as well so that multiviewhandler can check to see whether the "javax.<br>faces.<br>default_suffix" parameter is set.<br> switch the setparams from a list string  to a set string  and use a hashset instead of an arraylist to allow for faster lookups.<br> index: jsf-ri/src/com/sun/faces/application/view/multiviewhandler.<br>java                                                 if convertviewid( fails to find a physical resource corresponding to the converted view id, rather than returning an unconverted view id (which triggered the request dispatch infinite loop from issue 1001) fall back on the legacy 1.2 behavior.<br> let webconfiguration do the string split for us.<br> moved common code into appendorreplaceextension( and refactor convertviewid( and legacyconvertviewid( to use this utility method.<br> index: jsf-ri/src/com/sun/faces/application/view/jspviewhandlingstrategy.<br>java                                                     remove getresource( check that was added to work around the request dispatch infinite loop reported in issue 1001.<br> we'll no longer hit this now that multiviewhandler ensures that view ids are converted.	1	-1	 1495[0] commit[0] 98f57b0443fc8ae94474aeeb35f2ce80d83e1d38[0] fix[0] for[0] issue[0] 1588[0] index[0] jsf[0] ri/src/com/sun/faces/config/webconfiguration[0] [[Sentence=-1,1=word max, 1-5]] java[0] currently[0] webconfiguration[0] [[Sentence=-1,1=word max, 1-5]] isset[0] only[0] covers[0] context[0] parameters[0] that[0] start[0] with[0] com[0] [[Sentence=-1,1=word max, 1-5]] sun[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] enhanced[0] this[0] to[0] include[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] context[0] parameters[0] as[0] well[0] so[0] that[0] multiviewhandler[0] can[0] check[0] to[0] see[0] whether[0] the[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] default_suffix[0] parameter[0] is[0] set[0] [[Sentence=-1,1=word max, 1-5]] switch[0] the[0] setparams[0] from[0] a[0] list[0] string[0] to[0] a[0] set[0] string[0] and[0] use[0] a[0] hashset[0] instead[0] of[0] an[0] arraylist[0] to[0] allow[0] for[0] faster[0] lookups[0] [[Sentence=-1,1=word max, 1-5]] index[0] jsf[0] ri/src/com/sun/faces/application/view/multiviewhandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] if[0] convertviewid[0] fails[0] to[0] find[0] a[0] physical[0] resource[0] corresponding[0] to[0] the[0] converted[0] view[0] id[0] rather[0] than[0] returning[0] an[0] unconverted[0] view[0] id[0] which[0] triggered[0] the[0] request[0] dispatch[0] infinite[0] loop[0] from[0] issue[0] 1001[0] fall[0] back[0] on[0] the[0] legacy[0] 1[0] .2[0] behavior[0] [[Sentence=-1,1=word max, 1-5]] let[0] webconfiguration[0] do[0] the[0] string[0] split[0] for[0] us[0] [[Sentence=-1,1=word max, 1-5]] moved[0] common[0] code[0] into[0] appendorreplaceextension[0] and[0] refactor[0] convertviewid[0] and[0] legacyconvertviewid[0] to[0] use[0] this[0] utility[0] method[0] [[Sentence=-1,1=word max, 1-5]] index[0] jsf[0] ri/src/com/sun/faces/application/view/jspviewhandlingstrategy[0] [[Sentence=-1,1=word max, 1-5]] java[0] remove[0] getresource[0] check[0] that[0] was[0] added[0] to[0] work[0] around[0] the[0] request[0] dispatch[0] infinite[0] loop[0] reported[0] in[0] issue[0] 1001[0] [[Sentence=-1,1=word max, 1-5]] we'll[0] no[0] longer[0] hit[0] this[0] now[0] that[0] multiviewhandler[0] ensures[0] that[0] view[0] ids[0] are[0] converted[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
1498 commit 40a176996aba0125ae4d96cb24ffbec0f7e9eb89    https://javaserverfaces.dev.java.net/issues/show_bug.cgi?id 1313    section: modified files ---------------------------- m jsf-ri/test/com/sun/faces/application/testviewhandlerimpl.java - test changes to reflect implementation internals change. m jsf-ri/src/com/sun/faces/facelets/compiler/uiinstructionhandler.java - if a component is found, disable events being published when the component is removed and re-added to the view. m jsf-ri/src/com/sun/faces/facelets/tag/jsf/componentsupport.java - added utility method that handlers can call to determine if view modifications events should be fired or not. m jsf-ri/src/com/sun/faces/facelets/tag/jsf/componenttaghandlerdelegateimpl.java - refactoring of the apply() method into smaller methods that can be overridden by subclasses. for example, finding if a component resource is already in the view is different from finding a standard component in the view. - added similar logic to prevent event publishing in certain cases as what was added to uiinstructionhandler m jsf-ri/src/com/sun/faces/facelets/tag/jsf/taghandlerdelegatefactoryimpl.java - added new delegates for component resources. m jsf-ri/src/com/sun/faces/facelets/tag/jsf/html/htmllibrary.java - added taghandlers for h:outputstylesheet or h:outputscript. m jsf-ri/src/com/sun/faces/facelets/tag/jstl/core/sethandler.java - maintain parity with jsf 1.2 as to when this handler is applied. important to keep the flash behaving properly. m jsf-ri/src/com/sun/faces/application/applicationassociate.java - added applicationstateinfo access m jsf-ri/src/com/sun/faces/application/view/statemanagementstrategyimpl.java - refactor to:   remove dependency on faceletviewhandlingstrategy   moved dynamic component add/removal tracking to statecontext. m jsf-ri/src/com/sun/faces/application/view/faceletviewhandlingstrategy.java - removed tight coupling with statemanagementstrategyimpl. - updated build view to re-apply the handlers if the view has already been built. m jsf-ri/systest/src/com/sun/faces/facelets/faceletstestcase.java - added test case for 1313. m jsf-ri/systest-per-webapp/flash/src/java/com/sun/faces/systest/flashtestcase.java - commented an assertion that seemed invalid (i.e. depended on c:set being invoked during restore view, but not being invoked in render response when using partial state saving) a jsf-ri/src/com/sun/faces/context/statecontext.java - helper class for partial state saving. a jsf-ri/src/com/sun/faces/facelets/tag/jsf/html/stylesheetresourcehandler.java a jsf-ri/src/com/sun/faces/facelets/tag/jsf/html/componentresourcedelegate.java a jsf-ri/src/com/sun/faces/facelets/tag/jsf/html/scriptresourcedelegate.java a jsf-ri/src/com/sun/faces/facelets/tag/jsf/html/scriptresourcehandler.java a jsf-ri/src/com/sun/faces/facelets/tag/jsf/html/stylesheetresourcedelegate.java - new delegates/handlers for h:outputstylesheet h:outputscript. a jsf-ri/src/com/sun/faces/application/applicationstateinfo.java - per-application information on partial state saving configuration. a jsf-ri/src/com/sun/faces/util/componentstruct.java - refactored componentstruct to be a public utility class. a jsf-ri/systest/src/com/sun/faces/systest/model/faceletsbean.java a jsf-ri/systest/web/facelets/issue1313.xhtml a jsf-ri/systest/web/facelets/frag1.xhtml a jsf-ri/systest/web/facelets/frag2.xhtml - test case r edburns 	1498 commit 40a176996aba0125ae4d96cb24ffbec0f7e9eb89    https://javaserverfaces.<br>dev.<br>java.<br>net/issues/show_bug.<br>cgi?<br>id 1313    section: modified files - m jsf-ri/test/com/sun/faces/application/testviewhandlerimpl.<br>java - test changes to reflect implementation internals change.<br> m jsf-ri/src/com/sun/faces/facelets/compiler/uinstructionhandler.<br>java - if a component is found, disable events being published when the component is removed and re-added to the view.<br> m jsf-ri/src/com/sun/faces/facelets/tag/jsf/componentsupport.<br>java - added utility method that handlers can call to determine if view modifications events should be fired or not.<br> m jsf-ri/src/com/sun/faces/facelets/tag/jsf/componenttaghandlerdelegateimpl.<br>java - refactoring of the apply( method into smaller methods that can be overridden by subclasses.<br> for example, finding if a component resource is already in the view is different from finding a standard component in the view.<br> - added similar logic to prevent event publishing in certain cases as what was added to uinstructionhandler m jsf-ri/src/com/sun/faces/facelets/tag/jsf/taghandlerdelegatefactoryimpl.<br>java - added new delegates for component resources.<br> m jsf-ri/src/com/sun/faces/facelets/tag/jsf/html/htmllibrary.<br>java - added taghandlers for h:outputstylesheet or h:outputscript.<br> m jsf-ri/src/com/sun/faces/facelets/tag/jstl/core/sethandler.<br>java - maintain parity with jsf 1.2 as to when this handler is applied.<br> important to keep the flash behaving properly.<br> m jsf-ri/src/com/sun/faces/application/applicationassociate.<br>java - added applicationstateinfo access m jsf-ri/src/com/sun/faces/application/view/statemanagementstrategyimpl.<br>java - refactor to:   remove dependency on faceletviewhandlingstrategy   moved dynamic component add/removal tracking to statecontext.<br> m jsf-ri/src/com/sun/faces/application/view/faceletviewhandlingstrategy.<br>java - removed tight coupling with statemanagementstrategyimpl.<br> - updated build view to re-apply the handlers if the view has already been built.<br> m jsf-ri/systest/src/com/sun/faces/facelets/faceletstestcase.<br>java - added test case for 1313.<br> m jsf-ri/systest-per-webapp/flash/src/java/com/sun/faces/systest/flashtestcase.<br>java - commented an assertion that seemed invalid (i.<br>e.<br> depended on c:set being invoked during restore view, but not being invoked in render response when using partial state saving) a jsf-ri/src/com/sun/faces/context/statecontext.<br>java - helper class for partial state saving.<br> a jsf-ri/src/com/sun/faces/facelets/tag/jsf/html/stylesheetresourcehandler.<br>java a jsf-ri/src/com/sun/faces/facelets/tag/jsf/html/componentresourcedelegate.<br>java a jsf-ri/src/com/sun/faces/facelets/tag/jsf/html/scriptresourcedelegate.<br>java a jsf-ri/src/com/sun/faces/facelets/tag/jsf/html/scriptresourcehandler.<br>java a jsf-ri/src/com/sun/faces/facelets/tag/jsf/html/stylesheetresourcedelegate.<br>java - new delegates/handlers for h:outputstylesheet h:outputscript.<br> a jsf-ri/src/com/sun/faces/application/applicationstateinfo.<br>java - per-application information on partial state saving configuration.<br> a jsf-ri/src/com/sun/faces/util/componentstruct.<br>java - refactored componentstruct to be a public utility class.<br> a jsf-ri/systest/src/com/sun/faces/systest/model/faceletsbean.<br>java a jsf-ri/systest/web/facelets/issue1313.<br>xhtml a jsf-ri/systest/web/facelets/frag1.<br>xhtml a jsf-ri/systest/web/facelets/frag2.<br>xhtml - test case are edburns	1	-3	 1498[0] commit[0] 40a176996aba0125ae4d96cb24ffbec0f7e9eb89[0] https[0] ://javaserverfaces[0] [[Sentence=-1,1=word max, 1-5]] dev[0] [[Sentence=-1,1=word max, 1-5]] java[0] [[Sentence=-1,1=word max, 1-5]] net/issues/show_bug[0] [[Sentence=-1,1=word max, 1-5]] cgi[0] [[Sentence=-1,1=word max, 1-5]] id[0] 1313[0] section[0] modified[0] files[0] m[0] jsf[0] ri/test/com/sun/faces/application/testviewhandlerimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] test[0] changes[0] to[0] reflect[0] implementation[0] internals[0] change[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/com/sun/faces/facelets/compiler/uiinstructionhandler/ri/src/com/sun/faces/facelets/compiler/uinstructionhandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] if[0] a[0] component[0] is[0] found[0] disable[0] events[0] being[0] published[0] when[0] the[0] component[0] is[0] removed[0] and[0] re[0] added[0] to[0] the[0] view[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/componentsupport[0] [[Sentence=-1,1=word max, 1-5]] java[0] added[0] utility[0] method[0] that[0] handlers[0] can[0] call[0] to[0] determine[0] if[0] view[0] modifications[0] events[0] should[0] be[0] fired[-2] or[0] not[0] [[Sentence=-3,1=word max, 1-5]] m[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/componenttaghandlerdelegateimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] refactoring[0] of[0] the[0] apply[0] method[0] into[0] smaller[0] methods[0] that[0] can[0] be[0] overridden[0] by[0] subclasses[0] [[Sentence=-1,1=word max, 1-5]] for[0] example[0] finding[0] if[0] a[0] component[0] resource[0] is[0] already[0] in[0] the[0] view[0] is[0] different[0] from[0] finding[0] a[0] standard[0] component[0] in[0] the[0] view[0] [[Sentence=-1,1=word max, 1-5]] added[0] similar[0] logic[0] to[0] prevent[0] event[0] publishing[0] in[0] certain[0] cases[0] as[0] what[0] was[0] added[0] to[0] uiinstructionhandler/uinstructionhandler[0] m[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/taghandlerdelegatefactoryimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] added[0] new[0] delegates[0] for[0] component[0] resources[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/html/htmllibrary[0] [[Sentence=-1,1=word max, 1-5]] java[0] added[0] taghandlers[0] for[0] h[0] outputstylesheet[0] or[0] h[0] outputscript[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jstl/core/sethandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] maintain[0] parity[0] with[0] jsf[0] 1[0] .2[0] as[0] to[0] when[0] this[0] handler[0] is[0] applied[0] [[Sentence=-1,1=word max, 1-5]] important[0] to[0] keep[0] the[0] flash[0] behaving[0] properly[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/com/sun/faces/application/applicationassociate[0] [[Sentence=-1,1=word max, 1-5]] java[0] added[0] applicationstateinfo[0] access[0] m[0] jsf[0] ri/src/com/sun/faces/application/view/statemanagementstrategyimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] refactor[0] to[0] remove[0] dependency[0] on[0] faceletviewhandlingstrategy[0] moved[0] dynamic[0] component[0] add/removal[0] tracking[0] to[0] statecontext[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/com/sun/faces/application/view/faceletviewhandlingstrategy[0] [[Sentence=-1,1=word max, 1-5]] java[0] removed[0] tight[0] coupling[0] with[0] statemanagementstrategyimpl[0] [[Sentence=-1,1=word max, 1-5]] updated[0] build[0] view[0] to[0] re[0] apply[0] the[0] handlers[0] if[0] the[0] view[0] has[0] already[0] been[0] built[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/systest/src/com/sun/faces/facelets/faceletstestcase[0] [[Sentence=-1,1=word max, 1-5]] java[0] added[0] test[0] case[0] for[0] 1313[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/systest[0] per[0] webapp/flash/src/java/com/sun/faces/systest/flashtestcase[0] [[Sentence=-1,1=word max, 1-5]] java[0] commented[0] an[0] assertion[0] that[0] seemed[0] invalid[-1] i[0] [[Sentence=-2,1=word max, 1-5]] e[0] [[Sentence=-1,1=word max, 1-5]] depended[0] on[0] c[0] set[0] being[0] invoked[0] during[0] restore[0] view[0] but[0] not[0] being[0] invoked[0] in[0] render[0] response[0] when[0] using[0] partial[0] state[0] saving[0] a[0] jsf[0] ri/src/com/sun/faces/context/statecontext[0] [[Sentence=-1,1=word max, 1-5]] java[0] helper[0] class[0] for[0] partial[0] state[0] saving[0] [[Sentence=-1,1=word max, 1-5]] a[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/html/stylesheetresourcehandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/html/componentresourcedelegate[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/html/scriptresourcedelegate[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/html/scriptresourcehandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/html/stylesheetresourcedelegate[0] [[Sentence=-1,1=word max, 1-5]] java[0] new[0] delegates/handlers[0] for[0] h[0] outputstylesheet[0] h[0] outputscript[0] [[Sentence=-1,1=word max, 1-5]] a[0] jsf[0] ri/src/com/sun/faces/application/applicationstateinfo[0] [[Sentence=-1,1=word max, 1-5]] java[0] per[0] application[0] information[0] on[0] partial[0] state[0] saving[0] configuration[0] [[Sentence=-1,1=word max, 1-5]] a[0] jsf[0] ri/src/com/sun/faces/util/componentstruct[0] [[Sentence=-1,1=word max, 1-5]] java[0] refactored[0] componentstruct[0] to[0] be[0] a[0] public[0] utility[0] class[0] [[Sentence=-1,1=word max, 1-5]] a[0] jsf[0] ri/systest/src/com/sun/faces/systest/model/faceletsbean[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/systest/web/facelets/issue1313[0] [[Sentence=-1,1=word max, 1-5]] xhtml[0] a[0] jsf[0] ri/systest/web/facelets/frag1[0] [[Sentence=-1,1=word max, 1-5]] xhtml[0] a[0] jsf[0] ri/systest/web/facelets/frag2[0] [[Sentence=-1,1=word max, 1-5]] xhtml[0] test[0] case[0] r[0] edburns[0] [[Sentence=-1,1=word max, 1-5]][[[1,-3 max of sentences]]]
2487 commit 61f74a086e0bf3778755ec91a14ea427ac1a4460 fix an issue discovered by david geary. consider the case where viewa uses f:ajax, which, as a side effect, installs jsf.js as a component resource. the logic that installs this resource adds a flag to the facescontext attributes map to short circuit similar handlers or renderer logic from having to perform the work twice. the problem with having that attribute present in the facescontext attributes map, and view transitions to a new view, any other handlers or renderers that need to install the component resource will behave as it has already be installed. this breaks components that require this resource being installed. the fix is to clear the attribute before invoking the main logic of renderresponsephase. section: modified files ---------------------------- m jsf-ri/src/com/sun/faces/facelets/tag/jsf/core/ajaxhandler.java - leverage renderkitutils for component resource searching. m jsf-ri/src/com/sun/faces/renderkit/renderkitutils.java - refactor the component resource searching logic into a new utility method - make hasscriptbeenrendered and setscriptasrendered public. implementation no relies on requeststatemanager. m jsf-ri/src/com/sun/faces/riconstants.java - removed script_state constant in favor of the one exposed by requeststatemanager m jsf-ri/src/com/sun/faces/lifecycle/phase.java - in the beforephase logic, call requeststatemanager.clearattributesforphase(). this will remove any attributes that the requeststatemanager manages that need to be removed prior to the execution of a particular phase. m jsf-ri/src/com/sun/faces/util/requeststatemanager.java - add script_state as an attribute that needs to be cleared before renderresponsephase r driscoll 	2487 commit 61f74a086e0bf3778755ec91a14ea427ac1a4460 fix an issue discovered by david geary.<br> consider the case where viewa uses f:ajax, which, as a side effect, installs jsf.<br>js as a component resource.<br> the logic that installs this resource adds a flag to the facescontext attributes map to short circuit similar handlers or renderer logic from having to perform the work twice.<br> the problem with having that attribute present in the facescontext attributes map, and view transitions to a new view, any other handlers or renderers that need to install the component resource will behave as it has already be installed.<br> this breaks components that require this resource being installed.<br> the fix is to clear the attribute before invoking the main logic of renderresponsephase.<br> section: modified files - m jsf-ri/src/com/sun/faces/facelets/tag/jsf/core/ajaxhandler.<br>java - leverage renderkitutils for component resource searching.<br> m jsf-ri/src/com/sun/faces/renderkit/renderkitutils.<br>java - refactor the component resource searching logic into a new utility method - make hasscriptbeenrendered and setscriptasrendered public.<br> implementation no relies on requeststatemanager.<br> m jsf-ri/src/com/sun/faces/riconstants.<br>java - removed script_state constant in favor of the one exposed by requeststatemanager m jsf-ri/src/com/sun/faces/lifecycle/phase.<br>java - in the beforephase logic, call requeststatemanager.<br>clearattributesforphase(<br> this will remove any attributes that the requeststatemanager manages that need to be removed prior to the execution of a particular phase.<br> m jsf-ri/src/com/sun/faces/util/requeststatemanager.<br>java - add script_state as an attribute that needs to be cleared before renderresponsephase are driscoll	2	-2	 2487[0] commit[0] 61f74a086e0bf3778755ec91a14ea427ac1a4460[0] fix[0] an[0] issue[0] discovered[0] by[0] david[0] geary[0] [[Sentence=-1,1=word max, 1-5]] consider[0] the[0] case[0] where[0] viewa[0] uses[0] f[0] ajax[0] which[0] as[0] a[0] side[0] effect[0] installs[0] jsf[0] [[Sentence=-1,1=word max, 1-5]] js[0] as[0] a[0] component[0] resource[0] [[Sentence=-1,1=word max, 1-5]] the[0] logic[0] that[0] installs[0] this[0] resource[0] adds[0] a[0] flag[0] to[0] the[0] facescontext[0] attributes[0] map[0] to[0] short[0] circuit[0] similar[0] handlers[0] or[0] renderer[0] logic[0] from[0] having[0] to[0] perform[0] the[0] work[0] twice[0] [[Sentence=-1,1=word max, 1-5]] the[0] problem[-1] with[0] having[0] that[0] attribute[0] present[0] in[0] the[0] facescontext[0] attributes[0] map[0] and[0] view[0] transitions[0] to[0] a[0] new[0] view[0] any[0] other[0] handlers[0] or[0] renderers[0] that[0] need[0] to[0] install[0] the[0] component[0] resource[0] will[0] behave[0] as[0] it[0] has[0] already[0] be[0] installed[0] [[Sentence=-2,1=word max, 1-5]] this[0] breaks[0] components[0] that[0] require[0] this[0] resource[0] being[0] installed[0] [[Sentence=-1,1=word max, 1-5]] the[0] fix[0] is[0] to[0] clear[0] the[0] attribute[0] before[0] invoking[0] the[0] main[0] logic[0] of[0] renderresponsephase[0] [[Sentence=-1,1=word max, 1-5]] section[0] modified[0] files[0] m[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/core/ajaxhandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] leverage[0] renderkitutils[0] for[0] component[0] resource[0] searching[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/com/sun/faces/renderkit/renderkitutils[0] [[Sentence=-1,1=word max, 1-5]] java[0] refactor[0] the[0] component[0] resource[0] searching[0] logic[0] into[0] a[0] new[0] utility[0] method[0] make[0] hasscriptbeenrendered[0] and[0] setscriptasrendered[0] public[0] [[Sentence=-1,1=word max, 1-5]] implementation[0] no[0] relies[0] on[0] requeststatemanager[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/com/sun/faces/riconstants[0] [[Sentence=-1,1=word max, 1-5]] java[0] removed[0] script_state[0] constant[0] in[0] favor[1] of[0] the[0] one[0] exposed[-1] by[0] requeststatemanager[0] m[0] jsf[0] ri/src/com/sun/faces/lifecycle/phase[0] [[Sentence=-2,2=word max, 1-5]] java[0] in[0] the[0] beforephase[0] logic[0] call[0] requeststatemanager[0] [[Sentence=-1,1=word max, 1-5]] clearattributesforphase[0] [[Sentence=-1,1=word max, 1-5]] this[0] will[0] remove[0] any[0] attributes[0] that[0] the[0] requeststatemanager[0] manages[0] that[0] need[0] to[0] be[0] removed[0] prior[0] to[0] the[0] execution[0] of[0] a[0] particular[0] phase[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/com/sun/faces/util/requeststatemanager[0] [[Sentence=-1,1=word max, 1-5]] java[0] add[0] script_state[0] as[0] an[0] attribute[0] that[0] needs[0] to[0] be[0] cleared[0] before[0] renderresponsephase[0] r[0] driscoll[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
2975 commit c57a7dfd7653bcc8c3a7128582cd9cb6bc7a20ca issue 1032 - component behavior api refactoring the following classes have been renamed: - behavior class -  clientbehavior interface - behaviorholder- clientbehaviorholder - behaviorcontext- clientbehaviorcontext - behaviorrenderer- clientbehaviorrenderer - behaviorbase- clientbehaviorbase - behaviorhint- clientbehaviorhint the following methods have also been renamed: - behaviorholder.addbehavior() -  clientbehaviorholder.addclientbehavior() - behaviorholder.getbehaviors() -  clientbehaviorholder.getclientbehaviors() - renderkit.addbehaviorrenderer() -  renderkit.addclientbehaviorrenderer() - renderkit.getbehaviorrenderertypes() -  renderkit.getclientbehaviorrenderertypes(). and we now have a new base javax.faces.component.behavior.behavior (empty) interface. this serves as the root of the behavior api hierarcy. for the moment, this only type of behaviors that we support our clientbehaviors, but we expect to add to this in 2.1. 	2975 commit c57a7dfd7653bcc8c3a7128582cd9cb6bc7a20ca issue 1032 - component behavior api refactoring the following classes have been renamed: - behavior class -  clientbehavior interface - behaviorholder- clientbehaviorholder - behaviorcontext- clientbehaviorcontext - behaviorrenderer- clientbehaviorrenderer - behaviorbase- clientbehaviorbase - behaviorhint- clientbehaviorhint the following methods have also been renamed: - behaviorholder.<br>addbehavior( -  clientbehaviorholder.<br>addclientbehavior( - behaviorholder.<br>getbehaviors( -  clientbehaviorholder.<br>getclientbehaviors( - renderkit.<br>addbehaviorrenderer( -  renderkit.<br>addclientbehaviorrenderer( - renderkit.<br>getbehaviorrenderertypes( -  renderkit.<br>getclientbehaviorrenderertypes(<br> and we now have a new base javax.<br>faces.<br>component.<br>behavior.<br>behavior (empty) interface.<br> this serves as the root of the behavior api hierarcy.<br> for the moment, this only type of behaviors that we support our clientbehaviors, but we expect to add to this in 2.1.	1	-1	 2975[0] commit[0] c57a7dfd7653bcc8c3a7128582cd9cb6bc7a20ca[0] issue[0] 1032[0] component[0] behavior[0] api[0] refactoring[0] the[0] following[0] classes[0] have[0] been[0] renamed[0] behavior[0] class[0] clientbehavior[0] interface[0] behaviorholder[0] clientbehaviorholder[0] behaviorcontext[0] clientbehaviorcontext[0] behaviorrenderer[0] clientbehaviorrenderer[0] behaviorbase[0] clientbehaviorbase[0] behaviorhint[0] clientbehaviorhint[0] the[0] following[0] methods[0] have[0] also[0] been[0] renamed[0] behaviorholder[0] [[Sentence=-1,1=word max, 1-5]] addbehavior[0] clientbehaviorholder[0] [[Sentence=-1,1=word max, 1-5]] addclientbehavior[0] behaviorholder[0] [[Sentence=-1,1=word max, 1-5]] getbehaviors[0] clientbehaviorholder[0] [[Sentence=-1,1=word max, 1-5]] getclientbehaviors[0] renderkit[0] [[Sentence=-1,1=word max, 1-5]] addbehaviorrenderer[0] renderkit[0] [[Sentence=-1,1=word max, 1-5]] addclientbehaviorrenderer[0] renderkit[0] [[Sentence=-1,1=word max, 1-5]] getbehaviorrenderertypes[0] renderkit[0] [[Sentence=-1,1=word max, 1-5]] getclientbehaviorrenderertypes[0] [[Sentence=-1,1=word max, 1-5]] and[0] we[0] now[0] have[0] a[0] new[0] base[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] component[0] [[Sentence=-1,1=word max, 1-5]] behavior[0] [[Sentence=-1,1=word max, 1-5]] behavior[0] empty[0] interface[0] [[Sentence=-1,1=word max, 1-5]] this[0] serves[0] as[0] the[0] root[0] of[0] the[0] behavior[0] api[0] hierarcy[0] [[Sentence=-1,1=word max, 1-5]] for[0] the[0] moment[0] this[0] only[0] type[0] of[0] behaviors[0] that[0] we[0] support[0] our[0] clientbehaviors[0] but[0] we[0] expect[0] to[0] add[0] to[0] this[0] in[0] 2[0] .1[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3407 commit 17d1bb348d736e09080a73780759690ef9c2302b issue: 115 r rlubke    add description here    section: modified files ---------------------------- m jsf-api/doc/standard-html-renderkit-base.xml m jsf-api/doc/standard-html-renderkit.xml - refactor spec documentation between script and stylesheet renderers to more economically represent spec requirements, as well as conveying new requirements regarding nested content. m jsf-api/doc/output-resource-props.xml - made the name attribute not required m jsf-ri/src/com/sun/faces/renderkit/html_basic/stylesheetrenderer.java m jsf-ri/src/com/sun/faces/renderkit/html_basic/scriptrenderer.java a jsf-ri/src/com/sun/faces/renderkit/html_basic/scriptstylebaserenderer.java - refactor shared code into abstract base class. a jsf-ri/systest/src/com/sun/faces/render/outputscriptstyletestcase.java - comprehensive test case. a jsf-ri/systest/web/render/outputscriptstylenested.xhtml a jsf-ri/systest/web/resources/case11.css a jsf-ri/systest/web/resources/case12.css a jsf-ri/systest/web/resources/case1.js a jsf-ri/systest/web/resources/case14.css a jsf-ri/systest/web/resources/case3.js a jsf-ri/systest/web/resources/case4.js a jsf-ri/systest/web/resources/case9.css a jsf-ri/systest/web/resources/case6.js - input for testcase 	3407 commit 17d1bb348d736e09080a73780759690ef9c2302b issue: 115 are rlubke    add description here    section: modified files - m jsf-api/doc/standard-html-renderkit-base.<br>xml m jsf-api/doc/standard-html-renderkit.<br>xml - refactor spec documentation between script and stylesheet renderers to more economically represent spec requirements, as well as conveying new requirements regarding nested content.<br> m jsf-api/doc/output-resource-props.<br>xml - made the name attribute not required m jsf-ri/src/com/sun/faces/renderkit/html_basic/stylesheetrenderer.<br>java m jsf-ri/src/com/sun/faces/renderkit/html_basic/scriptrenderer.<br>java a jsf-ri/src/com/sun/faces/renderkit/html_basic/scriptstylebaserenderer.<br>java - refactor shared code into abstract base class.<br> a jsf-ri/systest/src/com/sun/faces/render/outputscriptstyletestcase.<br>java - comprehensive test case.<br> a jsf-ri/systest/web/render/outputscriptstylenested.<br>xhtml a jsf-ri/systest/web/resources/case11.<br>css a jsf-ri/systest/web/resources/case12.<br>css a jsf-ri/systest/web/resources/case1.<br>js a jsf-ri/systest/web/resources/case14.<br>css a jsf-ri/systest/web/resources/case3.<br>js a jsf-ri/systest/web/resources/case4.<br>js a jsf-ri/systest/web/resources/case9.<br>css a jsf-ri/systest/web/resources/case6.<br>js - input for testcase	1	-1	 3407[0] commit[0] 17d1bb348d736e09080a73780759690ef9c2302b[0] issue[0] 115[0] r[0] rlubke[0] add[0] description[0] here[0] section[0] modified[0] files[0] m[0] jsf[0] api/doc/standard[0] html[0] renderkit[0] base[0] [[Sentence=-1,1=word max, 1-5]] xml[0] m[0] jsf[0] api/doc/standard[0] html[0] renderkit[0] [[Sentence=-1,1=word max, 1-5]] xml[0] refactor[0] spec[0] documentation[0] between[0] script[0] and[0] stylesheet[0] renderers[0] to[0] more[0] economically[0] represent[0] spec[0] requirements[0] as[0] well[0] as[0] conveying[0] new[0] requirements[0] regarding[0] nested[0] content[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] api/doc/output[0] resource[0] props[0] [[Sentence=-1,1=word max, 1-5]] xml[0] made[0] the[0] name[0] attribute[0] not[0] required[0] m[0] jsf[0] ri/src/com/sun/faces/renderkit/html_basic/stylesheetrenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] ri/src/com/sun/faces/renderkit/html_basic/scriptrenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] jsf[0] ri/src/com/sun/faces/renderkit/html_basic/scriptstylebaserenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] refactor[0] shared[0] code[0] into[0] abstract[0] base[0] class[0] [[Sentence=-1,1=word max, 1-5]] a[0] jsf[0] ri/systest/src/com/sun/faces/render/outputscriptstyletestcase[0] [[Sentence=-1,1=word max, 1-5]] java[0] comprehensive[0] test[0] case[0] [[Sentence=-1,1=word max, 1-5]] a[0] jsf[0] ri/systest/web/render/outputscriptstylenested[0] [[Sentence=-1,1=word max, 1-5]] xhtml[0] a[0] jsf[0] ri/systest/web/resources/case11[0] [[Sentence=-1,1=word max, 1-5]] css[0] a[0] jsf[0] ri/systest/web/resources/case12[0] [[Sentence=-1,1=word max, 1-5]] css[0] a[0] jsf[0] ri/systest/web/resources/case1[0] [[Sentence=-1,1=word max, 1-5]] js[0] a[0] jsf[0] ri/systest/web/resources/case14[0] [[Sentence=-1,1=word max, 1-5]] css[0] a[0] jsf[0] ri/systest/web/resources/case3[0] [[Sentence=-1,1=word max, 1-5]] js[0] a[0] jsf[0] ri/systest/web/resources/case4[0] [[Sentence=-1,1=word max, 1-5]] js[0] a[0] jsf[0] ri/systest/web/resources/case9[0] [[Sentence=-1,1=word max, 1-5]] css[0] a[0] jsf[0] ri/systest/web/resources/case6[0] [[Sentence=-1,1=word max, 1-5]] js[0] input[0] for[0] testcase[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3763 commit 1351949511392fa731094c077f0e6a31cf2d29d7 - refactor the facelets disabled logic into a single method to be called before any document parsing occurs so that the configuration state is properly situated. - added javadocs. 	3763 commit 1351949511392fa731094c077f0e6a31cf2d29d7 - refactor the facelets disabled logic into a single method to be called before any document parsing occurs so that the configuration state is properly situated.<br> - added javadocs.	1	-1	 3763[0] commit[0] 1351949511392fa731094c077f0e6a31cf2d29d7[0] refactor[0] the[0] facelets[0] disabled[0] logic[0] into[0] a[0] single[0] method[0] to[0] be[0] called[0] before[0] any[0] document[0] parsing[0] occurs[0] so[0] that[0] the[0] configuration[0] state[0] is[0] properly[0] situated[0] [[Sentence=-1,1=word max, 1-5]] added[0] javadocs[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4144 commit 2dea87df816e1c65876c5097a829cea6c70dbb0e restructure the logic within factoryfinder to improve concurrency. the previous version of factoryfinder would lock on the static 'applicationmap' instance thus blocking all threads on read/write operations. the 'applicationmap' was structured as:  classloader,map string,object  the map within map structure has been abstracted out to factorymanagermap which manages the mapping between a classloader and the associated factories. the factorymanagermap.getapplicationfactorymanager() leverages concurrentmap.putifabsent() to ensure that only one factorymanager instance is created for a particular classloader (without having to lock). because the factorymanager is now a self contained entity instead of just a map we can apply a per-factorymanager lock so that locking may occur only for threads accessing the same factorymanager instance. threads accessing different instances will not block each other. a simple benchmark using 10 threads, each calling setfactory() 8 times, followed by getfactory() 8 times, and then a release() (100000 times each) resulted in: old: 3.23 minutes new: 1.92 minutes unit tests ran without modified. r edburns section: modified files ---------------------------- m jsf-api/src/javax/faces/factoryfinder.java - see above - fixed an issue with the meta-inf/services discovery mechanism. the old implementation would only consider the first factory found. there could be multiple service definitions for the factory on the classpath, so ensure they are taken into account. 	4144 commit 2dea87df816e1c65876c5097a829cea6c70dbb0e restructure the logic within factoryfinder to improve concurrency.<br> the previous version of factoryfinder would lock on the static 'applicationmap' instance thus blocking all threads on read/write operations.<br> the 'applicationmap' was structured as:  classloader,map string,object  the map within map structure has been abstracted out to factorymanagermap which manages the mapping between a classloader and the associated factories.<br> the factorymanagermap.<br>getapplicationfactorymanager( leverages concurrentmap.<br>putifabsent( to ensure that only one factorymanager instance is created for a particular classloader (without having to lock)<br> because the factorymanager is now a self contained entity instead of just a map we can apply a per-factorymanager lock so that locking may occur only for threads accessing the same factorymanager instance.<br> threads accessing different instances will not block each other.<br> a simple benchmark using 10 threads, each calling setfactory( 8 times, followed by getfactory( 8 times, and then a release( (100 times each) resulted in: old: 3.23 minutes new: 1.92 minutes unit tests ran without modified.<br> are edburns section: modified files - m jsf-api/src/javax/faces/factoryfinder.<br>java - see above - fixed an issue with the meta-inf/services discovery mechanism.<br> the old implementation would only consider the first factory found.<br> there could be multiple service definitions for the factory on the classpath, so ensure they are taken into account.	2	-1	 4144[0] commit[0] 2dea87df816e1c65876c5097a829cea6c70dbb0e[0] restructure[0] the[0] logic[0] within[0] factoryfinder[0] to[0] improve[1] concurrency[0] [[Sentence=-1,2=word max, 1-5]] the[0] previous[0] version[0] of[0] factoryfinder[0] would[0] lock[0] on[0] the[0] static[0] 'applicationmap'[0] instance[0] thus[0] blocking[0] all[0] threads[0] on[0] read/write[0] operations[0] [[Sentence=-1,1=word max, 1-5]] the[0] 'applicationmap'[0] was[0] structured[0] as[0] classloader[0] map[0] string[0] object[0] the[0] map[0] within[0] map[0] structure[0] has[0] been[0] abstracted[0] out[0] to[0] factorymanagermap[0] which[0] manages[0] the[0] mapping[0] between[0] a[0] classloader[0] and[0] the[0] associated[0] factories[0] [[Sentence=-1,1=word max, 1-5]] the[0] factorymanagermap[0] [[Sentence=-1,1=word max, 1-5]] getapplicationfactorymanager[0] leverages[0] concurrentmap[0] [[Sentence=-1,1=word max, 1-5]] putifabsent[0] to[0] ensure[0] that[0] only[0] one[0] factorymanager[0] instance[0] is[0] created[0] for[0] a[0] particular[0] classloader[0] without[0] having[0] to[0] lock[0] [[Sentence=-1,1=word max, 1-5]] because[0] the[0] factorymanager[0] is[0] now[0] a[0] self[0] contained[0] entity[0] instead[0] of[0] just[0] a[0] map[0] we[0] can[0] apply[0] a[0] per[0] factorymanager[0] lock[0] so[0] that[0] locking[0] may[0] occur[0] only[0] for[0] threads[0] accessing[0] the[0] same[0] factorymanager[0] instance[0] [[Sentence=-1,1=word max, 1-5]] threads[0] accessing[0] different[0] instances[0] will[0] not[0] block[0] each[0] other[0] [[Sentence=-1,1=word max, 1-5]] a[0] simple[0] benchmark[0] using[0] 10[0] threads[0] each[0] calling[0] setfactory[0] 8[0] times[0] followed[0] by[0] getfactory[0] 8[0] times[0] and[0] then[0] a[0] release[0] (100000/(100[0][+0.6 MultipleLetters] times[0] each[0] resulted[0] in[0] old[0] 3[0] .23[0] minutes[0] new[0] 1[0] .92[0] minutes[0] unit[0] tests[0] ran[0] without[0] modified[0] [[Sentence=-1,2=word max, 1-5]] r[0] edburns[0] section[0] modified[0] files[0] m[0] jsf[0] api/src/javax/faces/factoryfinder[0] [[Sentence=-1,1=word max, 1-5]] java[0] see[0] above[0] fixed[0] an[0] issue[0] with[0] the[0] meta[0] inf/services[0] discovery[0] mechanism[0] [[Sentence=-1,1=word max, 1-5]] the[0] old[0] implementation[0] would[0] only[0] consider[0] the[0] first[0] factory[0] found[0] [[Sentence=-1,1=word max, 1-5]] there[0] could[0] be[0] multiple[0] service[0] definitions[0] for[0] the[0] factory[0] on[0] the[0] classpath[0] so[0] ensure[0] they[0] are[0] taken[0] into[0] account[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
4420 commit 8f42b1c3d623e34c67b9979c0e420ce0dc7d0a43 [project @ 2007-11-09 20:58:15 by rlubke] m src/com/sun/faces/config/webconfiguration.java - expose javax.faces.resource.excludes via webconfiguration. outside of a single point for dealing with web configuration, it allows us to override the parameters at runtime to make testing a bit easier - add a config parameter, com.sun.faces.resourcebuffersize, to allows developers to tune how much memory is used per resource request m src/com/sun/faces/application/resource/resourcehandlerimpl.java - refactoring and logging * isresourcerequest originally checked the normalized request against the exclusions and then checked to see if the request contained the expected resource marker. the new logic is now the reverse. * added proper log strings for the case where an ioexception occurs when streaming a resource * added log message when unable to allocate a bytebuffer based on the com.sun.faces.resourcebuffersize parameter. in this case, the default size of 2048 will be used. * removed special case logic for date type headers coming from resourceimpl. will assume all headers are already formatted appropriately and call through to httpservletresponse.setheader(string,string) m src/com/sun/faces/logstrings.properties - new log messages m src/com/sun/faces/application/resource/resourceimpl.java - added logic to format http-date headers per rfc 1123. m test/com/sun/faces/application/resource/testresourcehandlerimpl.java - updated the test to leverage overriding in webconfiguration original author: rlubke date: 2007-11-09 20:58:17 00:00 	4420 commit 8f42b1c3d623e34c67b9979c0e420ce0dc7d0a43 [project @ 2007-11-09 20:58:15 by rlubke] m src/com/sun/faces/config/webconfiguration.<br>java - expose javax.<br>faces.<br>resource.<br>excludes via webconfiguration.<br> outside of a single point for dealing with web configuration, it allows us to override the parameters at runtime to make testing a bit easier - add a config parameter, com.<br>sun.<br>faces.<br>resourcebuffersize, to allows developers to tune how much memory is used per resource request m src/com/sun/faces/application/resource/resourcehandlerimpl.<br>java - refactoring and logging * isresourcerequest originally checked the normalized request against the exclusions and then checked to see if the request contained the expected resource marker.<br> the new logic is now the reverse.<br> * added proper log strings for the case where an ioexception occurs when streaming a resource * added log message when unable to allocate a bytebuffer based on the com.<br>sun.<br>faces.<br>resourcebuffersize parameter.<br> in this case, the default size of 2048 will be used.<br> * removed special case logic for date type headers coming from resourceimpl.<br> will assume all headers are already formatted appropriately and call through to httpservletresponse.<br>setheader(string,string) m src/com/sun/faces/logstrings.<br>properties - new log messages m src/com/sun/faces/application/resource/resourceimpl.<br>java - added logic to format http-date headers per rfc 1123.<br> m test/com/sun/faces/application/resource/testresourcehandlerimpl.<br>java - updated the test to leverage overriding in webconfiguration original author: rlubke date: 2007-11-09 20:58:17 00:00	2	-2	 4420[0] commit[0] 8f42b1c3d623e34c67b9979c0e420ce0dc7d0a43[0] [project[0] @[0] 2007[0] -11[0] -09[0] 20[0] :58[0] :15[0] by[0] rlubke][0] m[0] src/com/sun/faces/config/webconfiguration[0] [[Sentence=-1,1=word max, 1-5]] java[0] expose[-1] javax[0] [[Sentence=-2,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] resource[0] [[Sentence=-1,1=word max, 1-5]] excludes[0] via[0] webconfiguration[0] [[Sentence=-1,1=word max, 1-5]] outside[0] of[0] a[0] single[0] point[0] for[0] dealing[0] with[0] web[0] configuration[0] it[0] allows[0] us[0] to[0] override[0] the[0] parameters[0] at[0] runtime[0] to[0] make[0] testing[0] a[0] bit[0] easier[0] add[0] a[0] config[0] parameter[0] com[0] [[Sentence=-1,1=word max, 1-5]] sun[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] resourcebuffersize[0] to[0] allows[0] developers[0] to[0] tune[0] how[0] much[0] memory[0] is[0] used[0] per[0] resource[0] request[0] m[0] src/com/sun/faces/application/resource/resourcehandlerimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] refactoring[0] and[0] logging[0] isresourcerequest[0] originally[0] checked[0] the[0] normalized[0] request[0] against[-1] the[0] exclusions[-1] and[0] then[0] checked[0] to[0] see[0] if[0] the[0] request[0] contained[0] the[0] expected[0] resource[0] marker[0] [[Sentence=-2,1=word max, 1-5]] the[0] new[0] logic[0] is[0] now[0] the[0] reverse[0] [[Sentence=-1,1=word max, 1-5]] added[0] proper[0] log[0] strings[0] for[0] the[0] case[0] where[0] an[0] ioexception[0] occurs[0] when[0] streaming[0] a[0] resource[0] added[0] log[0] message[0] when[0] unable[0] to[0] allocate[0] a[0] bytebuffer[0] based[0] on[0] the[0] com[0] [[Sentence=-1,1=word max, 1-5]] sun[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] resourcebuffersize[0] parameter[0] [[Sentence=-1,1=word max, 1-5]] in[0] this[0] case[0] the[0] default[-1] size[0] of[0] 2048[0] will[0] be[0] used[0] [[Sentence=-2,1=word max, 1-5]] removed[0] special[1] case[0] logic[0] for[0] date[0] type[0] headers[0] coming[0] from[0] resourceimpl[0] [[Sentence=-1,2=word max, 1-5]] will[0] assume[0] all[0] headers[0] are[0] already[0] formatted[0] appropriately[0] and[0] call[0] through[0] to[0] httpservletresponse[0] [[Sentence=-1,1=word max, 1-5]] setheader[0] string[0] string[0] m[0] src/com/sun/faces/logstrings[0] [[Sentence=-1,1=word max, 1-5]] properties[0] new[0] log[0] messages[0] m[0] src/com/sun/faces/application/resource/resourceimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] added[0] logic[0] to[0] format[0] http[0] date[0] headers[0] per[0] rfc[0] 1123[0] [[Sentence=-1,1=word max, 1-5]] m[0] test/com/sun/faces/application/resource/testresourcehandlerimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] updated[0] the[0] test[0] to[0] leverage[0] overriding[0] in[0] webconfiguration[0] original[0] author[0] rlubke[0] date[0] 2007[0] -11[0] -09[0] 20[0] :58[0] :17[0] 00[0] :00[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
4541 commit 28da04bd8d926f82253669a0ef6633d47ce88816 [project @ 2007-07-10 20:43:09 by jdlee] refactor the is handling to a separate method for reuse. close the is in removefile() as well. original author: jdlee date: 2007-07-10 20:43:09 00:00 	4541 commit 28da04bd8d926f82253669a0ef6633d47ce8816 [project @ 2007-07-10 20:43:09 by jdlee] refactor the is handling to a separate method for reuse.<br> close the is in removefile( as well.<br> original author: jdlee date: 2007-07-10 20:43:09 00:00	1	-1	 4541[0] commit[0] 28da04bd8d926f82253669a0ef6633d47ce88816/28da04bd8d926f82253669a0ef6633d47ce8816[0] [project[0] @[0] 2007[0] -07[0] -10[0] 20[0] :43[0] :09[0] by[0] jdlee][0] refactor[0] the[0] is[0] handling[0] to[0] a[0] separate[0] method[0] for[0] reuse[0] [[Sentence=-1,1=word max, 1-5]] close[0] the[0] is[0] in[0] removefile[0] as[0] well[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] jdlee[0] date[0] 2007[0] -07[0] -10[0] 20[0] :43[0] :09[0] 00[0] :00[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4549 commit 02b5704d50d994f4448608a81cce055697678c32 [project @ 2007-07-06 21:49:09 by jdlee] refactored the two static resource pls to move common functionality into the super class added last-modified support added checks to prevent the sending of the same file more than once per request original author: jdlee date: 2007-07-06 21:49:09 00:00 	4549 commit 02b5704d50d994f448608a81cce055697678c32 [project @ 2007-07-06 21:49:09 by jdlee] refactored the two static resource pls to move common functionality into the super class added last-modified support added checks to prevent the sending of the same file more than once per request original author: jdlee date: 2007-07-06 21:49:09 00:00	1	-1	 4549[0] commit[0] 02b5704d50d994f4448608a81cce055697678c32/02b5704d50d994f448608a81cce055697678c32[0] [project[0] @[0] 2007[0] -07[0] -06[0] 21[0] :49[0] :09[0] by[0] jdlee][0] refactored[0] the[0] two[0] static[0] resource[0] pls[0] to[0] move[0] common[0] functionality[0] into[0] the[0] super[0] class[0] added[0] last[0] modified[0] support[0] added[0] checks[0] to[0] prevent[0] the[0] sending[0] of[0] the[0] same[0] file[0] more[0] than[0] once[0] per[0] request[0] original[0] author[0] jdlee[0] date[0] 2007[0] -07[0] -06[0] 21[0] :49[0] :09[0] 00[0] :00[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5184 commit 989dc1409d3431973e119b34bb1235b1eed4e206 [project @ 2006-06-16 19:31:49 by rlubke] reduce verbosity of context startup processing. section: modified files m src/com/sun/faces/config/webconfiguration.java - refactored various processing sections from ctor into private methods - added new context param 'com.sun.faces.displayconfiguration' which is false by default. for development purposes, it can be switched to true to obtain the old behavior. m src/com/sun/faces/spi/injectionproviderfactory.java - switched the configuration message from info to fine. - switched from info to warning for the case where no injection is available. reviewed by: rogerk original author: rlubke date: 2006-06-16 19:31:50 00:00 	5184 commit 989dc1409d3431973e119b34bb1235b1eed4e206 [project @ 2006-06-16 19:31:49 by rlubke] reduce verbosity of context startup processing.<br> section: modified files m src/com/sun/faces/config/webconfiguration.<br>java - refactored various processing sections from ctor into private methods - added new context param 'com.<br>sun.<br>faces.<br>displayconfiguration' which is false by default.<br> for development purposes, it can be switched to true to obtain the old behavior.<br> m src/com/sun/faces/spi/injectionproviderfactory.<br>java - switched the configuration message from info to fine.<br> - switched from info to warning for the case where no injection is available.<br> reviewed by: rogerk original author: rlubke date: 2006-06-16 19:31:50 00:00	3	-2	 5184[0] commit[0] 989dc1409d3431973e119b34bb1235b1eed4e206[0] [project[0] @[0] 2006[0] -06[0] -16[0] 19[0] :31[0] :49[0] by[0] rlubke][0] reduce[0] verbosity[0] of[0] context[0] startup[0] processing[0] [[Sentence=-1,1=word max, 1-5]] section[0] modified[0] files[0] m[0] src/com/sun/faces/config/webconfiguration[0] [[Sentence=-1,1=word max, 1-5]] java[0] refactored[0] various[0] processing[0] sections[0] from[0] ctor[0] into[0] private[0] methods[0] added[0] new[0] context[0] param[0] 'com[0] [[Sentence=-1,1=word max, 1-5]] sun[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] displayconfiguration'[0] which[0] is[0] false[0] by[0] default[-1] [[Sentence=-2,1=word max, 1-5]] for[0] development[0] purposes[0] it[0] can[0] be[0] switched[0] to[0] true[1] to[0] obtain[0] the[0] old[0] behavior[0] [[Sentence=-1,2=word max, 1-5]] m[0] src/com/sun/faces/spi/injectionproviderfactory[0] [[Sentence=-1,1=word max, 1-5]] java[0] switched[0] the[0] configuration[0] message[0] from[0] info[0] to[0] fine[2] [[Sentence=-1,3=word max, 1-5]] switched[0] from[0] info[0] to[0] warning[0] for[0] the[0] case[0] where[0] no[0] injection[0] is[0] available[0] [[Sentence=-1,1=word max, 1-5]] reviewed[0] by[0] rogerk[0] original[0] author[0] rlubke[0] date[0] 2006[0] -06[0] -16[0] 19[0] :31[0] :50[0] 00[0] :00[0] [[Sentence=-1,1=word max, 1-5]][[[3,-2 max of sentences]]]
5219 commit 6e38a2786a18642c1e0fc6e855ffd339a4fc7405 [project @ 2006-05-22 22:43:04 by rlubke] minor cleanup to responsestatemanagerimpl section: modified files m responsestatemanagerimpl.java - fixed one bug. the code that would write a hidden field to store the renderkit id if it was non null and not the default renderkit id would always write the default renderkit id as the value of the field. this logic has been corrected and refactored into the writerenderkitidfield() method. - minor cleanup revied by: review pending - will address comments after the fact. original author: rlubke date: 2006-05-22 22:43:04 00:00 	5219 commit 6e38a2786a18642c1e0fc6e855ffd339a4fc7405 [project @ 2006-05-22 22:43:04 by rlubke] minor cleanup to responsestatemanagerimpl section: modified files m responsestatemanagerimpl.<br>java - fixed one bug.<br> the code that would write a hidden field to store the renderkit id if it was non null and not the default renderkit id would always write the default renderkit id as the value of the field.<br> this logic has been corrected and refactored into the writerenderkitidfield( method.<br> - minor cleanup revied by: review pending - will address comments after the fact.<br> original author: rlubke date: 2006-05-22 22:43:04 00:00	2	-2	 5219[0] commit[0] 6e38a2786a18642c1e0fc6e855ffd339a4fc7405[0] [project[0] @[0] 2006[0] -05[0] -22[0] 22[0] :43[0] :04[0] by[0] rlubke][0] minor[0] cleanup[0] to[0] responsestatemanagerimpl[0] section[0] modified[0] files[0] m[0] responsestatemanagerimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] fixed[0] one[0] bug[0] [[Sentence=-1,1=word max, 1-5]] the[0] code[0] that[0] would[0] write[0] a[0] hidden[0] field[0] to[0] store[0] the[0] renderkit[0] id[0] if[0] it[0] was[0] non[0] null[0] and[0] not[0] the[0] default[-1][NegatedDueToPreviousWord] renderkit[0] id[0] would[0] always[0] write[0] the[0] default[-1] renderkit[0] id[0] as[0] the[0] value[0] of[0] the[0] field[0] [[Sentence=-2,2=word max, 1-5]] this[0] logic[0] has[0] been[0] corrected[0] and[0] refactored[0] into[0] the[0] writerenderkitidfield[0] method[0] [[Sentence=-1,1=word max, 1-5]] minor[0] cleanup[0] revied[0] by[0] review[0] pending[0] will[0] address[0] comments[0] after[0] the[0] fact[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] rlubke[0] date[0] 2006[0] -05[0] -22[0] 22[0] :43[0] :04[0] 00[0] :00[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
5423 commit a42b17584a203c9a5b65fc79a6dd27098dd20b12 [project @ 2006-02-01 18:24:07 by rogerk] issue number: 228 obtained from: submitted by: rogerk reviewed by: rlubke ---- createresponsewriter() method - refactoring (createresponsewriter method) - take into account unsupported content type in response (eg: image/png) ---- new test case. original author: rogerk date: 2006-02-01 18:24:07 00:00 	5423 commit a42b17584a203c9a5b65fc79a6dd27098dd20b12 [project @ 2006-02-01 18:24:07 by rogerk] issue number: 228 obtained from: submitted by: rogerk reviewed by: rlubke - createresponsewriter( method - refactoring (createresponsewriter method) - take into account unsupported content type in response (eg: image/png) - new test case.<br> original author: rogerk date: 2006-02-01 18:24:07 00:00	1	-1	 5423[0] commit[0] a42b17584a203c9a5b65fc79a6dd27098dd20b12[0] [project[0] @[0] 2006[0] -02[0] -01[0] 18[0] :24[0] :07[0] by[0] rogerk][0] issue[0] number[0] 228[0] obtained[0] from[0] submitted[0] by[0] rogerk[0] reviewed[0] by[0] rlubke[0] createresponsewriter[0] method[0] refactoring[0] createresponsewriter[0] method[0] take[0] into[0] account[0] unsupported[0] content[0] type[0] in[0] response[0] eg[0] image/png[0] new[0] test[0] case[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] rogerk[0] date[0] 2006[0] -02[0] -01[0] 18[0] :24[0] :07[0] 00[0] :00[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5933 commit 12e699cabdc7e84b4044e2079a9940867c1d672b [project @ 2004-11-23 19:26:52 by rlubke] phase 1 towards resolution of this issue. note that this change bundle has some degree of validation logic in the digester rules. i think this has the added benefit of fail fast when xml validation is disabled by the application and offsets the minor hit in startup time. section: modified files --------------------------- m jsf-ri/build.xml - copy resource files and toolsutil jsf-ri build m jsf-ri/src/com/sun/faces/application/applicationassociate.java - removed unneeded assertion check on managed bean scope. scope will never be null with config modifications outlined below - removed unused ivar application - minor cleanup m jsf-ri/src/com/sun/faces/application/applicationimpl.java - changes to reflect applicationassociated ctor change - minor assertion change m jsf-ri/src/com/sun/faces/config/managedbeanfactory.java - refactored logic in getbeantype() and getpropertytype() into config subsystem. it seems to make more sense to do some level of sanity checking in the config subsystem and fail fast during application init, vs the first time the bean is created. - cache the return values of getbeantype() and getpropertytype(). previously these values were reevaluated each time the bean was created. - changed type of type_is_* constants from int to byte. return type of getbeantype() and getpropertytype() modified as well. - added type_is_unknown vs using -1 in getbeantype() and getpropertytype() - added enhanced error messages where appropriate - general cleanup m jsf-ri/src/com/sun/faces/taglib/html_basic/htmlbasicvalidator.java m jsf-ri/src/com/sun/faces/taglib/jsf_core/viewtag.java - removed unneeded assert m jsf-ri/src/com/sun/faces/util/util.java - added constants for new messages that will be used by managedbeanfactory m jsf-ri/src/javax/faces/messages.properties m jsf-ri/src/javax/faces/messages_de.properties m jsf-ri/src/javax/faces/messages_es.properties m jsf-ri/src/javax/faces/messages_fr.properties - added new messages that will be used by managedbeanfactory m jsf-ri/test/com/sun/faces/util/testutil_messages.java - overloaded testutil_messages to test the messages referenced by toolsutil m jsf-tools/src/com/sun/faces/config/rules/managedbeanrule.java - added logic to validate the following: * managed-bean-name, managed-bean-class, managed-bean-scope cannot be null * if value defined for managed-bean-scope, it is a valid value * if managed bean has defined list entries, no map entries nor managed properties are defined * if managed bean had defined map entries, no list entries nor managed properties are defined m jsf-tools/src/com/sun/faces/config/rules/managedpropertyrule.java - added logic to validate the following: * a managed property must have a managed-property-name * if a managed property has defined list entries, no map entries or value/null-value elements have been defined * if a mangaed property has defined map entries, no list entries or value/null-value elements have been defined * a managed property has one of map entries, list entries, value, or null-value new files ------------------ a jsf-tools/src/com/sun/faces/resources/jsftoolsmessages.properties a jsf-tools/src/com/sun/faces/resources/jsftoolsmessages_de.properties a jsf-tools/src/com/sun/faces/resources/jsftoolsmessages_es.properties a jsf-tools/src/com/sun/faces/resources/jsftoolsmessages_fr.properties - resource files for jsf-tools a jsf-tools/src/com/sun/faces/util/toolsutil.java - stripped down version of jsf-ri's util class. original author: rlubke date: 2004-11-23 19:26:57 00:00 	5933 commit 12e699cabdc7e84b4044e2079a9940867c1d672b [project @ 2004-11-23 19:26:52 by rlubke] phase 1 towards resolution of this issue.<br> note that this change bundle has some degree of validation logic in the digester rules.<br> i think this has the added benefit of fail fast when xml validation is disabled by the application and offsets the minor hit in startup time.<br> section: modified files - m jsf-ri/build.<br>xml - copy resource files and toolsutil jsf-ri build m jsf-ri/src/com/sun/faces/application/applicationassociate.<br>java - removed unneeded assertion check on managed bean scope.<br> scope will never be null with config modifications outlined below - removed unused ivar application - minor cleanup m jsf-ri/src/com/sun/faces/application/applicationimpl.<br>java - changes to reflect applicationassociated ctor change - minor assertion change m jsf-ri/src/com/sun/faces/config/managedbeanfactory.<br>java - refactored logic in getbeantype( and getpropertytype( into config subsystem.<br> it seems to make more sense to do some level of sanity checking in the config subsystem and fail fast during application init, vs the first time the bean is created.<br> - cache the return values of getbeantype( and getpropertytype(<br> previously these values were reevaluated each time the bean was created.<br> - changed type of type_is_* constants from int to byte.<br> return type of getbeantype( and getpropertytype( modified as well.<br> - added type_is_unknown vs using -1 in getbeantype( and getpropertytype( - added enhanced error messages where appropriate - general cleanup m jsf-ri/src/com/sun/faces/taglib/html_basic/htmlbasicvalidator.<br>java m jsf-ri/src/com/sun/faces/taglib/jsf_core/viewtag.<br>java - removed unneeded assert m jsf-ri/src/com/sun/faces/util/util.<br>java - added constants for new messages that will be used by managedbeanfactory m jsf-ri/src/javax/faces/messages.<br>properties m jsf-ri/src/javax/faces/messages_de.<br>properties m jsf-ri/src/javax/faces/messages_es.<br>properties m jsf-ri/src/javax/faces/messages_fr.<br>properties - added new messages that will be used by managedbeanfactory m jsf-ri/test/com/sun/faces/util/testutil_messages.<br>java - overloaded testutil_messages to test the messages referenced by toolsutil m jsf-tools/src/com/sun/faces/config/rules/managedbeanrule.<br>java - added logic to validate the following: * managed-bean-name, managed-bean-class, managed-bean-scope cannot be null * if value defined for managed-bean-scope, it is a valid value * if managed bean has defined list entries, no map entries nor managed properties are defined * if managed bean had defined map entries, no list entries nor managed properties are defined m jsf-tools/src/com/sun/faces/config/rules/managedpropertyrule.<br>java - added logic to validate the following: * a managed property must have a managed-property-name * if a managed property has defined list entries, no map entries or value/null-value elements have been defined * if a mangaed property has defined map entries, no list entries or value/null-value elements have been defined * a managed property has one of map entries, list entries, value, or null-value new files - a jsf-tools/src/com/sun/faces/resources/jsftoolsmessages.<br>properties a jsf-tools/src/com/sun/faces/resources/jsftoolsmessages_de.<br>properties a jsf-tools/src/com/sun/faces/resources/jsftoolsmessages_es.<br>properties a jsf-tools/src/com/sun/faces/resources/jsftoolsmessages_fr.<br>properties - resource files for jsf-tools a jsf-tools/src/com/sun/faces/util/toolsutil.<br>java - stripped down version of jsf-ri's util class.<br> original author: rlubke date: 2004-11-23 19:26:57 00:00	2	-1	 5933[0] commit[0] 12e699cabdc7e84b4044e2079a9940867c1d672b[0] [project[0] @[0] 2004[0] -11[0] -23[0] 19[0] :26[0] :52[0] by[0] rlubke][0] phase[0] 1[0] towards[0] resolution[0] of[0] this[0] issue[0] [[Sentence=-1,1=word max, 1-5]] note[0] that[0] this[0] change[0] bundle[0] has[0] some[0] degree[0] of[0] validation[0] logic[0] in[0] the[0] digester[0] rules[0] [[Sentence=-1,1=word max, 1-5]] i[0] think[0] this[0] has[0] the[0] added[0] benefit[0] of[0] fail[0] fast[0] when[0] xml[0] validation[0] is[0] disabled[0] by[0] the[0] application[0] and[0] offsets[0] the[0] minor[0] hit[0] in[0] startup[0] time[0] [[Sentence=-1,1=word max, 1-5]] section[0] modified[0] files[0] m[0] jsf[0] ri/build[0] [[Sentence=-1,1=word max, 1-5]] xml[0] copy[0] resource[0] files[0] and[0] toolsutil[0] jsf[0] ri[0] build[0] m[0] jsf[0] ri/src/com/sun/faces/application/applicationassociate[0] [[Sentence=-1,1=word max, 1-5]] java[0] removed[0] unneeded[0] assertion[0] check[0] on[0] managed[0] bean[0] scope[0] [[Sentence=-1,1=word max, 1-5]] scope[0] will[0] never[0] be[0] null[0] with[0] config[0] modifications[0] outlined[0] below[0] removed[0] unused[0] ivar[0] application[0] minor[0] cleanup[0] m[0] jsf[0] ri/src/com/sun/faces/application/applicationimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] changes[0] to[0] reflect[0] applicationassociated[0] ctor[0] change[0] minor[0] assertion[0] change[0] m[0] jsf[0] ri/src/com/sun/faces/config/managedbeanfactory[0] [[Sentence=-1,1=word max, 1-5]] java[0] refactored[0] logic[0] in[0] getbeantype[0] and[0] getpropertytype[0] into[0] config[0] subsystem[0] [[Sentence=-1,1=word max, 1-5]] it[0] seems[0] to[0] make[0] more[0] sense[0] to[0] do[0] some[0] level[0] of[0] sanity[0] checking[0] in[0] the[0] config[0] subsystem[0] and[0] fail[0] fast[0] during[0] application[0] init[0] vs[0] the[0] first[0] time[0] the[0] bean[0] is[0] created[0] [[Sentence=-1,1=word max, 1-5]] cache[0] the[0] return[0] values[1] of[0] getbeantype[0] and[0] getpropertytype[0] [[Sentence=-1,2=word max, 1-5]] previously[0] these[0] values[1] were[0] reevaluated[0] each[0] time[0] the[0] bean[0] was[0] created[0] [[Sentence=-1,2=word max, 1-5]] changed[0] type[0] of[0] type_is_[0] constants[0] from[0] int[0] to[0] byte[0] [[Sentence=-1,1=word max, 1-5]] return[0] type[0] of[0] getbeantype[0] and[0] getpropertytype[0] modified[0] as[0] well[0] [[Sentence=-1,1=word max, 1-5]] added[0] type_is_unknown[0] vs[0] using[0] -1[0] in[0] getbeantype[0] and[0] getpropertytype[0] added[0] enhanced[0] error[0] messages[0] where[0] appropriate[0] general[0] cleanup[0] m[0] jsf[0] ri/src/com/sun/faces/taglib/html_basic/htmlbasicvalidator[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] ri/src/com/sun/faces/taglib/jsf_core/viewtag[0] [[Sentence=-1,1=word max, 1-5]] java[0] removed[0] unneeded[0] assert[0] m[0] jsf[0] ri/src/com/sun/faces/util/util[0] [[Sentence=-1,1=word max, 1-5]] java[0] added[0] constants[0] for[0] new[0] messages[0] that[0] will[0] be[0] used[0] by[0] managedbeanfactory[0] m[0] jsf[0] ri/src/javax/faces/messages[0] [[Sentence=-1,1=word max, 1-5]] properties[0] m[0] jsf[0] ri/src/javax/faces/messages_de[0] [[Sentence=-1,1=word max, 1-5]] properties[0] m[0] jsf[0] ri/src/javax/faces/messages_es[0] [[Sentence=-1,1=word max, 1-5]] properties[0] m[0] jsf[0] ri/src/javax/faces/messages_fr[0] [[Sentence=-1,1=word max, 1-5]] properties[0] added[0] new[0] messages[0] that[0] will[0] be[0] used[0] by[0] managedbeanfactory[0] m[0] jsf[0] ri/test/com/sun/faces/util/testutil_messages[0] [[Sentence=-1,1=word max, 1-5]] java[0] overloaded[0] testutil_messages[0] to[0] test[0] the[0] messages[0] referenced[0] by[0] toolsutil[0] m[0] jsf[0] tools/src/com/sun/faces/config/rules/managedbeanrule[0] [[Sentence=-1,1=word max, 1-5]] java[0] added[0] logic[0] to[0] validate[0] the[0] following[0] managed[0] bean[0] name[0] managed[0] bean[0] class[0] managed[0] bean[0] scope[0] cannot[0] be[0] null[0] if[0] value[0] defined[0] for[0] managed[0] bean[0] scope[0] it[0] is[0] a[0] valid[0] value[0] if[0] managed[0] bean[0] has[0] defined[0] list[0] entries[0] no[0] map[0] entries[0] nor[0] managed[0] properties[0] are[0] defined[0] if[0] managed[0] bean[0] had[0] defined[0] map[0] entries[0] no[0] list[0] entries[0] nor[0] managed[0] properties[0] are[0] defined[0] m[0] jsf[0] tools/src/com/sun/faces/config/rules/managedpropertyrule[0] [[Sentence=-1,1=word max, 1-5]] java[0] added[0] logic[0] to[0] validate[0] the[0] following[0] a[0] managed[0] property[0] must[0] have[0] a[0] managed[0] property[0] name[0] if[0] a[0] managed[0] property[0] has[0] defined[0] list[0] entries[0] no[0] map[0] entries[0] or[0] value/null[0] value[0] elements[0] have[0] been[0] defined[0] if[0] a[0] mangaed[0] property[0] has[0] defined[0] map[0] entries[0] no[0] list[0] entries[0] or[0] value/null[0] value[0] elements[0] have[0] been[0] defined[0] a[0] managed[0] property[0] has[0] one[0] of[0] map[0] entries[0] list[0] entries[0] value[0] or[0] null[0] value[0] new[0] files[0] a[0] jsf[0] tools/src/com/sun/faces/resources/jsftoolsmessages[0] [[Sentence=-1,1=word max, 1-5]] properties[0] a[0] jsf[0] tools/src/com/sun/faces/resources/jsftoolsmessages_de[0] [[Sentence=-1,1=word max, 1-5]] properties[0] a[0] jsf[0] tools/src/com/sun/faces/resources/jsftoolsmessages_es[0] [[Sentence=-1,1=word max, 1-5]] properties[0] a[0] jsf[0] tools/src/com/sun/faces/resources/jsftoolsmessages_fr[0] [[Sentence=-1,1=word max, 1-5]] properties[0] resource[0] files[0] for[0] jsf[0] tools[0] a[0] jsf[0] tools/src/com/sun/faces/util/toolsutil[0] [[Sentence=-1,1=word max, 1-5]] java[0] stripped[0] down[0] version[0] of[0] jsf[0] ri's[0] util[0] class[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] rlubke[0] date[0] 2004[0] -11[0] -23[0] 19[0] :26[0] :57[0] 00[0] :00[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
6242 commit 27e24b5b5601ef9cfe341ac60d99f616f7752c33 [project @ 2004-04-02 21:35:48 by eburns] bugtraq: 5019730 uiselect* can fire spurious valuechangeevents r rogerk section: api changes m jsf-api/src/javax/faces/component/uiinput.java - refactor the validate() method so that straight up validation is separable from "membership test" validation, as done in uiselect*. do this by introducing two new protected methods, which can be overridden by subclasses. getconvertedvalue() validatevalue() the latter is overridden in uiselect* to first call the superclass version, to do straight up validation, then upon return to do the "membership test" validation. m jsf-api/src/javax/faces/component/uiselectmany.java m jsf-api/src/javax/faces/component/uiselectone.java - replace validate() override with validatevalue() overrides. m jsf-api/test/javax/faces/component/uiselectmanytestcase.java - fix this testcase. it was making incorrect assumptions that have been fixed by this change-bundle. section: ri changes m jsf-ri/src/com/sun/faces/renderkit/html_basic/htmlbasicinputrenderer.java m jsf-ri/src/com/sun/faces/renderkit/html_basic/htmlbasicrenderer.java m jsf-ri/src/com/sun/faces/renderkit/html_basic/menurenderer.java - be more specific about what happened with this converterexception, including the new values and a message that the converter was null r jsf-ri/systest/src/com/sun/faces/jsptest/selectcomponentnovaluetestcase.java - rename to selectcomponentvaluetestcase a jsf-ri/systest/src/com/sun/faces/jsptest/selectcomponentvaluetestcase.java - new test, and renamed from selectcomponentnovaluetestcase m jsf-ri/systest/src/com/sun/faces/systest/model/testbean.java - new methods in support of new test a jsf-ri/systest/web/jsp/selectmanyinvalidvalue.jsp a jsf-ri/systest/web/jsp/selectoneinvalidvalue.jsp - new test content original author: eburns date: 2004-04-02 21:35:59 00:00 	6242 commit 27e24b5b5601ef9cfe341ac60d99f616f7752c33 [project @ 2004-04-02 21:35:48 by eburns] bugtraq: 5019730 uiselect* can fire spurious valuechangeevents are rogerk section: api changes m jsf-api/src/javax/faces/component/uinput.<br>java - refactor the validate( method so that straight up validation is separable from "membership test" validation, as done in uiselect*<br> do this by introducing two new protected methods, which can be overridden by subclasses.<br> getconvertedvalue( validatevalue( the latter is overridden in uiselect* to first call the superclass version, to do straight up validation, then upon return to do the "membership test" validation.<br> m jsf-api/src/javax/faces/component/uiselectmany.<br>java m jsf-api/src/javax/faces/component/uiselectone.<br>java - replace validate( override with validatevalue( overrides.<br> m jsf-api/test/javax/faces/component/uiselectmanytestcase.<br>java - fix this testcase.<br> it was making incorrect assumptions that have been fixed by this change-bundle.<br> section: ri changes m jsf-ri/src/com/sun/faces/renderkit/html_basic/htmlbasicinputrenderer.<br>java m jsf-ri/src/com/sun/faces/renderkit/html_basic/htmlbasicrenderer.<br>java m jsf-ri/src/com/sun/faces/renderkit/html_basic/menurenderer.<br>java - be more specific about what happened with this converterexception, including the new values and a message that the converter was null are jsf-ri/systest/src/com/sun/faces/jsptest/selectcomponentnovaluetestcase.<br>java - rename to selectcomponentvaluetestcase a jsf-ri/systest/src/com/sun/faces/jsptest/selectcomponentvaluetestcase.<br>java - new test, and renamed from selectcomponentnovaluetestcase m jsf-ri/systest/src/com/sun/faces/systest/model/testbean.<br>java - new methods in support of new test a jsf-ri/systest/web/jsp/selectmanyinvalidvalue.<br>jsp a jsf-ri/systest/web/jsp/selectoneinvalidvalue.<br>jsp - new test content original author: eburns date: 2004-04-02 21:35:59 00:00	2	-2	 6242[0] commit[0] 27e24b5b5601ef9cfe341ac60d99f616f7752c33[0] [project[0] @[0] 2004[0] -04[0] -02[0] 21[0] :35[0] :48[0] by[0] eburns][0] bugtraq[0] 5019730[0] uiselect[0] can[0] fire[0] spurious[0] valuechangeevents[0] r[0] rogerk[0] section[0] api[0] changes[0] m[0] jsf[0] api/src/javax/faces/component/uiinput/api/src/javax/faces/component/uinput[0] [[Sentence=-1,1=word max, 1-5]] java[0] refactor[0] the[0] validate[0] method[0] so[0] that[0] straight[0] up[0] validation[0] is[0] separable[0] from[0] membership[0] test[0] validation[0] as[0] done[0] in[0] uiselect[0] [[Sentence=-1,1=word max, 1-5]] do[0] this[0] by[0] introducing[0] two[0] new[0] protected[0] methods[0] which[0] can[0] be[0] overridden[0] by[0] subclasses[0] [[Sentence=-1,1=word max, 1-5]] getconvertedvalue[0] validatevalue[0] the[0] latter[0] is[0] overridden[0] in[0] uiselect[0] to[0] first[0] call[0] the[0] superclass[0] version[0] to[0] do[0] straight[0] up[0] validation[0] then[0] upon[0] return[0] to[0] do[0] the[0] membership[0] test[0] validation[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] api/src/javax/faces/component/uiselectmany[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] api/src/javax/faces/component/uiselectone[0] [[Sentence=-1,1=word max, 1-5]] java[0] replace[0] validate[0] override[0] with[0] validatevalue[0] overrides[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] api/test/javax/faces/component/uiselectmanytestcase[0] [[Sentence=-1,1=word max, 1-5]] java[0] fix[0] this[0] testcase[0] [[Sentence=-1,1=word max, 1-5]] it[0] was[0] making[0] incorrect[-1] assumptions[0] that[0] have[0] been[0] fixed[0] by[0] this[0] change[0] bundle[0] [[Sentence=-2,1=word max, 1-5]] section[0] ri[0] changes[0] m[0] jsf[0] ri/src/com/sun/faces/renderkit/html_basic/htmlbasicinputrenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] ri/src/com/sun/faces/renderkit/html_basic/htmlbasicrenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] ri/src/com/sun/faces/renderkit/html_basic/menurenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] be[0] more[0] specific[0] about[0] what[0] happened[0] with[0] this[0] converterexception[0] including[0] the[0] new[0] values[1] and[0] a[0] message[0] that[0] the[0] converter[0] was[0] null[0] r[0] jsf[0] ri/systest/src/com/sun/faces/jsptest/selectcomponentnovaluetestcase[0] [[Sentence=-1,2=word max, 1-5]] java[0] rename[0] to[0] selectcomponentvaluetestcase[0] a[0] jsf[0] ri/systest/src/com/sun/faces/jsptest/selectcomponentvaluetestcase[0] [[Sentence=-1,1=word max, 1-5]] java[0] new[0] test[0] and[0] renamed[0] from[0] selectcomponentnovaluetestcase[0] m[0] jsf[0] ri/systest/src/com/sun/faces/systest/model/testbean[0] [[Sentence=-1,1=word max, 1-5]] java[0] new[0] methods[0] in[0] support[0] of[0] new[0] test[0] a[0] jsf[0] ri/systest/web/jsp/selectmanyinvalidvalue[0] [[Sentence=-1,1=word max, 1-5]] jsp[0] a[0] jsf[0] ri/systest/web/jsp/selectoneinvalidvalue[0] [[Sentence=-1,1=word max, 1-5]] jsp[0] new[0] test[0] content[0] original[0] author[0] eburns[0] date[0] 2004[0] -04[0] -02[0] 21[0] :35[0] :59[0] 00[0] :00[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
6447 commit 715c8ccc22149ef585499a97f6a12024b443b3c7 [project @ 2004-01-20 03:04:08 by craigmcc] [accessibility] add "scope" attribute to all  th  elements rendered by the standard renderkit. take advantage of the opportunity to refactor the complex renderers somewhat, and abstract some utility methods to *always* deal with children and facets that have rendered "false". no jsf-api changes are included in this bundle, but the descriptions of the standard renderers in standard-html-renderkit.xml will need to be refined (on the jsfa131 branch). unit tests and demos run. ri changes:            m src/com/sun/faces/renderkit/html_basic/htmlbasicrenderer.java - add protected getchildren() method that automatically skips children with rendered false. - add protected encoderecursive() method, extracted out of the three renderers that had private implementations. make it use the new getchildren() method so it won't even try to render children with rendered false. - add protected getfacet() method, which will return a facet only if it exists and has rendered true. m src/com/sun/faces/renderkit/html_basic/gridrenderer.java m src/com/sun/faces/renderkit/html_basic/tablerenderer.java - use the utility methods described above, remove encoderecursive(). - generate  thead  and  tfoot  sections in encodebegin(), and render them both *before* the table body. this renders fine in mozilla 1.5 and ie6, but will need to be double checked on others. - inside the  thead  section, use  th  consistently to mark the column headings. for accessibility, render appropriate "scope" attributes on these elements. - tablerenderer: do not count columns with rendered false when calculating the colspan value for table-wide header and footer facets. - tablerenderer: render both the table-wide and column-wide headers inside the  thead , and table-wide and column-wide headers inside the  tfoot . m src/com/sun/faces/renderkit/html_basic/grouprenderer.java - use the utility methods described above, remove encoderecursive(). - abstract decision on whether a span element was needed into a private boolean method, and simplify the generation. m web/test/correctrenderersresponse_4 m web/test/renderresponse_correct - updated golden files. demo changes:              m standard/src/standard/uidatabean.java - add a "footer" event handler method to detect when a button rendered in a column footer is pressed. m standard/web/uidata.jsp - add overall table header and footer facets. - add footer facets on most (but not all) columns, to verify correct behavior and placement. - include a button in the footer for the commands column. m standard/web/panel_grid_row.jsp - add a panel group inside the footer facet, with an "id" to force generation of the span. m standard/web/stylesheet.css - add a style definition for "list-footer" that was referenced but not present. original author: craigmcc date: 2004-01-20 03:04:38 00:00 	6447 commit 715c8cc22149ef585499a97f6a12024b443b3c7 [project @ 2004-01-20 03:04:08 by craigmcc] [accessibility] add "scope" attribute to all  th  elements rendered by the standard renderkit.<br> take advantage of the opportunity to refactor the complex renderers somewhat, and abstract some utility methods to *always* deal with children and facets that have rendered "false"<br> no jsf-api changes are included in this bundle, but the descriptions of the standard renderers in standard-html-renderkit.<br>xml will need to be refined (on the jsfa131 branch)<br> unit tests and demos run.<br> ri changes:            m src/com/sun/faces/renderkit/html_basic/htmlbasicrenderer.<br>java - add protected getchildren( method that automatically skips children with rendered false.<br> - add protected encoderecursive( method, extracted out of the three renderers that had private implementations.<br> make it use the new getchildren( method so it won't even try to render children with rendered false.<br> - add protected getfacet( method, which will return a facet only if it exists and has rendered true.<br> m src/com/sun/faces/renderkit/html_basic/gridrenderer.<br>java m src/com/sun/faces/renderkit/html_basic/tablerenderer.<br>java - use the utility methods described above, remove encoderecursive(<br> - generate  thead  and  tfoot  sections in encodebegin( and render them both *before* the table body.<br> this renders fine in mozilla 1.5 and ie6, but will need to be double checked on others.<br> - inside the  thead  section, use  th  consistently to mark the column headings.<br> for accessibility, render appropriate "scope" attributes on these elements.<br> - tablerenderer: do not count columns with rendered false when calculating the colspan value for table-wide header and footer facets.<br> - tablerenderer: render both the table-wide and column-wide headers inside the  thead , and table-wide and column-wide headers inside the  tfoot .<br> m src/com/sun/faces/renderkit/html_basic/grouprenderer.<br>java - use the utility methods described above, remove encoderecursive(<br> - abstract decision on whether a span element was needed into a private boolean method, and simplify the generation.<br> m web/test/correctrenderersresponse_4 m web/test/renderresponse_correct - updated golden files.<br> demo changes:              m standard/src/standard/uidatabean.<br>java - add a "footer" event handler method to detect when a button rendered in a column footer is pressed.<br> m standard/web/uidata.<br>jsp - add overall table header and footer facets.<br> - add footer facets on most (but not all) columns, to verify correct behavior and placement.<br> - include a button in the footer for the commands column.<br> m standard/web/panel_grid_row.<br>jsp - add a panel group inside the footer facet, with an "id" to force generation of the span.<br> m standard/web/stylesheet.<br>css - add a style definition for "list-footer" that was referenced but not present.<br> original author: craigmc date: 2004-01-20 03:04:38 00:00	3	-1	 6447[0] commit[0] 715c8ccc22149ef585499a97f6a12024b443b3c7/715c8cc22149ef585499a97f6a12024b443b3c7[0] [project[0] @[0] 2004[0] -01[0] -20[0] 03[0] :04[0] :08[0] by[0] craigmcc][0] [accessibility][0] add[0] scope[0] attribute[0] to[0] all[0] th[0] elements[0] rendered[0] by[0] the[0] standard[0] renderkit[0] [[Sentence=-1,1=word max, 1-5]] take[0] advantage[0] of[0] the[0] opportunity[0] to[0] refactor[0] the[0] complex[0] renderers[0] somewhat[0] and[0] abstract[0] some[0] utility[0] methods[0] to[0] always[0] deal[0] with[0] children[0] and[0] facets[0] that[0] have[0] rendered[0] false[0] [[Sentence=-1,1=word max, 1-5]] no[0] jsf[0] api[0] changes[0] are[0] included[0] in[0] this[0] bundle[0] but[0] the[0] descriptions[0] of[0] the[0] standard[0] renderers[0] in[0] standard[0] html[0] renderkit[0] [[Sentence=-1,1=word max, 1-5]] xml[0] will[0] need[0] to[0] be[0] refined[0] on[0] the[0] jsfa131[0] branch[0] [[Sentence=-1,1=word max, 1-5]] unit[0] tests[0] and[0] demos[0] run[0] [[Sentence=-1,1=word max, 1-5]] ri[0] changes[0] m[0] src/com/sun/faces/renderkit/html_basic/htmlbasicrenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] add[0] protected[0] getchildren[0] method[0] that[0] automatically[0] skips[0] children[0] with[0] rendered[0] false[0] [[Sentence=-1,1=word max, 1-5]] add[0] protected[0] encoderecursive[0] method[0] extracted[0] out[0] of[0] the[0] three[0] renderers[0] that[0] had[0] private[0] implementations[0] [[Sentence=-1,1=word max, 1-5]] make[0] it[0] use[0] the[0] new[0] getchildren[0] method[0] so[0] it[0] won't[0] even[0] try[0] to[0] render[0] children[0] with[0] rendered[0] false[0] [[Sentence=-1,1=word max, 1-5]] add[0] protected[0] getfacet[0] method[0] which[0] will[0] return[0] a[0] facet[0] only[0] if[0] it[0] exists[0] and[0] has[0] rendered[0] true[1] [[Sentence=-1,2=word max, 1-5]] m[0] src/com/sun/faces/renderkit/html_basic/gridrenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] src/com/sun/faces/renderkit/html_basic/tablerenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] use[0] the[0] utility[0] methods[0] described[0] above[0] remove[0] encoderecursive[0] [[Sentence=-1,1=word max, 1-5]] generate[0] thead[0] and[0] tfoot[0] sections[0] in[0] encodebegin[0] and[0] render[0] them[0] both[0] before[0] the[0] table[0] body[0] [[Sentence=-1,1=word max, 1-5]] this[0] renders[0] fine[2] in[0] mozilla[0] 1[0] .5[0] and[0] ie6[0] but[0] will[0] need[0] to[0] be[0] double[0] checked[0] on[0] others[0] [[Sentence=-1,3=word max, 1-5]] inside[0] the[0] thead[0] section[0] use[0] th[0] consistently[0] to[0] mark[0] the[0] column[0] headings[0] [[Sentence=-1,1=word max, 1-5]] for[0] accessibility[0] render[0] appropriate[0] scope[0] attributes[0] on[0] these[0] elements[0] [[Sentence=-1,1=word max, 1-5]] tablerenderer[0] do[0] not[0] count[0] columns[0] with[0] rendered[0] false[0] when[0] calculating[0] the[0] colspan[0] value[0] for[0] table[0] wide[0] header[0] and[0] footer[0] facets[0] [[Sentence=-1,1=word max, 1-5]] tablerenderer[0] render[0] both[0] the[0] table[0] wide[0] and[0] column[0] wide[0] headers[0] inside[0] the[0] thead[0] and[0] table[0] wide[0] and[0] column[0] wide[0] headers[0] inside[0] the[0] tfoot[0] [[Sentence=-1,1=word max, 1-5]] m[0] src/com/sun/faces/renderkit/html_basic/grouprenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] use[0] the[0] utility[0] methods[0] described[0] above[0] remove[0] encoderecursive[0] [[Sentence=-1,1=word max, 1-5]] abstract[0] decision[0] on[0] whether[0] a[0] span[0] element[0] was[0] needed[0] into[0] a[0] private[0] boolean[0] method[0] and[0] simplify[0] the[0] generation[0] [[Sentence=-1,1=word max, 1-5]] m[0] web/test/correctrenderersresponse_4[0] m[0] web/test/renderresponse_correct[0] updated[0] golden[0] files[0] [[Sentence=-1,1=word max, 1-5]] demo[0] changes[0] m[0] standard/src/standard/uidatabean[0] [[Sentence=-1,1=word max, 1-5]] java[0] add[0] a[0] footer[0] event[0] handler[0] method[0] to[0] detect[0] when[0] a[0] button[0] rendered[0] in[0] a[0] column[0] footer[0] is[0] pressed[0] [[Sentence=-1,1=word max, 1-5]] m[0] standard/web/uidata[0] [[Sentence=-1,1=word max, 1-5]] jsp[0] add[0] overall[0] table[0] header[0] and[0] footer[0] facets[0] [[Sentence=-1,1=word max, 1-5]] add[0] footer[0] facets[0] on[0] most[0] but[0] not[0] all[0] columns[0] to[0] verify[0] correct[0] behavior[0] and[0] placement[0] [[Sentence=-1,1=word max, 1-5]] include[0] a[0] button[0] in[0] the[0] footer[0] for[0] the[0] commands[0] column[0] [[Sentence=-1,1=word max, 1-5]] m[0] standard/web/panel_grid_row[0] [[Sentence=-1,1=word max, 1-5]] jsp[0] add[0] a[0] panel[0] group[0] inside[0] the[0] footer[0] facet[0] with[0] an[0] id[0] to[0] force[0] generation[0] of[0] the[0] span[0] [[Sentence=-1,1=word max, 1-5]] m[0] standard/web/stylesheet[0] [[Sentence=-1,1=word max, 1-5]] css[0] add[0] a[0] style[0] definition[0] for[0] list[0] footer[0] that[0] was[0] referenced[0] but[0] not[0] present[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] craigmcc/craigmc[0] date[0] 2004[0] -01[0] -20[0] 03[0] :04[0] :38[0] 00[0] :00[0] [[Sentence=-1,1=word max, 1-5]][[[3,-1 max of sentences]]]
6479 commit edefa96b423b35689ecfead40e882a233f0b5250 [project @ 2004-01-15 06:03:14 by eburns] [patch] javadoc, uioutput.isvalid(), and 2 uicomponenttag issues author: adam winer r edburns jsf-api/src/javax/faces/application/application.java - getactionlistener() correctly document wrt methodbinding of action. - javadoc typo jsf-api/src/javax/faces/application/statemanager.java - don't talk about what to do with the locale in restorestate. it's handled in the stateholder of uiviewroot. jsf-api/src/javax/faces/application/viewhandler.java - renderview gives the facescontext a responsewriter *or* responsestream, not and. jsf-api/src/javax/faces/component/valueholder.java - remove validity from valueholder, moved to editablevalueholder - tighter spec language on getvalue() jsf-api/src/javax/faces/component/editablevalueholder.java - take on validity jsf-api/src/javax/faces/component/namingcontainer.java - more specific interface docs jsf-api/src/javax/faces/component/uicolumn.java - convenience accessors for header and footer facets jsf-api/src/javax/faces/component/uicommand.java jsf-api/src/javax/faces/component/uicomponent.java jsf-api/src/javax/faces/component/uicomponentbase.java jsf-api/src/javax/faces/component/uidata.java jsf-api/src/javax/faces/component/uiform.java jsf-api/src/javax/faces/component/uigraphic.java - tighter javadoc spec language jsf-api/src/javax/faces/component/uiinput.java - take on valid property jsf-api/src/javax/faces/component/uimessage.java - more specific class javadoc jsf-api/src/javax/faces/component/uioutput.java - lose valid property jsf-api/src/javax/faces/component/uiparameter.java jsf-api/src/javax/faces/component/uiselectitem.java jsf-api/src/javax/faces/component/uiselectitems.java - document value property jsf-api/src/javax/faces/component/uiselectmany.java - if a converter can't be found, assume string array. jsf-api/src/javax/faces/component/uiviewroot.java - tighter spec language jsf-api/src/javax/faces/component/actionsource.java jsf-api/src/javax/faces/context/facescontext.java jsf-api/src/javax/faces/context/externalcontext.java - typos jsf-api/src/javax/faces/convert/datetimeconverter.java jsf-api/src/javax/faces/convert/numberconverter.java - typos - tighter spec language jsf-api/src/javax/faces/event/phaseid.java - typo jsf-api/src/javax/faces/model/selectitem.java - the values are to be delivered to the model. jsf-api/src/javax/faces/render/responsestatemanager.java - tighter spec language jsf-api/src/javax/faces/render/renderer.java - conversion happens, and is described in getconvertedvalue(). jsf-api/src/javax/faces/validator/validator.java - don't mention uiinput, mention editablevalueholder jsf-api/src/javax/faces/webapp/uicomponenttag.java   - two fixes to uicomponenttag:   (1) "binding" was ignored for facets   (2) responsewriter.flush() should be called after   uicomponent.encodebegin() if encodebegin() is   called during dostarttag(); the renderers currently   manually call this, but they shouldn't have to,   since it's really a jsp tag requirement. - refactor the child creation methods to be useful for facets as well. jsf-api/src/javax/faces/factoryfinder.java - look for files in meta-inf, not web-inf jsf-api/test/javax/faces/component/valueholdertestcasebase.java - don't test for validity jsf-api/test/javax/faces/component/uiinputtestcase.java - test for validity original author: eburns date: 2004-01-15 06:03:41 00:00 	6479 commit edefa96b423b35689ecfead40e882a233f0b5250 [project @ 2004-01-15 06:03:14 by eburns] [patch] javadoc, uioutput.<br>isvalid( and 2 uicomponenttag issues author: adam winer are edburns jsf-api/src/javax/faces/application/application.<br>java - getactionlistener( correctly document wrt methodbinding of action.<br> - javadoc typo jsf-api/src/javax/faces/application/statemanager.<br>java - don't talk about what to do with the locale in restorestate.<br> it's handled in the stateholder of uiviewroot.<br> jsf-api/src/javax/faces/application/viewhandler.<br>java - renderview gives the facescontext a responsewriter *or* responsestream, not and.<br> jsf-api/src/javax/faces/component/valueholder.<br>java - remove validity from valueholder, moved to editablevalueholder - tighter spec language on getvalue( jsf-api/src/javax/faces/component/editablevalueholder.<br>java - take on validity jsf-api/src/javax/faces/component/namingcontainer.<br>java - more specific interface docs jsf-api/src/javax/faces/component/uicolumn.<br>java - convenience accessors for header and footer facets jsf-api/src/javax/faces/component/uicommand.<br>java jsf-api/src/javax/faces/component/uicomponent.<br>java jsf-api/src/javax/faces/component/uicomponentbase.<br>java jsf-api/src/javax/faces/component/uidata.<br>java jsf-api/src/javax/faces/component/uiform.<br>java jsf-api/src/javax/faces/component/uigraphic.<br>java - tighter javadoc spec language jsf-api/src/javax/faces/component/uinput.<br>java - take on valid property jsf-api/src/javax/faces/component/uimessage.<br>java - more specific class javadoc jsf-api/src/javax/faces/component/uioutput.<br>java - lose valid property jsf-api/src/javax/faces/component/uiparameter.<br>java jsf-api/src/javax/faces/component/uiselectitem.<br>java jsf-api/src/javax/faces/component/uiselectitems.<br>java - document value property jsf-api/src/javax/faces/component/uiselectmany.<br>java - if a converter can't be found, assume string array.<br> jsf-api/src/javax/faces/component/uiviewroot.<br>java - tighter spec language jsf-api/src/javax/faces/component/actionsource.<br>java jsf-api/src/javax/faces/context/facescontext.<br>java jsf-api/src/javax/faces/context/externalcontext.<br>java - typos jsf-api/src/javax/faces/convert/datetimeconverter.<br>java jsf-api/src/javax/faces/convert/numberconverter.<br>java - typos - tighter spec language jsf-api/src/javax/faces/event/phaseid.<br>java - typo jsf-api/src/javax/faces/model/selectitem.<br>java - the values are to be delivered to the model.<br> jsf-api/src/javax/faces/render/responsestatemanager.<br>java - tighter spec language jsf-api/src/javax/faces/render/renderer.<br>java - conversion happens, and is described in getconvertedvalue(<br> jsf-api/src/javax/faces/validator/validator.<br>java - don't mention uinput, mention editablevalueholder jsf-api/src/javax/faces/webapp/uicomponenttag.<br>java   - two fixes to uicomponenttag:   (1) "binding" was ignored for facets   (2) responsewriter.<br>flush( should be called after   uicomponent.<br>encodebegin( if encodebegin( is   called during dostarttag( the renderers currently   manually call this, but they shouldn't have to,   since it's really a jsp tag requirement.<br> - refactor the child creation methods to be useful for facets as well.<br> jsf-api/src/javax/faces/factoryfinder.<br>java - look for files in meta-inf, not web-inf jsf-api/test/javax/faces/component/valueholdertestcasebase.<br>java - don't test for validity jsf-api/test/javax/faces/component/uinputtestcase.<br>java - test for validity original author: eburns date: 2004-01-15 06:03:41 00:00	2	-2	 6479[0] commit[0] edefa96b423b35689ecfead40e882a233f0b5250[0] [project[0] @[0] 2004[0] -01[0] -15[0] 06[0] :03[0] :14[0] by[0] eburns][0] [patch][0] javadoc[0] uioutput[0] [[Sentence=-1,1=word max, 1-5]] isvalid[0] and[0] 2[0] uicomponenttag[0] issues[0] author[0] adam[0] winer[0] r[0] edburns[0] jsf[0] api/src/javax/faces/application/application[0] [[Sentence=-1,1=word max, 1-5]] java[0] getactionlistener[0] correctly[0] document[0] wrt[0] methodbinding[0] of[0] action[0] [[Sentence=-1,1=word max, 1-5]] javadoc[0] typo[0] jsf[0] api/src/javax/faces/application/statemanager[0] [[Sentence=-1,1=word max, 1-5]] java[0] don't[0] talk[0] about[0] what[0] to[0] do[0] with[0] the[0] locale[0] in[0] restorestate[0] [[Sentence=-1,1=word max, 1-5]] it's[0] handled[0] in[0] the[0] stateholder[0] of[0] uiviewroot[0] [[Sentence=-1,1=word max, 1-5]] jsf[0] api/src/javax/faces/application/viewhandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] renderview[0] gives[0] the[0] facescontext[0] a[0] responsewriter[0] or[0] responsestream[0] not[0] and[0] [[Sentence=-1,1=word max, 1-5]] jsf[0] api/src/javax/faces/component/valueholder[0] [[Sentence=-1,1=word max, 1-5]] java[0] remove[0] validity[0] from[0] valueholder[0] moved[0] to[0] editablevalueholder[0] tighter[0] spec[0] language[0] on[0] getvalue[0] jsf[0] api/src/javax/faces/component/editablevalueholder[0] [[Sentence=-1,1=word max, 1-5]] java[0] take[0] on[0] validity[0] jsf[0] api/src/javax/faces/component/namingcontainer[0] [[Sentence=-1,1=word max, 1-5]] java[0] more[0] specific[0] interface[0] docs[0] jsf[0] api/src/javax/faces/component/uicolumn[0] [[Sentence=-1,1=word max, 1-5]] java[0] convenience[0] accessors[0] for[0] header[0] and[0] footer[0] facets[0] jsf[0] api/src/javax/faces/component/uicommand[0] [[Sentence=-1,1=word max, 1-5]] java[0] jsf[0] api/src/javax/faces/component/uicomponent[0] [[Sentence=-1,1=word max, 1-5]] java[0] jsf[0] api/src/javax/faces/component/uicomponentbase[0] [[Sentence=-1,1=word max, 1-5]] java[0] jsf[0] api/src/javax/faces/component/uidata[0] [[Sentence=-1,1=word max, 1-5]] java[0] jsf[0] api/src/javax/faces/component/uiform[0] [[Sentence=-1,1=word max, 1-5]] java[0] jsf[0] api/src/javax/faces/component/uigraphic[0] [[Sentence=-1,1=word max, 1-5]] java[0] tighter[0] javadoc[0] spec[0] language[0] jsf[0] api/src/javax/faces/component/uiinput/api/src/javax/faces/component/uinput[0] [[Sentence=-1,1=word max, 1-5]] java[0] take[0] on[0] valid[0] property[0] jsf[0] api/src/javax/faces/component/uimessage[0] [[Sentence=-1,1=word max, 1-5]] java[0] more[0] specific[0] class[0] javadoc[0] jsf[0] api/src/javax/faces/component/uioutput[0] [[Sentence=-1,1=word max, 1-5]] java[0] lose[-1] valid[0] property[0] jsf[0] api/src/javax/faces/component/uiparameter[0] [[Sentence=-2,1=word max, 1-5]] java[0] jsf[0] api/src/javax/faces/component/uiselectitem[0] [[Sentence=-1,1=word max, 1-5]] java[0] jsf[0] api/src/javax/faces/component/uiselectitems[0] [[Sentence=-1,1=word max, 1-5]] java[0] document[0] value[0] property[0] jsf[0] api/src/javax/faces/component/uiselectmany[0] [[Sentence=-1,1=word max, 1-5]] java[0] if[0] a[0] converter[0] can't[0] be[0] found[0] assume[0] string[0] array[0] [[Sentence=-1,1=word max, 1-5]] jsf[0] api/src/javax/faces/component/uiviewroot[0] [[Sentence=-1,1=word max, 1-5]] java[0] tighter[0] spec[0] language[0] jsf[0] api/src/javax/faces/component/actionsource[0] [[Sentence=-1,1=word max, 1-5]] java[0] jsf[0] api/src/javax/faces/context/facescontext[0] [[Sentence=-1,1=word max, 1-5]] java[0] jsf[0] api/src/javax/faces/context/externalcontext[0] [[Sentence=-1,1=word max, 1-5]] java[0] typos[0] jsf[0] api/src/javax/faces/convert/datetimeconverter[0] [[Sentence=-1,1=word max, 1-5]] java[0] jsf[0] api/src/javax/faces/convert/numberconverter[0] [[Sentence=-1,1=word max, 1-5]] java[0] typos[0] tighter[0] spec[0] language[0] jsf[0] api/src/javax/faces/event/phaseid[0] [[Sentence=-1,1=word max, 1-5]] java[0] typo[0] jsf[0] api/src/javax/faces/model/selectitem[0] [[Sentence=-1,1=word max, 1-5]] java[0] the[0] values[1] are[0] to[0] be[0] delivered[0] to[0] the[0] model[0] [[Sentence=-1,2=word max, 1-5]] jsf[0] api/src/javax/faces/render/responsestatemanager[0] [[Sentence=-1,1=word max, 1-5]] java[0] tighter[0] spec[0] language[0] jsf[0] api/src/javax/faces/render/renderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] conversion[0] happens[0] and[0] is[0] described[0] in[0] getconvertedvalue[0] [[Sentence=-1,1=word max, 1-5]] jsf[0] api/src/javax/faces/validator/validator[0] [[Sentence=-1,1=word max, 1-5]] java[0] don't[0] mention[0] uiinput/uinput[0] mention[0] editablevalueholder[0] jsf[0] api/src/javax/faces/webapp/uicomponenttag[0] [[Sentence=-1,1=word max, 1-5]] java[0] two[0] fixes[0] to[0] uicomponenttag[0] (1[0] binding[0] was[0] ignored[0] for[0] facets[0] (2[0] responsewriter[0] [[Sentence=-1,1=word max, 1-5]] flush[0] should[0] be[0] called[0] after[0] uicomponent[0] [[Sentence=-1,1=word max, 1-5]] encodebegin[0] if[0] encodebegin[0] is[0] called[0] during[0] dostarttag[0] the[0] renderers[0] currently[0] manually[0] call[0] this[0] but[0] they[0] shouldn't[0] have[0] to[0] since[0] it's[0] really[0] a[0] jsp[0] tag[0] requirement[0] [[Sentence=-1,1=word max, 1-5]] refactor[0] the[0] child[0] creation[0] methods[0] to[0] be[0] useful[1] for[0] facets[0] as[0] well[0] [[Sentence=-1,2=word max, 1-5]] jsf[0] api/src/javax/faces/factoryfinder[0] [[Sentence=-1,1=word max, 1-5]] java[0] look[0] for[0] files[0] in[0] meta[0] inf[0] not[0] web[0] inf[0] jsf[0] api/test/javax/faces/component/valueholdertestcasebase[0] [[Sentence=-1,1=word max, 1-5]] java[0] don't[0] test[0] for[0] validity[0] jsf[0] api/test/javax/faces/component/uiinputtestcase/api/test/javax/faces/component/uinputtestcase[0] [[Sentence=-1,1=word max, 1-5]] java[0] test[0] for[0] validity[0] original[0] author[0] eburns[0] date[0] 2004[0] -01[0] -15[0] 06[0] :03[0] :41[0] 00[0] :00[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
6574 commit 04914a83a6241093ad52290f22a7feb0696a43a2 [project @ 2003-11-13 02:58:42 by jvisvanathan] m src/com/sun/faces/renderkit/html_basic/htmlbasicrenderer.java m src/com/sun/faces/renderkit/html_basic/labelrenderer.java refactor the code that searches for the component represented by the "for" attribute into a separate method since labelrenderer can also make use of it. m src/com/sun/faces/util/util.java added a message id to indicate "null for value" m src/javax/faces/messages.properties m src/javax/faces/messages_de.properties m src/javax/faces/messages_es.properties m src/javax/faces/messages_fr.properties new error message for null for value. m web/test/renderresponse_correct m web/test/testrenderresponsephase.jsp added test case for label original author: jvisvanathan date: 2003-11-13 02:58:49 00:00 	6574 commit 04914a83a6241093ad52290f22a7feb0696a43a2 [project @ 2003-11-13 02:58:42 by jvisvanathan] m src/com/sun/faces/renderkit/html_basic/htmlbasicrenderer.<br>java m src/com/sun/faces/renderkit/html_basic/labelrenderer.<br>java refactor the code that searches for the component represented by the "for" attribute into a separate method since labelrenderer can also make use of it.<br> m src/com/sun/faces/util/util.<br>java added a message id to indicate "null for value" m src/javax/faces/messages.<br>properties m src/javax/faces/messages_de.<br>properties m src/javax/faces/messages_es.<br>properties m src/javax/faces/messages_fr.<br>properties new error message for null for value.<br> m web/test/renderresponse_correct m web/test/testrenderresponsephase.<br>jsp added test case for label original author: jvisvanathan date: 2003-11-13 02:58:49 00:00	1	-1	 6574[0] commit[0] 04914a83a6241093ad52290f22a7feb0696a43a2[0] [project[0] @[0] 2003[0] -11[0] -13[0] 02[0] :58[0] :42[0] by[0] jvisvanathan][0] m[0] src/com/sun/faces/renderkit/html_basic/htmlbasicrenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] src/com/sun/faces/renderkit/html_basic/labelrenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] refactor[0] the[0] code[0] that[0] searches[0] for[0] the[0] component[0] represented[0] by[0] the[0] for[0] attribute[0] into[0] a[0] separate[0] method[0] since[0] labelrenderer[0] can[0] also[0] make[0] use[0] of[0] it[0] [[Sentence=-1,1=word max, 1-5]] m[0] src/com/sun/faces/util/util[0] [[Sentence=-1,1=word max, 1-5]] java[0] added[0] a[0] message[0] id[0] to[0] indicate[0] null[0] for[0] value[0] m[0] src/javax/faces/messages[0] [[Sentence=-1,1=word max, 1-5]] properties[0] m[0] src/javax/faces/messages_de[0] [[Sentence=-1,1=word max, 1-5]] properties[0] m[0] src/javax/faces/messages_es[0] [[Sentence=-1,1=word max, 1-5]] properties[0] m[0] src/javax/faces/messages_fr[0] [[Sentence=-1,1=word max, 1-5]] properties[0] new[0] error[0] message[0] for[0] null[0] for[0] value[0] [[Sentence=-1,1=word max, 1-5]] m[0] web/test/renderresponse_correct[0] m[0] web/test/testrenderresponsephase[0] [[Sentence=-1,1=word max, 1-5]] jsp[0] added[0] test[0] case[0] for[0] label[0] original[0] author[0] jvisvanathan[0] date[0] 2003[0] -11[0] -13[0] 02[0] :58[0] :49[0] 00[0] :00[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6866 commit 18baddbdafddae8628091f797c774692dda19b40 [project @ 2003-10-13 21:50:45 by eburns] scarab issue: [jsfa128] r visvan the second and final part of the ri changes for this issue. make it allowable for list and map instances to me created and populated into the scoped namespace from the config file. section: api changes m doc/web-facesconfig_1_0.dtd section: ri changes a web/test/web-inf/config-lists-and-maps.xml m src/com/sun/faces/config/configmanagedbean.java - tweak this so it handles the case where you have a managed bean that *is* a list or map, rather than having a list or map. m src/com/sun/faces/config/configparser.java - ugliness. rule tweakings to allow the above change. m src/com/sun/faces/config/managedbeanfactory.java - refactoring. create new methods:   copylistentriesfromconfigtolist(cmp, (list) bean);   copymapentriesfromconfigtomap(cmp, (map) bean); m test/com/sun/faces/config/configfiletestcase.java - test with some wackiness. original author: eburns date: 2003-10-13 21:50:48 00:00 	6866 commit 18baddbdafddae8628091f797c774692dda19b40 [project @ 2003-10-13 21:50:45 by eburns] scarab issue: [jsfa128] are visvan the second and final part of the ri changes for this issue.<br> make it allowable for list and map instances to me created and populated into the scoped namespace from the config file.<br> section: api changes m doc/web-facesconfig_1_0.<br>dtd section: ri changes a web/test/web-inf/config-lists-and-maps.<br>xml m src/com/sun/faces/config/configmanagedbean.<br>java - tweak this so it handles the case where you have a managed bean that *is* a list or map, rather than having a list or map.<br> m src/com/sun/faces/config/configparser.<br>java - ugliness.<br> rule tweakings to allow the above change.<br> m src/com/sun/faces/config/managedbeanfactory.<br>java - refactoring.<br> create new methods:   copylistentriesfromconfigtolist(cmp, (list) bean)   copymapentriesfromconfigtomap(cmp, (map) bean) m test/com/sun/faces/config/configfiletestcase.<br>java - test with some wackiness.<br> original author: eburns date: 2003-10-13 21:50:48 00:00	1	-3	 6866[0] commit[0] 18baddbdafddae8628091f797c774692dda19b40[0] [project[0] @[0] 2003[0] -10[0] -13[0] 21[0] :50[0] :45[0] by[0] eburns][0] scarab[0] issue[0] [jsfa128][0] r[0] visvan[0] the[0] second[0] and[0] final[0] part[0] of[0] the[0] ri[0] changes[0] for[0] this[0] issue[0] [[Sentence=-1,1=word max, 1-5]] make[0] it[0] allowable[0] for[0] list[0] and[0] map[0] instances[0] to[0] me[0] created[0] and[0] populated[0] into[0] the[0] scoped[0] namespace[0] from[0] the[0] config[0] file[0] [[Sentence=-1,1=word max, 1-5]] section[0] api[0] changes[0] m[0] doc/web[0] facesconfig_1_0[0] [[Sentence=-1,1=word max, 1-5]] dtd[0] section[0] ri[0] changes[0] a[0] web/test/web[0] inf/config[0] lists[0] and[0] maps[0] [[Sentence=-1,1=word max, 1-5]] xml[0] m[0] src/com/sun/faces/config/configmanagedbean[0] [[Sentence=-1,1=word max, 1-5]] java[0] tweak[0] this[0] so[0] it[0] handles[0] the[0] case[0] where[0] you[0] have[0] a[0] managed[0] bean[0] that[0] is[0] a[0] list[0] or[0] map[0] rather[0] than[0] having[0] a[0] list[0] or[0] map[0] [[Sentence=-1,1=word max, 1-5]] m[0] src/com/sun/faces/config/configparser[0] [[Sentence=-1,1=word max, 1-5]] java[0] ugliness[-2] [[Sentence=-3,1=word max, 1-5]] rule[0] tweakings[0] to[0] allow[0] the[0] above[0] change[0] [[Sentence=-1,1=word max, 1-5]] m[0] src/com/sun/faces/config/managedbeanfactory[0] [[Sentence=-1,1=word max, 1-5]] java[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]] create[0] new[0] methods[0] copylistentriesfromconfigtolist[0] cmp[0] list[0] bean[0] copymapentriesfromconfigtomap[0] cmp[0] map[0] bean[0] m[0] test/com/sun/faces/config/configfiletestcase[0] [[Sentence=-1,1=word max, 1-5]] java[0] test[0] with[0] some[0] wackiness[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] eburns[0] date[0] 2003[0] -10[0] -13[0] 21[0] :50[0] :48[0] 00[0] :00[0] [[Sentence=-1,1=word max, 1-5]][[[1,-3 max of sentences]]]
6879 commit 5d1873f93cae1e954f167bbdf0022defd6587c74 [project @ 2003-10-09 22:58:09 by craigmcc] remove obsolete test case, and refactor teststateholder() logic: * avoid the need for laborious cut-n-paste code in teststateholder by factoring out the stuff that changes. * more importantly, ensure that a component subclass saves and restores all the state for its superclass as well as itself. original author: craigmcc date: 2003-10-09 22:58:15 00:00 	6879 commit 5d1873f93cae1e954f167bbdf0022defd6587c74 [project @ 2003-10-09 22:58:09 by craigmcc] remove obsolete test case, and refactor teststateholder( logic: * avoid the need for laborious cut-n-paste code in teststateholder by factoring out the stuff that changes.<br> * more importantly, ensure that a component subclass saves and restores all the state for its superclass as well as itself.<br> original author: craigmc date: 2003-10-09 22:58:15 00:00	2	-2	 6879[0] commit[0] 5d1873f93cae1e954f167bbdf0022defd6587c74[0] [project[0] @[0] 2003[0] -10[0] -09[0] 22[0] :58[0] :09[0] by[0] craigmcc][0] remove[0] obsolete[0] test[0] case[0] and[0] refactor[0] teststateholder[0] logic[0] avoid[-1] the[0] need[0] for[0] laborious[0] cut[0] n[0] paste[0] code[0] in[0] teststateholder[0] by[0] factoring[0] out[0] the[0] stuff[0] that[0] changes[0] [[Sentence=-2,1=word max, 1-5]] more[0] importantly[0] ensure[0] that[0] a[0] component[0] subclass[0] saves[1] and[0] restores[0] all[0] the[0] state[0] for[0] its[0] superclass[0] as[0] well[0] as[0] itself[0] [[Sentence=-1,2=word max, 1-5]] original[0] author[0] craigmcc/craigmc[0] date[0] 2003[0] -10[0] -09[0] 22[0] :58[0] :15[0] 00[0] :00[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
7475 commit 3757cbf33e7185b342320290f55da2ee132e23df [project @ 2003-06-20 22:17:58 by craigmcc] refactor the five lookups of the current renderer instance into a new protected getrenderer(facescontext) method. this doesn't break backwards compatibility, but the new method is now available for use by custom component subclasses. this was issue "i1" on adam's "gaggle of small issues" eg message. original author: craigmcc date: 2003-06-20 22:17:58 00:00 	7475 commit 3757cbf33e7185b342320290f55da2ee132e23df [project @ 2003-06-20 22:17:58 by craigmcc] refactor the five lookups of the current renderer instance into a new protected getrenderer(facescontext) method.<br> this doesn't break backwards compatibility, but the new method is now available for use by custom component subclasses.<br> this was issue "i1" on adam's "gaggle of small issues" eg message.<br> original author: craigmc date: 2003-06-20 22:17:58 00:00	1	-1	 7475[0] commit[0] 3757cbf33e7185b342320290f55da2ee132e23df[0] [project[0] @[0] 2003[0] -06[0] -20[0] 22[0] :17[0] :58[0] by[0] craigmcc][0] refactor[0] the[0] five[0] lookups[0] of[0] the[0] current[0] renderer[0] instance[0] into[0] a[0] new[0] protected[0] getrenderer[0] facescontext[0] method[0] [[Sentence=-1,1=word max, 1-5]] this[0] doesn't[0] break[0] backwards[0] compatibility[0] but[0] the[0] new[0] method[0] is[0] now[0] available[0] for[0] use[0] by[0] custom[0] component[0] subclasses[0] [[Sentence=-1,1=word max, 1-5]] this[0] was[0] issue[0] i1[0] on[0] adam's[0] gaggle[0] of[0] small[0] issues[0] eg[0] message[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] craigmcc/craigmc[0] date[0] 2003[0] -06[0] -20[0] 22[0] :17[0] :58[0] 00[0] :00[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7780 commit 4ca2c61add79db15610d72ccbbe2a762a84bf0de [project @ 2003-03-14 02:37:41 by craigmcc] implement correct support for facets into the revised facestag. in facettag, remove support for verifying a single child. this should be done at compile time (in a tlv) instead of at run time. refactor facestagtestcase to avoid tedious cut-n-paste copying of the code that sets up the test tree of tags, so that additional tests can be added easily. also, make sure that the tree is rendered twice in every test (which simulates the postback scenario), and ensure that the output text that is rendered (and the shape of the component tree) is identical in every case. original author: craigmcc date: 2003-03-14 02:37:42 00:00 	7780 commit 4ca2c61add79db15610d72ccbbe2a762a84bf0de [project @ 2003-03-14 02:37:41 by craigmcc] implement correct support for facets into the revised facestag.<br> in facettag, remove support for verifying a single child.<br> this should be done at compile time (in a tlv) instead of at run time.<br> refactor facestagtestcase to avoid tedious cut-n-paste copying of the code that sets up the test tree of tags, so that additional tests can be added easily.<br> also, make sure that the tree is rendered twice in every test (which simulates the postback scenario) and ensure that the output text that is rendered (and the shape of the component tree) is identical in every case.<br> original author: craigmc date: 2003-03-14 02:37:42 00:00	1	-3	 7780[0] commit[0] 4ca2c61add79db15610d72ccbbe2a762a84bf0de[0] [project[0] @[0] 2003[0] -03[0] -14[0] 02[0] :37[0] :41[0] by[0] craigmcc][0] implement[0] correct[0] support[0] for[0] facets[0] into[0] the[0] revised[0] facestag[0] [[Sentence=-1,1=word max, 1-5]] in[0] facettag[0] remove[0] support[0] for[0] verifying[0] a[0] single[0] child[0] [[Sentence=-1,1=word max, 1-5]] this[0] should[0] be[0] done[0] at[0] compile[0] time[0] in[0] a[0] tlv[0] instead[0] of[0] at[0] run[0] time[0] [[Sentence=-1,1=word max, 1-5]] refactor[0] facestagtestcase[0] to[0] avoid[-1] tedious[-2] cut[0] n[0] paste[0] copying[0] of[0] the[0] code[0] that[0] sets[0] up[0] the[0] test[0] tree[0] of[0] tags[0] so[0] that[0] additional[0] tests[0] can[0] be[0] added[0] easily[0] [[Sentence=-3,1=word max, 1-5]] also[0] make[0] sure[0] that[0] the[0] tree[0] is[0] rendered[0] twice[0] in[0] every[0] test[0] which[0] simulates[0] the[0] postback[0] scenario[0] and[0] ensure[0] that[0] the[0] output[0] text[0] that[0] is[0] rendered[0] and[0] the[0] shape[0] of[0] the[0] component[0] tree[0] is[0] identical[0] in[0] every[0] case[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] craigmcc/craigmc[0] date[0] 2003[0] -03[0] -14[0] 02[0] :37[0] :42[0] 00[0] :00[0] [[Sentence=-1,1=word max, 1-5]][[[1,-3 max of sentences]]]
7810 commit bfedfe1d0047601cfed6983c3ec93036601ba71f [project @ 2003-02-23 00:37:15 by horwat] [r edburns] added uiparameter handling to hyperlinkrenderer. bug fixes for both href and commandname handling. some code cleanup and reorganization. added tests and corresponding golden file to cover these scenarios: - yes commandname, no href, no params - yes commandname, no href, yes params - no commandname, yes href, no params - no commandname, yes href, yes params original author: horwat date: 2003-02-23 00:37:17 00:00 	7810 commit bfedfe1d0047601cfed6983c3ec93036601ba71f [project @ 2003-02-23 00:37:15 by horwat] [r edburns] added uiparameter handling to hyperlinkrenderer.<br> bug fixes for both href and commandname handling.<br> some code cleanup and reorganization.<br> added tests and corresponding golden file to cover these scenarios: - yes commandname, no href, no params - yes commandname, no href, yes params - no commandname, yes href, no params - no commandname, yes href, yes params original author: horwat date: 2003-02-23 00:37:17 00:00	1	-1	 7810[0] commit[0] bfedfe1d0047601cfed6983c3ec93036601ba71f[0] [project[0] @[0] 2003[0] -02[0] -23[0] 00[0] :37[0] :15[0] by[0] horwat][0] [r[0] edburns][0] added[0] uiparameter[0] handling[0] to[0] hyperlinkrenderer[0] [[Sentence=-1,1=word max, 1-5]] bug[0] fixes[0] for[0] both[0] href[0] and[0] commandname[0] handling[0] [[Sentence=-1,1=word max, 1-5]] some[0] code[0] cleanup[0] and[0] reorganization[0] [[Sentence=-1,1=word max, 1-5]] added[0] tests[0] and[0] corresponding[0] golden[0] file[0] to[0] cover[0] these[0] scenarios[0] yes[0] commandname[0] no[0] href[0] no[0] params[0] yes[0] commandname[0] no[0] href[0] yes[0] params[0] no[0] commandname[0] yes[0] href[0] no[0] params[0] no[0] commandname[0] yes[0] href[0] yes[0] params[0] original[0] author[0] horwat[0] date[0] 2003[0] -02[0] -23[0] 00[0] :37[0] :17[0] 00[0] :00[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8294 commit 5e30aad8181dfcbd3f0a9267911114a36a21a614 [project @ 2002-08-15 23:22:58 by eburns] r visvan section: ri changes this checkin replaces formatstyle with datestyle and timestyle in the date case. this checkin doesn't mess with formatstyle in the number case. this checkin adds support and testcases for datetimerenderer. m conf/share/html_basic.tld - replaced formatstyle with datestyle in input_date. - added input_datetime. m src/com/sun/faces/renderkit/formatpool.java - added datetime methods m src/com/sun/faces/renderkit/formatpoolimpl.java - added feature to getdateformat to differentiate the variety of dateformat: getdateinstance, getdatetimeinstance, gettimeinstance, etc. - added support for datestyle and timestyle - new datetime methods. m src/com/sun/faces/renderkit/html_basic/daterenderer.java - refactored for ease of use in datetime, time cases. a src/com/sun/faces/renderkit/html_basic/datetimerenderer.java - just has refactored methods. m src/com/sun/faces/renderkit/html_basic/htmlbasicrenderkit.xml - same changes as in tld. m src/com/sun/faces/taglib/facestag.java - add datestyle, timestyle. m test/com/sun/faces/lifecycle/testrenderresponsephase.java m test/com/sun/faces/renderkit/testformatpoolimpl.java m test/com/sun/faces/renderkit/html_basic/testrenderers_2.java - test date and datetime m web/test/correctrenderersresponse_2 m web/test/renderresponse_correct m web/test/testrenderresponsephase.jsp new golden files original author: eburns date: 2002-08-15 23:23:06 00:00 	8294 commit 5e30ad8181dfcbd3f0a92679114a36a21a614 [project @ 2002-08-15 23:22:58 by eburns] are visvan section: ri changes this checkin replaces formatstyle with datestyle and timestyle in the date case.<br> this checkin doesn't mess with formatstyle in the number case.<br> this checkin adds support and testcases for datetimerenderer.<br> m conf/share/html_basic.<br>tld - replaced formatstyle with datestyle in input_date.<br> - added input_datetime.<br> m src/com/sun/faces/renderkit/formatpool.<br>java - added datetime methods m src/com/sun/faces/renderkit/formatpoolimpl.<br>java - added feature to getdateformat to differentiate the variety of dateformat: getdateinstance, getdatetimeinstance, gettimeinstance, etc.<br> - added support for datestyle and timestyle - new datetime methods.<br> m src/com/sun/faces/renderkit/html_basic/daterenderer.<br>java - refactored for ease of use in datetime, time cases.<br> a src/com/sun/faces/renderkit/html_basic/datetimerenderer.<br>java - just has refactored methods.<br> m src/com/sun/faces/renderkit/html_basic/htmlbasicrenderkit.<br>xml - same changes as in tld.<br> m src/com/sun/faces/taglib/facestag.<br>java - add datestyle, timestyle.<br> m test/com/sun/faces/lifecycle/testrenderresponsephase.<br>java m test/com/sun/faces/renderkit/testformatpoolimpl.<br>java m test/com/sun/faces/renderkit/html_basic/testrenderers_2.<br>java - test date and datetime m web/test/correctrenderersresponse_2 m web/test/renderresponse_correct m web/test/testrenderresponsephase.<br>jsp new golden files original author: eburns date: 2002-08-15 23:23:06 00:00	2	-1	 8294[0] commit[0] 5e30aad8181dfcbd3f0a9267911114a36a21a614/5e30ad8181dfcbd3f0a92679114a36a21a614[0][+0.6 MultipleLetters] [project[0] @[0] 2002[0] -08[0] -15[0] 23[0] :22[0] :58[0] by[0] eburns][0] r[0] visvan[0] section[0] ri[0] changes[0] this[0] checkin[0] replaces[0] formatstyle[0] with[0] datestyle[0] and[0] timestyle[0] in[0] the[0] date[0] case[0] [[Sentence=-1,2=word max, 1-5]] this[0] checkin[0] doesn't[0] mess[0] with[0] formatstyle[0] in[0] the[0] number[0] case[0] [[Sentence=-1,1=word max, 1-5]] this[0] checkin[0] adds[0] support[0] and[0] testcases[0] for[0] datetimerenderer[0] [[Sentence=-1,1=word max, 1-5]] m[0] conf/share/html_basic[0] [[Sentence=-1,1=word max, 1-5]] tld[0] replaced[0] formatstyle[0] with[0] datestyle[0] in[0] input_date[0] [[Sentence=-1,1=word max, 1-5]] added[0] input_datetime[0] [[Sentence=-1,1=word max, 1-5]] m[0] src/com/sun/faces/renderkit/formatpool[0] [[Sentence=-1,1=word max, 1-5]] java[0] added[0] datetime[0] methods[0] m[0] src/com/sun/faces/renderkit/formatpoolimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] added[0] feature[0] to[0] getdateformat[0] to[0] differentiate[0] the[0] variety[0] of[0] dateformat[0] getdateinstance[0] getdatetimeinstance[0] gettimeinstance[0] etc[0] [[Sentence=-1,1=word max, 1-5]] added[0] support[0] for[0] datestyle[0] and[0] timestyle[0] new[0] datetime[0] methods[0] [[Sentence=-1,1=word max, 1-5]] m[0] src/com/sun/faces/renderkit/html_basic/daterenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] refactored[0] for[0] ease[0] of[0] use[0] in[0] datetime[0] time[0] cases[0] [[Sentence=-1,1=word max, 1-5]] a[0] src/com/sun/faces/renderkit/html_basic/datetimerenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] just[0] has[0] refactored[0] methods[0] [[Sentence=-1,1=word max, 1-5]] m[0] src/com/sun/faces/renderkit/html_basic/htmlbasicrenderkit[0] [[Sentence=-1,1=word max, 1-5]] xml[0] same[0] changes[0] as[0] in[0] tld[0] [[Sentence=-1,1=word max, 1-5]] m[0] src/com/sun/faces/taglib/facestag[0] [[Sentence=-1,1=word max, 1-5]] java[0] add[0] datestyle[0] timestyle[0] [[Sentence=-1,1=word max, 1-5]] m[0] test/com/sun/faces/lifecycle/testrenderresponsephase[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] test/com/sun/faces/renderkit/testformatpoolimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] test/com/sun/faces/renderkit/html_basic/testrenderers_2[0] [[Sentence=-1,1=word max, 1-5]] java[0] test[0] date[0] and[0] datetime[0] m[0] web/test/correctrenderersresponse_2[0] m[0] web/test/renderresponse_correct[0] m[0] web/test/testrenderresponsephase[0] [[Sentence=-1,1=word max, 1-5]] jsp[0] new[0] golden[0] files[0] original[0] author[0] eburns[0] date[0] 2002[0] -08[0] -15[0] 23[0] :23[0] :06[0] 00[0] :00[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
