Move Attribute	Translation	Positive	Negative	EmotionRationale
2487 commit 61f74a086e0bf3778755ec91a14ea427ac1a4460 fix an issue discovered by david geary. consider the case where viewa uses f:ajax, which, as a side effect, installs jsf.js as a component resource. the logic that installs this resource adds a flag to the facescontext attributes map to short circuit similar handlers or renderer logic from having to perform the work twice. the problem with having that attribute present in the facescontext attributes map, and view transitions to a new view, any other handlers or renderers that need to install the component resource will behave as it has already be installed. this breaks components that require this resource being installed. the fix is to clear the attribute before invoking the main logic of renderresponsephase. section: modified files ---------------------------- m jsf-ri/src/com/sun/faces/facelets/tag/jsf/core/ajaxhandler.java - leverage renderkitutils for component resource searching. m jsf-ri/src/com/sun/faces/renderkit/renderkitutils.java - refactor the component resource searching logic into a new utility method - make hasscriptbeenrendered and setscriptasrendered public. implementation no relies on requeststatemanager. m jsf-ri/src/com/sun/faces/riconstants.java - removed script_state constant in favor of the one exposed by requeststatemanager m jsf-ri/src/com/sun/faces/lifecycle/phase.java - in the beforephase logic, call requeststatemanager.clearattributesforphase(). this will remove any attributes that the requeststatemanager manages that need to be removed prior to the execution of a particular phase. m jsf-ri/src/com/sun/faces/util/requeststatemanager.java - add script_state as an attribute that needs to be cleared before renderresponsephase r driscoll 	2487 commit 61f74a086e0bf3778755ec91a14ea427ac1a4460 fix an issue discovered by david geary.<br> consider the case where viewa uses f:ajax, which, as a side effect, installs jsf.<br>js as a component resource.<br> the logic that installs this resource adds a flag to the facescontext attributes map to short circuit similar handlers or renderer logic from having to perform the work twice.<br> the problem with having that attribute present in the facescontext attributes map, and view transitions to a new view, any other handlers or renderers that need to install the component resource will behave as it has already be installed.<br> this breaks components that require this resource being installed.<br> the fix is to clear the attribute before invoking the main logic of renderresponsephase.<br> section: modified files - m jsf-ri/src/com/sun/faces/facelets/tag/jsf/core/ajaxhandler.<br>java - leverage renderkitutils for component resource searching.<br> m jsf-ri/src/com/sun/faces/renderkit/renderkitutils.<br>java - refactor the component resource searching logic into a new utility method - make hasscriptbeenrendered and setscriptasrendered public.<br> implementation no relies on requeststatemanager.<br> m jsf-ri/src/com/sun/faces/riconstants.<br>java - removed script_state constant in favor of the one exposed by requeststatemanager m jsf-ri/src/com/sun/faces/lifecycle/phase.<br>java - in the beforephase logic, call requeststatemanager.<br>clearattributesforphase(<br> this will remove any attributes that the requeststatemanager manages that need to be removed prior to the execution of a particular phase.<br> m jsf-ri/src/com/sun/faces/util/requeststatemanager.<br>java - add script_state as an attribute that needs to be cleared before renderresponsephase are driscoll	2	-2	 2487[0] commit[0] 61f74a086e0bf3778755ec91a14ea427ac1a4460[0] fix[0] an[0] issue[0] discovered[0] by[0] david[0] geary[0] [[Sentence=-1,1=word max, 1-5]] consider[0] the[0] case[0] where[0] viewa[0] uses[0] f[0] ajax[0] which[0] as[0] a[0] side[0] effect[0] installs[0] jsf[0] [[Sentence=-1,1=word max, 1-5]] js[0] as[0] a[0] component[0] resource[0] [[Sentence=-1,1=word max, 1-5]] the[0] logic[0] that[0] installs[0] this[0] resource[0] adds[0] a[0] flag[0] to[0] the[0] facescontext[0] attributes[0] map[0] to[0] short[0] circuit[0] similar[0] handlers[0] or[0] renderer[0] logic[0] from[0] having[0] to[0] perform[0] the[0] work[0] twice[0] [[Sentence=-1,1=word max, 1-5]] the[0] problem[-1] with[0] having[0] that[0] attribute[0] present[0] in[0] the[0] facescontext[0] attributes[0] map[0] and[0] view[0] transitions[0] to[0] a[0] new[0] view[0] any[0] other[0] handlers[0] or[0] renderers[0] that[0] need[0] to[0] install[0] the[0] component[0] resource[0] will[0] behave[0] as[0] it[0] has[0] already[0] be[0] installed[0] [[Sentence=-2,1=word max, 1-5]] this[0] breaks[0] components[0] that[0] require[0] this[0] resource[0] being[0] installed[0] [[Sentence=-1,1=word max, 1-5]] the[0] fix[0] is[0] to[0] clear[0] the[0] attribute[0] before[0] invoking[0] the[0] main[0] logic[0] of[0] renderresponsephase[0] [[Sentence=-1,1=word max, 1-5]] section[0] modified[0] files[0] m[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/core/ajaxhandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] leverage[0] renderkitutils[0] for[0] component[0] resource[0] searching[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/com/sun/faces/renderkit/renderkitutils[0] [[Sentence=-1,1=word max, 1-5]] java[0] refactor[0] the[0] component[0] resource[0] searching[0] logic[0] into[0] a[0] new[0] utility[0] method[0] make[0] hasscriptbeenrendered[0] and[0] setscriptasrendered[0] public[0] [[Sentence=-1,1=word max, 1-5]] implementation[0] no[0] relies[0] on[0] requeststatemanager[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/com/sun/faces/riconstants[0] [[Sentence=-1,1=word max, 1-5]] java[0] removed[0] script_state[0] constant[0] in[0] favor[1] of[0] the[0] one[0] exposed[-1] by[0] requeststatemanager[0] m[0] jsf[0] ri/src/com/sun/faces/lifecycle/phase[0] [[Sentence=-2,2=word max, 1-5]] java[0] in[0] the[0] beforephase[0] logic[0] call[0] requeststatemanager[0] [[Sentence=-1,1=word max, 1-5]] clearattributesforphase[0] [[Sentence=-1,1=word max, 1-5]] this[0] will[0] remove[0] any[0] attributes[0] that[0] the[0] requeststatemanager[0] manages[0] that[0] need[0] to[0] be[0] removed[0] prior[0] to[0] the[0] execution[0] of[0] a[0] particular[0] phase[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/com/sun/faces/util/requeststatemanager[0] [[Sentence=-1,1=word max, 1-5]] java[0] add[0] script_state[0] as[0] an[0] attribute[0] that[0] needs[0] to[0] be[0] cleared[0] before[0] renderresponsephase[0] r[0] driscoll[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
4486 commit 5db03d128608bf31cc880ca5aac3430937974642 [project @ 2007-08-23 21:42:38 by rlubke] changes for issue 620. m src/com/sun/faces/lifecycle/lifecycleimpl.java - reduce phaseevent creation to the beginning of the phase if and only if there are phases to process. - refactored before and after phase processing into separate methods - removed listenerclass string local variable. if we need the class name for the exception message, query the pl directly as needed - when adding, removing, or querying the installed pls, loops through the phases to perform the task. m src/com/sun/faces/lifecycle/phase.java - add phaselistener information to the phase base class. * a pl will only be accepted by a phase instance if the phase ids match or the pl is any_phase there is a certain degree of waste here in the case of any_phase listeners as they will cause the creation of the a list in each phase, however, the size of the copyonwritearraylists only grows in increments of one, so it's not a huge memory waste. ------------------ part 2 ------------------------ m src/com/sun/faces/lifecycle/lifecycleimpl.java - move the details of phase execution logic into phase. - this allows us to overide the default logic for cases like restoreviewphase initializing the viewroot. it no longer needs to have a special case check each time. m src/com/sun/faces/lifecycle/phase.java - moved the bulk of the execution logic here. - added a dophase() method which will perform phaselistener execution as well as execution of the main phase logic. m src/com/sun/faces/lifecycle/restoreviewphase.java - override dophase() to call viewhandler.initview() - if a viewroot already exists at the time restoreviewphase executes check to see if it was a post back or not and set the renderresponse() flag as appropriate. this takes the place of the removed reload() method in lifecycleimpl original author: rlubke date: 2007-08-23 21:42:39 00:00 	4486 commit 5db03d128608bf31cc880ca5ac3430937974642 [project @ 2007-08-23 21:42:38 by rlubke] changes for issue 620.<br> m src/com/sun/faces/lifecycle/lifecycleimpl.<br>java - reduce phaseevent creation to the beginning of the phase if and only if there are phases to process.<br> - refactored before and after phase processing into separate methods - removed listenerclass string local variable.<br> if we need the class name for the exception message, query the pl directly as needed - when adding, removing, or querying the installed pls, loops through the phases to perform the task.<br> m src/com/sun/faces/lifecycle/phase.<br>java - add phaselistener information to the phase base class.<br> * a pl will only be accepted by a phase instance if the phase ids match or the pl is any_phase there is a certain degree of waste here in the case of any_phase listeners as they will cause the creation of the a list in each phase, however, the size of the copyonwritearraylists only grows in increments of one, so it's not a huge memory waste.<br> - part 2 - m src/com/sun/faces/lifecycle/lifecycleimpl.<br>java - move the details of phase execution logic into phase.<br> - this allows us to overide the default logic for cases like restoreviewphase initializing the viewroot.<br> it no longer needs to have a special case check each time.<br> m src/com/sun/faces/lifecycle/phase.<br>java - moved the bulk of the execution logic here.<br> - added a dophase( method which will perform phaselistener execution as well as execution of the main phase logic.<br> m src/com/sun/faces/lifecycle/restoreviewphase.<br>java - override dophase( to call viewhandler.<br>initview( - if a viewroot already exists at the time restoreviewphase executes check to see if it was a post back or not and set the renderresponse( flag as appropriate.<br> this takes the place of the removed reload( method in lifecycleimpl original author: rlubke date: 2007-08-23 21:42:39 00:00	2	-2	 4486[0] commit[0] 5db03d128608bf31cc880ca5aac3430937974642/5db03d128608bf31cc880ca5ac3430937974642[0] [project[0] @[0] 2007[0] -08[0] -23[0] 21[0] :42[0] :38[0] by[0] rlubke][0] changes[0] for[0] issue[0] 620[0] [[Sentence=-1,1=word max, 1-5]] m[0] src/com/sun/faces/lifecycle/lifecycleimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] reduce[0] phaseevent[0] creation[0] to[0] the[0] beginning[0] of[0] the[0] phase[0] if[0] and[0] only[0] if[0] there[0] are[0] phases[0] to[0] process[0] [[Sentence=-1,1=word max, 1-5]] refactored[0] before[0] and[0] after[0] phase[0] processing[0] into[0] separate[0] methods[0] removed[0] listenerclass[0] string[0] local[0] variable[0] [[Sentence=-1,1=word max, 1-5]] if[0] we[0] need[0] the[0] class[0] name[0] for[0] the[0] exception[0] message[0] query[0] the[0] pl[0] directly[0] as[0] needed[0] when[0] adding[0] removing[0] or[0] querying[0] the[0] installed[0] pls[0] loops[0] through[0] the[0] phases[0] to[0] perform[0] the[0] task[0] [[Sentence=-1,1=word max, 1-5]] m[0] src/com/sun/faces/lifecycle/phase[0] [[Sentence=-1,1=word max, 1-5]] java[0] add[0] phaselistener[0] information[0] to[0] the[0] phase[0] base[0] class[0] [[Sentence=-1,1=word max, 1-5]] a[0] pl[0] will[0] only[0] be[0] accepted[0] by[0] a[0] phase[0] instance[0] if[0] the[0] phase[0] ids[0] match[0] or[0] the[0] pl[0] is[0] any_phase[0] there[0] is[0] a[0] certain[0] degree[0] of[0] waste[-1] here[0] in[0] the[0] case[0] of[0] any_phase[0] listeners[0] as[0] they[0] will[0] cause[0] the[0] creation[0] of[0] the[0] a[0] list[0] in[0] each[0] phase[0] however[0] the[0] size[0] of[0] the[0] copyonwritearraylists[0] only[0] grows[0] in[0] increments[0] of[0] one[0] so[0] it's[0] not[0] a[0] huge[0] memory[0] waste[-1] [[Sentence=-2,1=word max, 1-5]] part[0] 2[0] m[0] src/com/sun/faces/lifecycle/lifecycleimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] move[0] the[0] details[0] of[0] phase[0] execution[0] logic[0] into[0] phase[0] [[Sentence=-1,1=word max, 1-5]] this[0] allows[0] us[0] to[0] overide[0] the[0] default[-1] logic[0] for[0] cases[0] like[0] restoreviewphase[0] initializing[0] the[0] viewroot[0] [[Sentence=-2,1=word max, 1-5]] it[0] no[0] longer[0] needs[0] to[0] have[0] a[0] special[1] case[0] check[0] each[0] time[0] [[Sentence=-1,2=word max, 1-5]] m[0] src/com/sun/faces/lifecycle/phase[0] [[Sentence=-1,1=word max, 1-5]] java[0] moved[0] the[0] bulk[0] of[0] the[0] execution[0] logic[0] here[0] [[Sentence=-1,1=word max, 1-5]] added[0] a[0] dophase[0] method[0] which[0] will[0] perform[0] phaselistener[0] execution[0] as[0] well[0] as[0] execution[0] of[0] the[0] main[0] phase[0] logic[0] [[Sentence=-1,1=word max, 1-5]] m[0] src/com/sun/faces/lifecycle/restoreviewphase[0] [[Sentence=-1,1=word max, 1-5]] java[0] override[0] dophase[0] to[0] call[0] viewhandler[0] [[Sentence=-1,1=word max, 1-5]] initview[0] if[0] a[0] viewroot[0] already[0] exists[0] at[0] the[0] time[0] restoreviewphase[0] executes[0] check[0] to[0] see[0] if[0] it[0] was[0] a[0] post[0] back[0] or[0] not[0] and[0] set[0] the[0] renderresponse[0] flag[0] as[0] appropriate[0] [[Sentence=-1,1=word max, 1-5]] this[0] takes[0] the[0] place[0] of[0] the[0] removed[0] reload[0] method[0] in[0] lifecycleimpl[0] original[0] author[0] rlubke[0] date[0] 2007[0] -08[0] -23[0] 21[0] :42[0] :39[0] 00[0] :00[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
