Move Method	Translation	Positive	Negative	EmotionRationale
2188 commit fd486836c00504a2e9bcb3317fe8754aa3859003 update for release_pending. refactored code common to statemanagerimpl and statemanagerstrategyimpl into util. 	2188 commit fd486836c00504a2e9bcb3317fe8754a3859003 update for release_pending.<br> refactored code common to statemanagerimpl and statemanagerstrategyimpl into util.	1	-1	 2188[0] commit[0] fd486836c00504a2e9bcb3317fe8754aa3859003/fd486836c00504a2e9bcb3317fe8754a3859003[0] update[0] for[0] release_pending[0] [[Sentence=-1,1=word max, 1-5]] refactored[0] code[0] common[0] to[0] statemanagerimpl[0] and[0] statemanagerstrategyimpl[0] into[0] util[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3012 commit eff6a63fb613ddb084b015fc18119aad20ced30c issue: 274-facelets at andy schwartz's request. we're moving the private utility method public static componentsupport.isnew() to be a public static method on componenthandler. author: andy schwartz r edburns section: modified files ---------------------------- m jsf-api/src/javax/faces/webapp/pdl/facelets/tag/componenthandler.java m jsf-ri/src/com/sun/faces/facelets/tag/jsf/componentsupport.java - the operative files m jsf-ri/src/com/sun/faces/facelets/tag/jsf/core/setpropertyactionlistenerhandler.java m jsf-ri/src/com/sun/faces/facelets/tag/jsf/core/phaselistenerhandler.java m jsf-ri/src/com/sun/faces/facelets/tag/jsf/core/ajaxhandler.java m jsf-ri/src/com/sun/faces/facelets/tag/jsf/core/actionlistenerhandler.java m jsf-ri/src/com/sun/faces/facelets/tag/jsf/core/valuechangelistenerhandler.java m jsf-ri/src/com/sun/faces/facelets/tag/jsf/compositecomponenttaghandler.java m jsf-ri/src/com/sun/faces/facelets/tag/composite/declarefacethandler.java m jsf-ri/src/com/sun/faces/facelets/tag/composite/attributehandler.java m jsf-ri/src/com/sun/faces/facelets/tag/composite/attachedobjecttargethandler.java m jsf-ri/src/com/sun/faces/facelets/tag/composite/interfacehandler.java refactoring fallout. 	3012 commit eff6a63fb613ddb084b015fc18119ad20ced30c issue: 274-facelets at andy schwartz's request.<br> we're moving the private utility method public static componentsupport.<br>isnew( to be a public static method on componenthandler.<br> author: andy schwartz are edburns section: modified files - m jsf-api/src/javax/faces/webapp/pdl/facelets/tag/componenthandler.<br>java m jsf-ri/src/com/sun/faces/facelets/tag/jsf/componentsupport.<br>java - the operative files m jsf-ri/src/com/sun/faces/facelets/tag/jsf/core/setpropertyactionlistenerhandler.<br>java m jsf-ri/src/com/sun/faces/facelets/tag/jsf/core/phaselistenerhandler.<br>java m jsf-ri/src/com/sun/faces/facelets/tag/jsf/core/ajaxhandler.<br>java m jsf-ri/src/com/sun/faces/facelets/tag/jsf/core/actionlistenerhandler.<br>java m jsf-ri/src/com/sun/faces/facelets/tag/jsf/core/valuechangelistenerhandler.<br>java m jsf-ri/src/com/sun/faces/facelets/tag/jsf/compositecomponenttaghandler.<br>java m jsf-ri/src/com/sun/faces/facelets/tag/composite/declarefacethandler.<br>java m jsf-ri/src/com/sun/faces/facelets/tag/composite/attributehandler.<br>java m jsf-ri/src/com/sun/faces/facelets/tag/composite/attachedobjecttargethandler.<br>java m jsf-ri/src/com/sun/faces/facelets/tag/composite/interfacehandler.<br>java refactoring fallout.	1	-2	 3012[0] commit[0] eff6a63fb613ddb084b015fc18119aad20ced30c/eff6a63fb613ddb084b015fc18119ad20ced30c[0] issue[0] 274[0] facelets[0] at[0] andy[0] schwartz's[0] request[0] [[Sentence=-1,1=word max, 1-5]] we're[0] moving[0] the[0] private[0] utility[0] method[0] public[0] static[0] componentsupport[0] [[Sentence=-1,1=word max, 1-5]] isnew[0] to[0] be[0] a[0] public[0] static[0] method[0] on[0] componenthandler[0] [[Sentence=-1,1=word max, 1-5]] author[0] andy[0] schwartz[0] r[0] edburns[0] section[0] modified[0] files[0] m[0] jsf[0] api/src/javax/faces/webapp/pdl/facelets/tag/componenthandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/componentsupport[0] [[Sentence=-1,1=word max, 1-5]] java[0] the[0] operative[0] files[0] m[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/core/setpropertyactionlistenerhandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/core/phaselistenerhandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/core/ajaxhandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/core/actionlistenerhandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/core/valuechangelistenerhandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] ri/src/com/sun/faces/facelets/tag/jsf/compositecomponenttaghandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] ri/src/com/sun/faces/facelets/tag/composite/declarefacethandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] ri/src/com/sun/faces/facelets/tag/composite/attributehandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] ri/src/com/sun/faces/facelets/tag/composite/attachedobjecttargethandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] ri/src/com/sun/faces/facelets/tag/composite/interfacehandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] refactoring[0] fallout[-1] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
3777 commit ed43e12ae96f2127f968b8cf3ef11c587e0cc472 fix for 788 - modify commandbutton to allow a nested param tag. this requires using the same kinds of javascript that is used in commandlink. since we want commandbutton to be (mostly) javascript free, this code is only triggered if we have a nested param on a submit button. section: modified files ---------------------------- m jsf-ri/src/com/sun/faces/sunjsf.js doc change. m jsf-ri/src/com/sun/faces/renderkit/html_basic/buttonrenderer.java add the logic to write javascript like commandlink if a nested param exists. m jsf-ri/src/com/sun/faces/renderkit/html_basic/commandlinkrenderer.java refactor redundant code into renderkitutils. m jsf-ri/src/com/sun/faces/renderkit/html_basic/htmlbasicrenderer.java make the empty_params constant visible to subclasses. m jsf-ri/src/com/sun/faces/renderkit/renderkitutils.java refactor redundant code into renderkitutils. m jsf-ri/systest/build-tests.xml a jsf-ri/systest/web/taglib/commandbutton_param_test.jsp a jsf-ri/systest/web/golden/taglib/commandbutton_param_test.txt tests. only a golden file test, but should be sufficient to make sure behavior isn't inadvertantly modified. 	377 commit ed43e12ae96f2127f968b8cf3ef11c587e0cc472 fix for 788 - modify commandbutton to allow a nested param tag.<br> this requires using the same kinds of javascript that is used in commandlink.<br> since we want commandbutton to be (mostly) javascript free, this code is only triggered if we have a nested param on a submit button.<br> section: modified files - m jsf-ri/src/com/sun/faces/sunjsf.<br>js doc change.<br> m jsf-ri/src/com/sun/faces/renderkit/html_basic/buttonrenderer.<br>java add the logic to write javascript like commandlink if a nested param exists.<br> m jsf-ri/src/com/sun/faces/renderkit/html_basic/commandlinkrenderer.<br>java refactor redundant code into renderkitutils.<br> m jsf-ri/src/com/sun/faces/renderkit/html_basic/htmlbasicrenderer.<br>java make the empty_params constant visible to subclasses.<br> m jsf-ri/src/com/sun/faces/renderkit/renderkitutils.<br>java refactor redundant code into renderkitutils.<br> m jsf-ri/systest/build-tests.<br>xml a jsf-ri/systest/web/taglib/commandbutton_param_test.<br>jsp a jsf-ri/systest/web/golden/taglib/commandbutton_param_test.<br>txt tests.<br> only a golden file test, but should be sufficient to make sure behavior isn't inadvertantly modified.	1	-1	 3777/377[0] commit[0] ed43e12ae96f2127f968b8cf3ef11c587e0cc472[0] fix[0] for[0] 788[0] modify[0] commandbutton[0] to[0] allow[0] a[0] nested[0] param[0] tag[0] [[Sentence=-1,1=word max, 1-5]] this[0] requires[0] using[0] the[0] same[0] kinds[0] of[0] javascript[0] that[0] is[0] used[0] in[0] commandlink[0] [[Sentence=-1,1=word max, 1-5]] since[0] we[0] want[0] commandbutton[0] to[0] be[0] mostly[0] javascript[0] free[0] this[0] code[0] is[0] only[0] triggered[0] if[0] we[0] have[0] a[0] nested[0] param[0] on[0] a[0] submit[0] button[0] [[Sentence=-1,1=word max, 1-5]] section[0] modified[0] files[0] m[0] jsf[0] ri/src/com/sun/faces/sunjsf[0] [[Sentence=-1,1=word max, 1-5]] js[0] doc[0] change[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/com/sun/faces/renderkit/html_basic/buttonrenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] add[0] the[0] logic[0] to[0] write[0] javascript[0] like[0] commandlink[0] if[0] a[0] nested[0] param[0] exists[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/com/sun/faces/renderkit/html_basic/commandlinkrenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] refactor[0] redundant[0] code[0] into[0] renderkitutils[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/com/sun/faces/renderkit/html_basic/htmlbasicrenderer[0] [[Sentence=-1,1=word max, 1-5]] java[0] make[0] the[0] empty_params[0] constant[0] visible[0] to[0] subclasses[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/com/sun/faces/renderkit/renderkitutils[0] [[Sentence=-1,1=word max, 1-5]] java[0] refactor[0] redundant[0] code[0] into[0] renderkitutils[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/systest/build[0] tests[0] [[Sentence=-1,1=word max, 1-5]] xml[0] a[0] jsf[0] ri/systest/web/taglib/commandbutton_param_test[0] [[Sentence=-1,1=word max, 1-5]] jsp[0] a[0] jsf[0] ri/systest/web/golden/taglib/commandbutton_param_test[0] [[Sentence=-1,1=word max, 1-5]] txt[0] tests[0] [[Sentence=-1,1=word max, 1-5]] only[0] a[0] golden[0] file[0] test[0] but[0] should[0] be[0] sufficient[0] to[0] make[0] sure[0] behavior[0] isn't[0] inadvertantly[0] modified[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4754 commit b6c0d2a32cb38b876c89ee681765edc8aaefa47d [project @ 2007-02-27 23:10:18 by rlubke] fix for issue 512. r adamwiner m src/com/sun/faces/application/applicationassociate.java - add some documentation to help make sense of how faces uses the unified el (helps when you don't look at the code for a month or so and need to revist) m src/com/sun/faces/application/applicationimpl.java - moved the bulk of the logic in getelresolver() to elutils.buildfacesresolver(). motivation here was that for the bulk of the elresolvers that we register, only one instance is needed. previously we would create one instance for the faces and one for the jsp resolvers. - implemented adam's suggestion for handling resolvers set via application.set{property,variable}resolver() as well as those registered via application config resources. see the implementations for elutils.getdelegatevr() and elutils.getdelegatepr(); m src/com/sun/faces/util/util.java - moved all el related methods from the 'dumping ground' to elutils. - removed util.getsessionmap(). not much benefit. m src/com/sun/faces/application/statemanagerimpl.java m src/com/sun/faces/config/configurelistener.java m src/com/sun/faces/config/managedbeanfactoryimpl.java m src/com/sun/faces/el/propertyresolverimpl.java m src/com/sun/faces/el/variableresolverimpl.java m src/com/sun/faces/lifecycle/elresolverinitphaselistener.java m src/com/sun/faces/taglib/jsf_core/convertdatetimetag.java m src/com/sun/faces/taglib/jsf_core/convertnumbertag.java m src/com/sun/faces/taglib/jsf_core/loadbundletag.java m src/com/sun/faces/taglib/jsf_core/validatedoublerangetag.java m src/com/sun/faces/taglib/jsf_core/validatelengthtag.java m src/com/sun/faces/taglib/jsf_core/validatelongrangetag.java m test/com/sun/faces/application/deprstatemanagerimpl.java m test/com/sun/faces/application/testapplicationimpl.java m test/com/sun/faces/application/teststatemanagerimpl.java m test/com/sun/faces/config/testmanagedbeanfactory.java m test/com/sun/faces/el/testvaluebindingimpl.java m test/com/sun/faces/el/testvalueexpressionimpl.java m test/com/sun/faces/lifecycle/testupdatemodelvaluesphase.java m test/com/sun/faces/renderkit/html_basic/testrenderers_1.java m test/com/sun/faces/renderkit/html_basic/testrenderers_2.java m test/com/sun/faces/util/testutil.java - files effected by the refactoring a src/com/sun/faces/el/elutils.java - new el-related utility methods r src/com/sun/faces/el/dummyvariableresolverimpl.java - no longer used original author: rlubke date: 2007-02-27 23:10:25 00:00 	4754 commit b6c0d2a32cb38b876c89ee681765edc8aefa47d [project @ 2007-02-27 23:10:18 by rlubke] fix for issue 512.<br> are adamwiner m src/com/sun/faces/application/applicationassociate.<br>java - add some documentation to help make sense of how faces uses the unified el (helps when you don't look at the code for a month or so and need to revist) m src/com/sun/faces/application/applicationimpl.<br>java - moved the bulk of the logic in getelresolver( to elutils.<br>buildfacesresolver(<br> motivation here was that for the bulk of the elresolvers that we register, only one instance is needed.<br> previously we would create one instance for the faces and one for the jsp resolvers.<br> - implemented adam's suggestion for handling resolvers set via application.<br>set{property,variable}resolver( as well as those registered via application config resources.<br> see the implementations for elutils.<br>getdelegatevr( and elutils.<br>getdelegatepr( m src/com/sun/faces/util/util.<br>java - moved all el related methods from the 'dumping ground' to elutils.<br> - removed util.<br>getsessionmap(<br> not much benefit.<br> m src/com/sun/faces/application/statemanagerimpl.<br>java m src/com/sun/faces/config/configurelistener.<br>java m src/com/sun/faces/config/managedbeanfactoryimpl.<br>java m src/com/sun/faces/el/propertyresolverimpl.<br>java m src/com/sun/faces/el/variableresolverimpl.<br>java m src/com/sun/faces/lifecycle/elresolverinitphaselistener.<br>java m src/com/sun/faces/taglib/jsf_core/convertdatetimetag.<br>java m src/com/sun/faces/taglib/jsf_core/convertnumbertag.<br>java m src/com/sun/faces/taglib/jsf_core/loadbundletag.<br>java m src/com/sun/faces/taglib/jsf_core/validatedoublerangetag.<br>java m src/com/sun/faces/taglib/jsf_core/validatelengthtag.<br>java m src/com/sun/faces/taglib/jsf_core/validatelongrangetag.<br>java m test/com/sun/faces/application/deprstatemanagerimpl.<br>java m test/com/sun/faces/application/testapplicationimpl.<br>java m test/com/sun/faces/application/teststatemanagerimpl.<br>java m test/com/sun/faces/config/testmanagedbeanfactory.<br>java m test/com/sun/faces/el/testvaluebindingimpl.<br>java m test/com/sun/faces/el/testvalueexpressionimpl.<br>java m test/com/sun/faces/lifecycle/testupdatemodelvaluesphase.<br>java m test/com/sun/faces/renderkit/html_basic/testrenderers_1.<br>java m test/com/sun/faces/renderkit/html_basic/testrenderers_2.<br>java m test/com/sun/faces/util/testutil.<br>java - files effected by the refactoring a src/com/sun/faces/el/elutils.<br>java - new el-related utility methods are src/com/sun/faces/el/dummyvariableresolverimpl.<br>java - no longer used original author: rlubke date: 2007-02-27 23:10:25 00:00	2	-1	 4754[0] commit[0] b6c0d2a32cb38b876c89ee681765edc8aaefa47d/b6c0d2a32cb38b876c89ee681765edc8aefa47d[0] [project[0] @[0] 2007[0] -02[0] -27[0] 23[0] :10[0] :18[0] by[0] rlubke][0] fix[0] for[0] issue[0] 512[0] [[Sentence=-1,1=word max, 1-5]] r[0] adamwiner[0] m[0] src/com/sun/faces/application/applicationassociate[0] [[Sentence=-1,1=word max, 1-5]] java[0] add[0] some[0] documentation[0] to[0] help[0] make[0] sense[0] of[0] how[0] faces[0] uses[0] the[0] unified[0] el[0] helps[0] when[0] you[0] don't[0] look[0] at[0] the[0] code[0] for[0] a[0] month[0] or[0] so[0] and[0] need[0] to[0] revist[0] m[0] src/com/sun/faces/application/applicationimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] moved[0] the[0] bulk[0] of[0] the[0] logic[0] in[0] getelresolver[0] to[0] elutils[0] [[Sentence=-1,1=word max, 1-5]] buildfacesresolver[0] [[Sentence=-1,1=word max, 1-5]] motivation[0] here[0] was[0] that[0] for[0] the[0] bulk[0] of[0] the[0] elresolvers[0] that[0] we[0] register[0] only[0] one[0] instance[0] is[0] needed[0] [[Sentence=-1,1=word max, 1-5]] previously[0] we[0] would[0] create[0] one[0] instance[0] for[0] the[0] faces[0] and[0] one[0] for[0] the[0] jsp[0] resolvers[1] [[Sentence=-1,2=word max, 1-5]] implemented[0] adam's[0] suggestion[0] for[0] handling[0] resolvers[1] set[0] via[0] application[0] [[Sentence=-1,2=word max, 1-5]] set{property[0] variable}resolver[0] as[0] well[0] as[0] those[0] registered[0] via[0] application[0] config[0] resources[0] [[Sentence=-1,1=word max, 1-5]] see[0] the[0] implementations[0] for[0] elutils[0] [[Sentence=-1,1=word max, 1-5]] getdelegatevr[0] and[0] elutils[0] [[Sentence=-1,1=word max, 1-5]] getdelegatepr[0] m[0] src/com/sun/faces/util/util[0] [[Sentence=-1,1=word max, 1-5]] java[0] moved[0] all[0] el[0] related[0] methods[0] from[0] the[0] 'dumping[0] ground'[0] to[0] elutils[0] [[Sentence=-1,1=word max, 1-5]] removed[0] util[0] [[Sentence=-1,1=word max, 1-5]] getsessionmap[0] [[Sentence=-1,1=word max, 1-5]] not[0] much[0] benefit[0] [[Sentence=-1,1=word max, 1-5]] m[0] src/com/sun/faces/application/statemanagerimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] src/com/sun/faces/config/configurelistener[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] src/com/sun/faces/config/managedbeanfactoryimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] src/com/sun/faces/el/propertyresolverimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] src/com/sun/faces/el/variableresolverimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] src/com/sun/faces/lifecycle/elresolverinitphaselistener[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] src/com/sun/faces/taglib/jsf_core/convertdatetimetag[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] src/com/sun/faces/taglib/jsf_core/convertnumbertag[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] src/com/sun/faces/taglib/jsf_core/loadbundletag[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] src/com/sun/faces/taglib/jsf_core/validatedoublerangetag[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] src/com/sun/faces/taglib/jsf_core/validatelengthtag[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] src/com/sun/faces/taglib/jsf_core/validatelongrangetag[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] test/com/sun/faces/application/deprstatemanagerimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] test/com/sun/faces/application/testapplicationimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] test/com/sun/faces/application/teststatemanagerimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] test/com/sun/faces/config/testmanagedbeanfactory[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] test/com/sun/faces/el/testvaluebindingimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] test/com/sun/faces/el/testvalueexpressionimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] test/com/sun/faces/lifecycle/testupdatemodelvaluesphase[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] test/com/sun/faces/renderkit/html_basic/testrenderers_1[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] test/com/sun/faces/renderkit/html_basic/testrenderers_2[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] test/com/sun/faces/util/testutil[0] [[Sentence=-1,1=word max, 1-5]] java[0] files[0] effected[0] by[0] the[0] refactoring[0] a[0] src/com/sun/faces/el/elutils[0] [[Sentence=-1,1=word max, 1-5]] java[0] new[0] el[0] related[0] utility[0] methods[0] r[0] src/com/sun/faces/el/dummyvariableresolverimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] no[0] longer[0] used[0] original[0] author[0] rlubke[0] date[0] 2007[0] -02[0] -27[0] 23[0] :10[0] :25[0] 00[0] :00[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
5684 commit 381c9cffd685f28addece52745cc9ce2a9f4586c [project @ 2005-07-20 17:03:51 by edburns] issue: jsf-api 82: part 2 of 3 this change-bundle introduces the facesresourcebundleelresolver. the next step will be to integrate it with the chain and write system and integration tests. r jacob hookom a jsf-ri/src/com/sun/faces/el/facesresourcebundleelresolver.java - implementation as specified in chapter 5 a jsf-ri/test/com/sun/faces/el/testfacesresourcebundleelresolver.java - reasonably exhaustive tdd based test. whew, tdd is rather sub-optimal with glassfish, but apparently deploy time fixes are imminent. m jsf-ri/build-tests.xml - new test testfacesresourcebundleelresolver m jsf-ri/build.xml - added target to passthru prepare.test.webapp, for those days when glassfish command-line deployment is broken. m jsf-ri/src/com/sun/faces/application/applicationassociate.java - change the resourcebundles map to hold resourcebundlebean instances instead of plain basenames. change accessors appropriately. m jsf-ri/src/com/sun/faces/config/configurelistener.java - call new method addresourcebundlebean. m jsf-ri/src/com/sun/faces/el/implicitobjectelresolver.java m jsf-ri/src/com/sun/faces/el/implicitobjectelresolverforjsp.java m jsf-ri/src/com/sun/faces/el/managedbeanelresolver.java m jsf-ri/src/com/sun/faces/el/scopedattributeelresolver.java m jsf-ri/src/com/sun/faces/util/util.java - mostly unrelated refactoring. move copied and pasted getfeaturedescriptor() method out to util class. original author: edburns date: 2005-07-20 17:03:54 00:00 	5684 commit 381c9cffd685f28addece52745cc9ce2a9f4586c [project @ 2005-07-20 17:03:51 by edburns] issue: jsf-api 82: part 2 of 3 this change-bundle introduces the facesresourcebundleelresolver.<br> the next step will be to integrate it with the chain and write system and integration tests.<br> are jacob hookom a jsf-ri/src/com/sun/faces/el/facesresourcebundleelresolver.<br>java - implementation as specified in chapter 5 a jsf-ri/test/com/sun/faces/el/testfacesresourcebundleelresolver.<br>java - reasonably exhaustive tdd based test.<br> whew, tdd is rather sub-optimal with glassfish, but apparently deploy time fixes are imminent.<br> m jsf-ri/build-tests.<br>xml - new test testfacesresourcebundleelresolver m jsf-ri/build.<br>xml - added target to passthru prepare.<br>test.<br>webap, for those days when glassfish command-line deployment is broken.<br> m jsf-ri/src/com/sun/faces/application/applicationassociate.<br>java - change the resourcebundles map to hold resourcebundlebean instances instead of plain basenames.<br> change accessors appropriately.<br> m jsf-ri/src/com/sun/faces/config/configurelistener.<br>java - call new method addresourcebundlebean.<br> m jsf-ri/src/com/sun/faces/el/implicitobjectelresolver.<br>java m jsf-ri/src/com/sun/faces/el/implicitobjectelresolverforjsp.<br>java m jsf-ri/src/com/sun/faces/el/managedbeanelresolver.<br>java m jsf-ri/src/com/sun/faces/el/scopedattributeelresolver.<br>java m jsf-ri/src/com/sun/faces/util/util.<br>java - mostly unrelated refactoring.<br> move copied and pasted getfeaturedescriptor( method out to util class.<br> original author: edburns date: 2005-07-20 17:03:54 00:00	1	-2	 5684[0] commit[0] 381c9cffd685f28addece52745cc9ce2a9f4586c[0] [project[0] @[0] 2005[0] -07[0] -20[0] 17[0] :03[0] :51[0] by[0] edburns][0] issue[0] jsf[0] api[0] 82[0] part[0] 2[0] of[0] 3[0] this[0] change[0] bundle[0] introduces[0] the[0] facesresourcebundleelresolver[0] [[Sentence=-1,1=word max, 1-5]] the[0] next[0] step[0] will[0] be[0] to[0] integrate[0] it[0] with[0] the[0] chain[0] and[0] write[0] system[0] and[0] integration[0] tests[0] [[Sentence=-1,1=word max, 1-5]] r[0] jacob[0] hookom[0] a[0] jsf[0] ri/src/com/sun/faces/el/facesresourcebundleelresolver[0] [[Sentence=-1,1=word max, 1-5]] java[0] implementation[0] as[0] specified[0] in[0] chapter[0] 5[0] a[0] jsf[0] ri/test/com/sun/faces/el/testfacesresourcebundleelresolver[0] [[Sentence=-1,1=word max, 1-5]] java[0] reasonably[0] exhaustive[-1] tdd[0] based[0] test[0] [[Sentence=-2,1=word max, 1-5]] whew[0] tdd[0] is[0] rather[0] sub[0] optimal[0] with[0] glassfish[0] but[0] apparently[0] deploy[0] time[0] fixes[0] are[0] imminent[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/build[0] tests[0] [[Sentence=-1,1=word max, 1-5]] xml[0] new[0] test[0] testfacesresourcebundleelresolver[0] m[0] jsf[0] ri/build[0] [[Sentence=-1,1=word max, 1-5]] xml[0] added[0] target[0] to[0] passthru[0] prepare[0] [[Sentence=-1,1=word max, 1-5]] test[0] [[Sentence=-1,1=word max, 1-5]] webapp/webap[0] for[0] those[0] days[0] when[0] glassfish[0] command[0] line[0] deployment[0] is[0] broken[-1] [[Sentence=-2,1=word max, 1-5]] m[0] jsf[0] ri/src/com/sun/faces/application/applicationassociate[0] [[Sentence=-1,1=word max, 1-5]] java[0] change[0] the[0] resourcebundles[0] map[0] to[0] hold[0] resourcebundlebean[0] instances[0] instead[0] of[0] plain[0] basenames[0] [[Sentence=-1,1=word max, 1-5]] change[0] accessors[0] appropriately[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/com/sun/faces/config/configurelistener[0] [[Sentence=-1,1=word max, 1-5]] java[0] call[0] new[0] method[0] addresourcebundlebean[0] [[Sentence=-1,1=word max, 1-5]] m[0] jsf[0] ri/src/com/sun/faces/el/implicitobjectelresolver[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] ri/src/com/sun/faces/el/implicitobjectelresolverforjsp[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] ri/src/com/sun/faces/el/managedbeanelresolver[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] ri/src/com/sun/faces/el/scopedattributeelresolver[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] jsf[0] ri/src/com/sun/faces/util/util[0] [[Sentence=-1,1=word max, 1-5]] java[0] mostly[0] unrelated[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]] move[0] copied[0] and[0] pasted[0] getfeaturedescriptor[0] method[0] out[0] to[0] util[0] class[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] edburns[0] date[0] 2005[0] -07[0] -20[0] 17[0] :03[0] :54[0] 00[0] :00[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
6176 commit bfbee1654edfeea802977a740542e8bcf104cbcc [project @ 2004-04-27 17:25:02 by eburns] bugtraq 5033910 - the ri did not fully implement the scope protection rules in 5.3.1.3, whereby beans cannot refer to other beans that have a shorter scope. in addition, the spec said nothing about how to deal with mixed valuebinding/literal expressions in this case. i have updated the spec to state that the net scope of a mixed expression is the shortest scope of the constituent expressions, excluding the none scope. - i have also defined scopes for the implicit objects in the spec. this change-bundle honors those scope definitions. section: ri changes a test/com/sun/faces/config/claimconfiguration.java - new bean, this wasn't detected before, but now we need it. m conf/test/web.xml - must have initparam for minimumcustomerage m src/com/sun/faces/riconstants.java - introduce constants for all implicit objects. m src/com/sun/faces/application/applicationimpl.java - a new contract between applicationimpl and managedbeanfactory: after instantiation, set the managedbeanfactorymap into each individual managedbeanfactory. this allows us to check the scope of a bean before it has been created. m src/com/sun/faces/config/managedbeanfactory.java - most of the changes in this changebundle are in this class. - maintain a scopemap:   *  p used to determine the shortest scope in a mixed valuebinding   * expression. /p  - maintain managedbeanfactorymap: *  p setting this is part of the initialization contract for this * class. not setting this is a vialotation of that contract. /p  - rewrite hasvalidlifespan() to work in all cases * whether the "other" bean has been created or not * whether the "other" bean referenced in the expression has an implicit object scope reference or not. * whether the expression for the "other" bean is mixed or not - refactor in support of new hasvalidlifespan() work * added methods getnarrowestscopefromexpression(), getscopeforsingleexpression(). * removed dependency on valuebindingimpl by moving its getscope() out to util, per hans's recommendation. m src/com/sun/faces/el/valuebindingimpl.java - remove getscope() and getfirstsegmentindex(), moved to util. m src/com/sun/faces/el/variableresolverimpl.java - use riconstants instead of literal strings for implicit object checks. m src/com/sun/faces/util/util.java - new methods:   *  p this method is used by the managedbeanfactory to ensure that   * properties set by an expression point to an object with an   * accepted lifespan. /p    *   *  p get the scope of the expression. return  code null /code  if   * it isn't scoped /p    *   *  p for example, the expression:   *  code sessionscope.testbean.one /code  should return "session"   * as the scope. /p    *   * @param valuebinding the expression   *   * @param outstring an allocated string array into which we put the   * first segment.   *   * @return the scope of the expression   */   public static string getscope(string valuebinding,   string [] outstring)   * @result a list of expressions from the expressionstring   *   * @param expressionstring the expression string, with delimiters   * intact.   */     public static list getexpressionsfromstring(string expressionstring)   * the the first segment of a string tokenized by a "." or "["   *   * @return index of the first occurrence of . or [   */   private static int getfirstsegmentindex(string valuebinding) { m systest/build-tests.xml a systest/web/managed03.jsp m systest/web/web-inf/faces-config.xml - make sure the scope rule is violated, as expected m test/com/sun/faces/config/testmanagedbeanfactory.java - new positive and negative tests m test/com/sun/faces/el/testvaluebindingimpl.java - obtain getscope() from util. m web/test/web-inf/faces-config.xml m web/test/web-inf/faces-navigation.xml - new bean content, the absence of which was hitherto unnoticed due to the rules being lax. original author: eburns date: 2004-04-27 17:25:14 00:00 	6176 commit bfbee1654edfeea802977a740542e8bcf104cbc [project @ 2004-04-27 17:25:02 by eburns] bugtraq 5033910 - the ri did not fully implement the scope protection rules in 5.3.1.3, whereby beans cannot refer to other beans that have a shorter scope.<br> in addition, the spec said nothing about how to deal with mixed valuebinding/literal expressions in this case.<br> i have updated the spec to state that the net scope of a mixed expression is the shortest scope of the constituent expressions, excluding the none scope.<br> - i have also defined scopes for the implicit objects in the spec.<br> this change-bundle honors those scope definitions.<br> section: ri changes a test/com/sun/faces/config/claimconfiguration.<br>java - new bean, this wasn't detected before, but now we need it.<br> m conf/test/web.<br>xml - must have initparam for minimumcustomerage m src/com/sun/faces/riconstants.<br>java - introduce constants for all implicit objects.<br> m src/com/sun/faces/application/applicationimpl.<br>java - a new contract between applicationimpl and managedbeanfactory: after instantiation, set the managedbeanfactorymap into each individual managedbeanfactory.<br> this allows us to check the scope of a bean before it has been created.<br> m src/com/sun/faces/config/managedbeanfactory.<br>java - most of the changes in this changebundle are in this class.<br> - maintain a scopemap:   *  p used to determine the shortest scope in a mixed valuebinding   * expression.<br> /p  - maintain managedbeanfactorymap: *  p setting this is part of the initialization contract for this * class.<br> not setting this is a vialotation of that contract.<br> /p  - rewrite hasvalidlifespan( to work in all cases * whether the "other" bean has been created or not * whether the "other" bean referenced in the expression has an implicit object scope reference or not.<br> * whether the expression for the "other" bean is mixed or not - refactor in support of new hasvalidlifespan( work * added methods getnarrowestscopefromexpression( getscopeforsingleexpression(<br> * removed dependency on valuebindingimpl by moving its getscope( out to util, per hans's recommendation.<br> m src/com/sun/faces/el/valuebindingimpl.<br>java - remove getscope( and getfirstsegmentindex( moved to util.<br> m src/com/sun/faces/el/variableresolverimpl.<br>java - use riconstants instead of literal strings for implicit object checks.<br> m src/com/sun/faces/util/util.<br>java - new methods:   *  p this method is used by the managedbeanfactory to ensure that   * properties set by an expression point to an object with an   * accepted lifespan.<br> /p    *   *  p get the scope of the expression.<br> return  code null /code  if   * it isn't scoped /p    *   *  p for example, the expression:   *  code sessionscope.<br>testbean.<br>one /code  should return "session"   * as the scope.<br> /p    *   * @param valuebinding the expression   *   * @param outstring an allocated string array into which we put the   * first segment.<br>   *   * @return the scope of the expression   */   public static string getscope(string valuebinding,   string [] outstring)   * @result a list of expressions from the expressionstring   *   * @param expressionstring the expression string, with delimiters   * intact.<br>   */     public static list getexpressionsfromstring(string expressionstring)   * the the first segment of a string tokenized by a "<br> or "["   *   * @return index of the first occurrence of .<br> or [   */   private static int getfirstsegmentindex(string valuebinding) { m systest/build-tests.<br>xml a systest/web/managed03.<br>jsp m systest/web/web-inf/faces-config.<br>xml - make sure the scope rule is violated, as expected m test/com/sun/faces/config/testmanagedbeanfactory.<br>java - new positive and negative tests m test/com/sun/faces/el/testvaluebindingimpl.<br>java - obtain getscope( from util.<br> m web/test/web-inf/faces-config.<br>xml m web/test/web-inf/faces-navigation.<br>xml - new bean content, the absence of which was hitherto unnoticed due to the rules being lax.<br> original author: eburns date: 2004-04-27 17:25:14 00:00	3	-3	 6176[0] commit[0] bfbee1654edfeea802977a740542e8bcf104cbcc/bfbee1654edfeea802977a740542e8bcf104cbc[0] [project[0] @[0] 2004[0] -04[0] -27[0] 17[0] :25[0] :02[0] by[0] eburns][0] bugtraq[0] 5033910[0] the[0] ri[0] did[0] not[0] fully[0] implement[0] the[0] scope[0] protection[0] rules[0] in[0] 5[0] .3[0] .1[0] .3[0] whereby[0] beans[0] cannot[0] refer[0] to[0] other[0] beans[0] that[0] have[0] a[0] shorter[0] scope[0] [[Sentence=-1,1=word max, 1-5]] in[0] addition[0] the[0] spec[0] said[0] nothing[0] about[0] how[0] to[0] deal[0] with[0] mixed[0] valuebinding/literal[0] expressions[0] in[0] this[0] case[0] [[Sentence=-1,1=word max, 1-5]] i[0] have[0] updated[0] the[0] spec[0] to[0] state[0] that[0] the[0] net[0] scope[0] of[0] a[0] mixed[0] expression[0] is[0] the[0] shortest[0] scope[0] of[0] the[0] constituent[0] expressions[0] excluding[0] the[0] none[0] scope[0] [[Sentence=-1,1=word max, 1-5]] i[0] have[0] also[0] defined[0] scopes[0] for[0] the[0] implicit[0] objects[0] in[0] the[0] spec[0] [[Sentence=-1,1=word max, 1-5]] this[0] change[0] bundle[0] honors[0] those[0] scope[0] definitions[0] [[Sentence=-1,1=word max, 1-5]] section[0] ri[0] changes[0] a[0] test/com/sun/faces/config/claimconfiguration[0] [[Sentence=-1,1=word max, 1-5]] java[0] new[0] bean[0] this[0] wasn't[0] detected[0] before[0] but[0] now[0] we[0] need[0] it[0] [[Sentence=-1,1=word max, 1-5]] m[0] conf/test/web[0] [[Sentence=-1,1=word max, 1-5]] xml[0] must[0] have[0] initparam[0] for[0] minimumcustomerage[0] m[0] src/com/sun/faces/riconstants[0] [[Sentence=-1,1=word max, 1-5]] java[0] introduce[0] constants[0] for[0] all[0] implicit[0] objects[0] [[Sentence=-1,1=word max, 1-5]] m[0] src/com/sun/faces/application/applicationimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] new[0] contract[0] between[0] applicationimpl[0] and[0] managedbeanfactory[0] after[0] instantiation[0] set[0] the[0] managedbeanfactorymap[0] into[0] each[0] individual[0] managedbeanfactory[0] [[Sentence=-1,1=word max, 1-5]] this[0] allows[0] us[0] to[0] check[0] the[0] scope[0] of[0] a[0] bean[0] before[0] it[0] has[0] been[0] created[0] [[Sentence=-1,1=word max, 1-5]] m[0] src/com/sun/faces/config/managedbeanfactory[0] [[Sentence=-1,1=word max, 1-5]] java[0] most[0] of[0] the[0] changes[0] in[0] this[0] changebundle[0] are[0] in[0] this[0] class[0] [[Sentence=-1,1=word max, 1-5]] maintain[0] a[0] scopemap[0] p[0] used[0] to[0] determine[0] the[0] shortest[0] scope[0] in[0] a[0] mixed[0] valuebinding[0] expression[0] [[Sentence=-1,1=word max, 1-5]] /p[0] maintain[0] managedbeanfactorymap[0] p[0] setting[0] this[0] is[0] part[0] of[0] the[0] initialization[0] contract[0] for[0] this[0] class[0] [[Sentence=-1,1=word max, 1-5]] not[0] setting[0] this[0] is[0] a[0] vialotation[0] of[0] that[0] contract[0] [[Sentence=-1,1=word max, 1-5]] /p[0] rewrite[0] hasvalidlifespan[0] to[0] work[0] in[0] all[0] cases[0] whether[0] the[0] other[0] bean[0] has[0] been[0] created[0] or[0] not[0] whether[0] the[0] other[0] bean[0] referenced[0] in[0] the[0] expression[0] has[0] an[0] implicit[0] object[0] scope[0] reference[0] or[0] not[0] [[Sentence=-1,1=word max, 1-5]] whether[0] the[0] expression[0] for[0] the[0] other[0] bean[0] is[0] mixed[0] or[0] not[0] refactor[0] in[0] support[0] of[0] new[0] hasvalidlifespan[0] work[0] added[0] methods[0] getnarrowestscopefromexpression[0] getscopeforsingleexpression[0] [[Sentence=-1,1=word max, 1-5]] removed[0] dependency[0] on[0] valuebindingimpl[0] by[0] moving[0] its[0] getscope[0] out[0] to[0] util[0] per[0] hans's[0] recommendation[0] [[Sentence=-1,1=word max, 1-5]] m[0] src/com/sun/faces/el/valuebindingimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] remove[0] getscope[0] and[0] getfirstsegmentindex[0] moved[0] to[0] util[0] [[Sentence=-1,1=word max, 1-5]] m[0] src/com/sun/faces/el/variableresolverimpl[0] [[Sentence=-1,1=word max, 1-5]] java[0] use[0] riconstants[0] instead[0] of[0] literal[0] strings[0] for[0] implicit[0] object[0] checks[0] [[Sentence=-1,1=word max, 1-5]] m[0] src/com/sun/faces/util/util[0] [[Sentence=-1,1=word max, 1-5]] java[0] new[0] methods[0] p[0] this[0] method[0] is[0] used[0] by[0] the[0] managedbeanfactory[0] to[0] ensure[0] that[0] properties[0] set[0] by[0] an[0] expression[0] point[0] to[0] an[0] object[0] with[0] an[0] accepted[0] lifespan[0] [[Sentence=-1,1=word max, 1-5]] /p[0] p[0] get[0] the[0] scope[0] of[0] the[0] expression[0] [[Sentence=-1,1=word max, 1-5]] return[0] code[0] null[0] /code[0] if[0] it[0] isn't[0] scoped[0] /p[0] p[0] for[0] example[0] the[0] expression[0] code[0] sessionscope[0] [[Sentence=-1,1=word max, 1-5]] testbean[0] [[Sentence=-1,1=word max, 1-5]] one[0] /code[0] should[0] return[0] session[0] as[0] the[0] scope[0] [[Sentence=-1,1=word max, 1-5]] /p[0] @param[0] valuebinding[0] the[0] expression[0] @param[0] outstring[0] an[0] allocated[0] string[0] array[0] into[0] which[0] we[0] put[0] the[0] first[0] segment[0] [[Sentence=-1,1=word max, 1-5]] @return[0] the[0] scope[0] of[0] the[0] expression[0] */[0] public[0] static[0] string[0] getscope[0] string[0] valuebinding[0] string[0] [][0] outstring[0] @result[0] a[0] list[0] of[0] expressions[0] from[0] the[0] expressionstring[0] @param[0] expressionstring[0] the[0] expression[0] string[0] with[0] delimiters[0] intact[0] [[Sentence=-1,1=word max, 1-5]] */[0] public[0] static[0] list[0] getexpressionsfromstring[0] string[0] expressionstring[0] the[0] the[0] first[0] segment[0] of[0] a[0] string[0] tokenized[0] by[0] a[0] [[Sentence=-1,1=word max, 1-5]] or[0] "[[0] @return[0] index[0] of[0] the[0] first[0] occurrence[0] of[0] [[Sentence=-1,1=word max, 1-5]] or[0] [[0] */[0] private[0] static[0] int[0] getfirstsegmentindex[0] string[0] valuebinding[0] {[0] m[0] systest/build[0] tests[0] [[Sentence=-1,1=word max, 1-5]] xml[0] a[0] systest/web/managed03[0] [[Sentence=-1,1=word max, 1-5]] jsp[0] m[0] systest/web/web[0] inf/faces[0] config[0] [[Sentence=-1,1=word max, 1-5]] xml[0] make[0] sure[0] the[0] scope[0] rule[0] is[0] violated[-2] as[0] expected[0] m[0] test/com/sun/faces/config/testmanagedbeanfactory[0] [[Sentence=-3,1=word max, 1-5]] java[0] new[0] positive[2] and[0] negative[-1] tests[0] m[0] test/com/sun/faces/el/testvaluebindingimpl[0] [[Sentence=-2,3=word max, 1-5]] java[0] obtain[0] getscope[0] from[0] util[0] [[Sentence=-1,1=word max, 1-5]] m[0] web/test/web[0] inf/faces[0] config[0] [[Sentence=-1,1=word max, 1-5]] xml[0] m[0] web/test/web[0] inf/faces[0] navigation[0] [[Sentence=-1,1=word max, 1-5]] xml[0] new[0] bean[0] content[0] the[0] absence[-1] of[0] which[0] was[0] hitherto[0] unnoticed[-1] due[0] to[0] the[0] rules[0] being[0] lax[0] [[Sentence=-2,1=word max, 1-5]] original[0] author[0] eburns[0] date[0] 2004[0] -04[0] -27[0] 17[0] :25[0] :14[0] 00[0] :00[0] [[Sentence=-1,1=word max, 1-5]][[[3,-3 max of sentences]]]
7444 commit 412be3c833519ac48d613dd0cb6098d40ddcc9ae [project @ 2003-07-08 15:38:23 by eburns] author: roger kitain r edburns parts one and two of the config* refactoring. unit tests, system tests, and guessnumber all work. original author: eburns date: 2003-07-08 15:38:52 00:00 	744 commit 412be3c833519ac48d613dd0cb6098d40ddcc9ae [project @ 2003-07-08 15:38:23 by eburns] author: roger kitain are edburns parts one and two of the config* refactoring.<br> unit tests, system tests, and guessnumber all work.<br> original author: eburns date: 2003-07-08 15:38:52 00:00	1	-1	 7444/744[0] commit[0] 412be3c833519ac48d613dd0cb6098d40ddcc9ae[0] [project[0] @[0] 2003[0] -07[0] -08[0] 15[0] :38[0] :23[0] by[0] eburns][0] author[0] roger[0] kitain[0] r[0] edburns[0] parts[0] one[0] and[0] two[0] of[0] the[0] config[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]] unit[0] tests[0] system[0] tests[0] and[0] guessnumber[0] all[0] work[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] eburns[0] date[0] 2003[0] -07[0] -08[0] 15[0] :38[0] :52[0] 00[0] :00[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7635 commit a0f2ee2f1c5efb288dbcafd30228217a8e742089 [project @ 2003-05-01 18:04:00 by eburns] this checkin adds message* to the config* system. section: ri changes a src/com/sun/faces/config/configmessageresources.java a src/com/sun/faces/config/configmessage.java - new config* beans for message* m src/com/sun/faces/jsf-ri-config.xml - added standard message configuration. m src/com/sun/faces/config/configbase.java - added messagesmap m src/com/sun/faces/config/configparser.java - digester rules for message* m test/com/sun/faces/facestestcaseservice.java - refactored out "ismember" method to here, from testapplicationimpl_config. m test/com/sun/faces/jspfacestestcase.java m test/com/sun/faces/servletfacestestcase.java - call through to facesservice().ismember() m test/com/sun/faces/application/testapplicationimpl_config.java - remove ismember. m test/com/sun/faces/config/configfiletestcase.java - new testcase. section: ri diffs index: src/com/sun/faces/jsf-ri-config.xml                                                                     rcs file: /export/cvs/jsf-ri/src/com/sun/faces/jsf-ri-config.xml,v retrieving revision 1.3 diff -u -r1.3 jsf-ri-config.xml --- src/com/sun/faces/jsf-ri-config.xml 1 may 2003 07:42:08 -0000 1.3     src/com/sun/faces/jsf-ri-config.xml 1 may 2003 17:46:12 -0000 @@ -155,6  155,80 @@  converter-class com.sun.faces.convert.booleanconverter /converter-class   /converter     !-- standard message-resources --       message-resources     message-resources-id javax.faces.context.faces_api_messages /message-resources-id     message-resources-class com.sun.faces.context.messageresourcesimpl /message-resources-class     message     message-id javax.faces.validator.doublerangevalidator.limit /message-id     message-class javax.faces.application.messageimpl /message-class     /message     message     message-id javax.faces.validator.doublerangevalidator.maximum /message-id     message-class javax.faces.application.messageimpl /message-class     /message     message     message-id javax.faces.validator.doublerangevalidator.minimum /message-id     message-class javax.faces.application.messageimpl /message-class     /message     message     message-id javax.faces.validator.doublerangevalidator.type /message-id     message-class javax.faces.application.messageimpl /message-class     /message     message     message-id javax.faces.validator.lengthvalidator.limit /message-id     message-class javax.faces.application.messageimpl /message-class     /message     message     message-id javax.faces.validator.lengthvalidator.maximum /message-id     message-class javax.faces.application.messageimpl /message-class     /message     message     message-id javax.faces.validator.lengthvalidator.minimum /message-id     message-class javax.faces.application.messageimpl /message-class     /message     message     message-id javax.faces.validator.requiredvalidator.failed /message-id     message-class javax.faces.application.messageimpl /message-class     /message     message     message-id javax.faces.validator.longrangevalidator.limit /message-id     message-class javax.faces.application.messageimpl /message-class     /message     message     message-id javax.faces.validator.longrangevalidator.maximum /message-id     message-class javax.faces.application.messageimpl /message-class     /message     message     message-id javax.faces.validator.longrangevalidator.minimum /message-id     message-class javax.faces.application.messageimpl /message-class     /message     message     message-id javax.faces.validator.longrangevalidator.type /message-id     message-class javax.faces.application.messageimpl /message-class     /message     message     message-id javax.faces.validator.stringrangevalidator.limit /message-id     message-class javax.faces.application.messageimpl /message-class     /message     message     message-id javax.faces.validator.stringrangevalidator.maximum /message-id     message-class javax.faces.application.messageimpl /message-class     /message     message     message-id javax.faces.validator.stringrangevalidator.minimum /message-id     message-class javax.faces.application.messageimpl /message-class     /message     message     message-id javax.faces.validator.stringrangevalidator.type /message-id     message-class javax.faces.application.messageimpl /message-class     /message     message     message-id javax.faces.validator.requiredvalidator.failed /message-id     message-class javax.faces.application.messageimpl /message-class     /message     /message-resources   !-- second application element with overapping values --   application  index: src/com/sun/faces/config/configbase.java                                                                     rcs file: /export/cvs/jsf-ri/src/com/sun/faces/config/configbase.java,v retrieving revision 1.4 diff -u -r1.4 configbase.java --- src/com/sun/faces/config/configbase.java 1 may 2003 07:20:17 -0000 1.4     src/com/sun/faces/config/configbase.java 1 may 2003 17:46:13 -0000 @@ -101,6  101,23 @@ } }   // ------------------------------------------------------------  message-resources      private map messageresources   null;   public void addmessageresources(configmessageresources newresource) {   if (messageresources    null) {   messageresources   new hashmap();   }   messageresources.put(newresource.getmessageresourcesid(),   newresource);   }   public map getmessageresources() {   if (messageresources    null) {   return (collections.empty_map);   } else {   return (this.messageresources);   }   } // ------------------------------------------------------------  validator  index: src/com/sun/faces/config/configparser.java                                                                     rcs file: /export/cvs/jsf-ri/src/com/sun/faces/config/configparser.java,v retrieving revision 1.8 diff -u -r1.8 configparser.java --- src/com/sun/faces/config/configparser.java 1 may 2003 07:20:17 -0000 1.8     src/com/sun/faces/config/configparser.java 1 may 2003 17:46:14 -0000 @@ -193,6  193,7 @@ configurerulesapplication(digester); configurerulesconverter(digester);   configurerulesmessageresources(digester); configurerulescomponent(digester); configurerulesvalidator(digester); configurerulesmanagedbean(digester); @@ -262,6  263,29 @@ }   // configure the rules for a  message-resources  element   protected void configurerulesmessageresources(digester digester) {   string prefix   "faces-config/message-resources";     digester.addobjectcreate(prefix, "com.sun.faces.config.configmessageresources");   digester.addsetnext(prefix, "addmessageresources", "com.sun.faces.config.configmessageresources");   digester.addcallmethod(prefix   "/message-resources-id",   "setmessageresourcesid", 0);   digester.addcallmethod(prefix   "/message-resources-class",   "setmessageresourcesclass", 0);   configurerulesmessage(digester);   }     protected void configurerulesmessage(digester digester) {   string prefix   "faces-config/message-resources/message";     digester.addobjectcreate(prefix, "com.sun.faces.config.configmessage");   digester.addsetnext(prefix, "addmessage", "com.sun.faces.config.configmessage");   digester.addcallmethod(prefix   "/message-id",   "setmessageid", 0);   digester.addcallmethod(prefix   "/message-class",   "setmessageclass", 0);   } // configure the rules for a  property  element protected void configurerulesproperty(digester digester, string prefix) { index: test/com/sun/faces/facestestcaseservice.java                                                                     rcs file: /export/cvs/jsf-ri/test/com/sun/faces/facestestcaseservice.java,v retrieving revision 1.13 diff -u -r1.13 facestestcaseservice.java --- test/com/sun/faces/facestestcaseservice.java 1 may 2003 06:31:59 -0000 1.13     test/com/sun/faces/facestestcaseservice.java 1 may 2003 17:46:15 -0000 @@ -242,4  242,16 @@ return result; }  public boolean ismember(string totest, string [] set) {   int   len   set.length,   i   0;   for (i   0; i   len; i  ) {   if (set[i].equals(totest)) {   return true;   }   }   return false;  }   } // end of class facestestcaseservice index: test/com/sun/faces/jspfacestestcase.java                                                                     rcs file: /export/cvs/jsf-ri/test/com/sun/faces/jspfacestestcase.java,v retrieving revision 1.3 diff -u -r1.3 jspfacestestcase.java --- test/com/sun/faces/jspfacestestcase.java 20 feb 2003 22:49:46 -0000 1.3     test/com/sun/faces/jspfacestestcase.java 1 may 2003 17:46:15 -0000 @@ -157,4  157,9 @@ return false; }  public boolean ismember(string totest, string [] set)  {   return facesservice.ismember(totest, set);  }   } // end of class jspfacestestcase index: test/com/sun/faces/servletfacestestcase.java                                                                     rcs file: /export/cvs/jsf-ri/test/com/sun/faces/servletfacestestcase.java,v retrieving revision 1.3 diff -u -r1.3 servletfacestestcase.java --- test/com/sun/faces/servletfacestestcase.java 20 feb 2003 22:49:47 -0000 1.3     test/com/sun/faces/servletfacestestcase.java 1 may 2003 17:46:15 -0000 @@ -157,4  157,10 @@ return facesservice.verifyexpectedoutput(); }  public boolean ismember(string totest, string [] set)  {   return facesservice.ismember(totest, set);  }     } // end of class servletfacestestcase index: test/com/sun/faces/application/testapplicationimpl_config.java                                                                     rcs file: /export/cvs/jsf-ri/test/com/sun/faces/application/testapplicationimpl_config.java,v retrieving revision 1.2 diff -u -r1.2 testapplicationimpl_config.java --- test/com/sun/faces/application/testapplicationimpl_config.java 1 may 2003 07:42:12 -0000 1.2     test/com/sun/faces/application/testapplicationimpl_config.java 1 may 2003 17:46:15 -0000 @@ -287,17  287,4 @@ } } - protected boolean ismember(string totest, string [] set) { - int - len   set.length, - i   0; - for (i   0; i   len; i  ) { - if (set[i].equals(totest)) { - return true; - } - } - return false; - } - - } // end of class testapplicationimpl_config index: test/com/sun/faces/config/configfiletestcase.java                                                                     rcs file: /export/cvs/jsf-ri/test/com/sun/faces/config/configfiletestcase.java,v retrieving revision 1.7 diff -u -r1.7 configfiletestcase.java --- test/com/sun/faces/config/configfiletestcase.java 1 may 2003 07:20:19 -0000 1.7     test/com/sun/faces/config/configfiletestcase.java 1 may 2003 17:46:16 -0000 @@ -27,6  27,7 @@ import javax.servlet.servletcontext; import javax.faces.factoryfinder; import javax.faces.application.applicationfactory;  import javax.faces.context.messageresources; import org.apache.cactus.servlettestcase; import org.apache.cactus.webrequest; @@ -69,6  70,49 @@ // ------------------------------------------------ individual test methods     public void testmessageresources() {   // test the default messages   applicationfactory afactory   (applicationfactory)factoryfinder.getfactory(   factoryfinder.application_factory);   applicationimpl application   (applicationimpl)afactory.getapplication();   configbase yourbase   application.getappconfig().getconfigbase();   configmessageresources messageresources   null;   configmessage message   null;   map   messageresourcesmap   null,   messagesmap   null;   string apimessages []   {   "javax.faces.validator.doublerangevalidator.limit",   "javax.faces.validator.doublerangevalidator.maximum",   "javax.faces.validator.doublerangevalidator.minimum",   "javax.faces.validator.doublerangevalidator.type",   "javax.faces.validator.lengthvalidator.limit",   "javax.faces.validator.lengthvalidator.maximum",   "javax.faces.validator.lengthvalidator.minimum",   "javax.faces.validator.requiredvalidator.failed",   "javax.faces.validator.longrangevalidator.limit",   "javax.faces.validator.longrangevalidator.maximum",   "javax.faces.validator.longrangevalidator.minimum",   "javax.faces.validator.longrangevalidator.type",   "javax.faces.validator.stringrangevalidator.limit",   "javax.faces.validator.stringrangevalidator.maximum",   "javax.faces.validator.stringrangevalidator.minimum",   "javax.faces.validator.stringrangevalidator.type",   "javax.faces.validator.requiredvalidator.failed"   };   iterator messageiter   null;     asserttrue(null !  (messageresourcesmap     yourbase.getmessageresources()));   asserttrue(null !  (messageresources   (configmessageresources)   messageresourcesmap.get(messageresources.faces_api_messages)));   asserttrue(null !  (messagesmap   messageresources.getmessages()));   asserttrue(null !  (messageiter   messagesmap.keyset().iterator()));   while (messageiter.hasnext()) {   asserttrue(ismember((string) messageiter.next(), apimessages));   }   } original author: eburns date: 2003-05-01 18:04:08 00:00 	7635 commit a0f2ee2f1c5efb288dbcafd30228217a8e742089 [project @ 2003-05-01 18:04:00 by eburns] this checkin adds message* to the config* system.<br> section: ri changes a src/com/sun/faces/config/configmessageresources.<br>java a src/com/sun/faces/config/configmessage.<br>java - new config* beans for message* m src/com/sun/faces/jsf-ri-config.<br>xml - added standard message configuration.<br> m src/com/sun/faces/config/configbase.<br>java - added messagesmap m src/com/sun/faces/config/configparser.<br>java - digester rules for message* m test/com/sun/faces/facestestcaseservice.<br>java - refactored out "ismember" method to here, from testapplicationimpl_config.<br> m test/com/sun/faces/jspfacestestcase.<br>java m test/com/sun/faces/servletfacestestcase.<br>java - call through to facesservice(<br>ismember( m test/com/sun/faces/application/testapplicationimpl_config.<br>java - remove ismember.<br> m test/com/sun/faces/config/configfiletestcase.<br>java - new testcase.<br> section: ri diffs index: src/com/sun/faces/jsf-ri-config.<br>xml                                                                     rcs file: /export/cvs/jsf-ri/src/com/sun/faces/jsf-ri-config.<br>xml,v retrieving revision 1.3 diff -you -r1.3 jsf-ri-config.<br>xml - src/com/sun/faces/jsf-ri-config.<br>xml 1 may 2003 07:42:08 -00 1.3     src/com/sun/faces/jsf-ri-config.<br>xml 1 may 2003 17:46:12 -00 @@ -155,6  155,80 @@  converter-class com.<br>sun.<br>faces.<br>convert.<br>booleanconverter /converter-class   /converter     !<br> standard message-resources -       message-resources     message-resources-id javax.<br>faces.<br>context.<br>faces_api_messages /message-resources-id     message-resources-class com.<br>sun.<br>faces.<br>context.<br>messageresourcesimpl /message-resources-class     message     message-id javax.<br>faces.<br>validator.<br>doublerangevalidator.<br>limit /message-id     message-class javax.<br>faces.<br>application.<br>messageimpl /message-class     /message     message     message-id javax.<br>faces.<br>validator.<br>doublerangevalidator.<br>maximum /message-id     message-class javax.<br>faces.<br>application.<br>messageimpl /message-class     /message     message     message-id javax.<br>faces.<br>validator.<br>doublerangevalidator.<br>minimum /message-id     message-class javax.<br>faces.<br>application.<br>messageimpl /message-class     /message     message     message-id javax.<br>faces.<br>validator.<br>doublerangevalidator.<br>type /message-id     message-class javax.<br>faces.<br>application.<br>messageimpl /message-class     /message     message     message-id javax.<br>faces.<br>validator.<br>lengthvalidator.<br>limit /message-id     message-class javax.<br>faces.<br>application.<br>messageimpl /message-class     /message     message     message-id javax.<br>faces.<br>validator.<br>lengthvalidator.<br>maximum /message-id     message-class javax.<br>faces.<br>application.<br>messageimpl /message-class     /message     message     message-id javax.<br>faces.<br>validator.<br>lengthvalidator.<br>minimum /message-id     message-class javax.<br>faces.<br>application.<br>messageimpl /message-class     /message     message     message-id javax.<br>faces.<br>validator.<br>requiredvalidator.<br>failed /message-id     message-class javax.<br>faces.<br>application.<br>messageimpl /message-class     /message     message     message-id javax.<br>faces.<br>validator.<br>longrangevalidator.<br>limit /message-id     message-class javax.<br>faces.<br>application.<br>messageimpl /message-class     /message     message     message-id javax.<br>faces.<br>validator.<br>longrangevalidator.<br>maximum /message-id     message-class javax.<br>faces.<br>application.<br>messageimpl /message-class     /message     message     message-id javax.<br>faces.<br>validator.<br>longrangevalidator.<br>minimum /message-id     message-class javax.<br>faces.<br>application.<br>messageimpl /message-class     /message     message     message-id javax.<br>faces.<br>validator.<br>longrangevalidator.<br>type /message-id     message-class javax.<br>faces.<br>application.<br>messageimpl /message-class     /message     message     message-id javax.<br>faces.<br>validator.<br>stringrangevalidator.<br>limit /message-id     message-class javax.<br>faces.<br>application.<br>messageimpl /message-class     /message     message     message-id javax.<br>faces.<br>validator.<br>stringrangevalidator.<br>maximum /message-id     message-class javax.<br>faces.<br>application.<br>messageimpl /message-class     /message     message     message-id javax.<br>faces.<br>validator.<br>stringrangevalidator.<br>minimum /message-id     message-class javax.<br>faces.<br>application.<br>messageimpl /message-class     /message     message     message-id javax.<br>faces.<br>validator.<br>stringrangevalidator.<br>type /message-id     message-class javax.<br>faces.<br>application.<br>messageimpl /message-class     /message     message     message-id javax.<br>faces.<br>validator.<br>requiredvalidator.<br>failed /message-id     message-class javax.<br>faces.<br>application.<br>messageimpl /message-class     /message     /message-resources   !<br> second application element with overapping values -   application  index: src/com/sun/faces/config/configbase.<br>java                                                                     rcs file: /export/cvs/jsf-ri/src/com/sun/faces/config/configbase.<br>java,v retrieving revision 1.4 diff -you -r1.4 configbase.<br>java - src/com/sun/faces/config/configbase.<br>java 1 may 2003 07:20:17 -00 1.4     src/com/sun/faces/config/configbase.<br>java 1 may 2003 17:46:13 -00 @@ -101,6  101,23 @@ } }   // -  message-resources      private map messageresources   null;   public void addmessageresources(configmessageresources newresource) {   if (messageresources    null) {   messageresources   new hashmap(   }   messageresources.<br>put(newresource.<br>getmessageresourcesid(   newresource)   }   public map getmessageresources( {   if (messageresources    null) {   return (collections.<br>empty_map)   } else {   return (this.<br>messageresources)   }   } // -  validator  index: src/com/sun/faces/config/configparser.<br>java                                                                     rcs file: /export/cvs/jsf-ri/src/com/sun/faces/config/configparser.<br>java,v retrieving revision 1.8 diff -you -r1.8 configparser.<br>java - src/com/sun/faces/config/configparser.<br>java 1 may 2003 07:20:17 -00 1.8     src/com/sun/faces/config/configparser.<br>java 1 may 2003 17:46:14 -00 @@ -193,6  193,7 @@ configurerulesapplication(digester) configurerulesconverter(digester)   configurerulesmessageresources(digester) configurerulescomponent(digester) configurerulesvalidator(digester) configurerulesmanagedbean(digester) @@ -262,6  263,29 @@ }   // configure the rules for a  message-resources  element   protected void configurerulesmessageresources(digester digester) {   string prefix   "faces-config/message-resources"     digester.<br>addobjectcreate(prefix, "com.<br>sun.<br>faces.<br>config.<br>configmessageresources"   digester.<br>addsetnext(prefix, "addmessageresources" "com.<br>sun.<br>faces.<br>config.<br>configmessageresources"   digester.<br>addcallmethod(prefix   "/message-resources-id"   "setmessageresourcesid" 0)   digester.<br>addcallmethod(prefix   "/message-resources-class"   "setmessageresourcesclass" 0)   configurerulesmessage(digester)   }     protected void configurerulesmessage(digester digester) {   string prefix   "faces-config/message-resources/message"     digester.<br>addobjectcreate(prefix, "com.<br>sun.<br>faces.<br>config.<br>configmessage"   digester.<br>addsetnext(prefix, "addmessage" "com.<br>sun.<br>faces.<br>config.<br>configmessage"   digester.<br>addcallmethod(prefix   "/message-id"   "setmessageid" 0)   digester.<br>addcallmethod(prefix   "/message-class"   "setmessageclass" 0)   } // configure the rules for a  property  element protected void configurerulesproperty(digester digester, string prefix) { index: test/com/sun/faces/facestestcaseservice.<br>java                                                                     rcs file: /export/cvs/jsf-ri/test/com/sun/faces/facestestcaseservice.<br>java,v retrieving revision 1.13 diff -you -r1.13 facestestcaseservice.<br>java - test/com/sun/faces/facestestcaseservice.<br>java 1 may 2003 06:31:59 -00 1.13     test/com/sun/faces/facestestcaseservice.<br>java 1 may 2003 17:46:15 -00 @@ -242,4  242,16 @@ return result; }  public boolean ismember(string totest, string [] set) {   int   len   set.<br>length,   i   0;   for (i   0; i   len; i  ) {   if (set[i].<br>equals(totest) {   return true;   }   }   return false;  }   } // end of class facestestcaseservice index: test/com/sun/faces/jspfacestestcase.<br>java                                                                     rcs file: /export/cvs/jsf-ri/test/com/sun/faces/jspfacestestcase.<br>java,v retrieving revision 1.3 diff -you -r1.3 jspfacestestcase.<br>java - test/com/sun/faces/jspfacestestcase.<br>java 20 feb 2003 22:49:46 -00 1.3     test/com/sun/faces/jspfacestestcase.<br>java 1 may 2003 17:46:15 -00 @@ -157,4  157,9 @@ return false; }  public boolean ismember(string totest, string [] set)  {   return facesservice.<br>ismember(totest, set)  }   } // end of class jspfacestestcase index: test/com/sun/faces/servletfacestestcase.<br>java                                                                     rcs file: /export/cvs/jsf-ri/test/com/sun/faces/servletfacestestcase.<br>java,v retrieving revision 1.3 diff -you -r1.3 servletfacestestcase.<br>java - test/com/sun/faces/servletfacestestcase.<br>java 20 feb 2003 22:49:47 -00 1.3     test/com/sun/faces/servletfacestestcase.<br>java 1 may 2003 17:46:15 -00 @@ -157,4  157,10 @@ return facesservice.<br>verifyexpectedoutput( }  public boolean ismember(string totest, string [] set)  {   return facesservice.<br>ismember(totest, set)  }     } // end of class servletfacestestcase index: test/com/sun/faces/application/testapplicationimpl_config.<br>java                                                                     rcs file: /export/cvs/jsf-ri/test/com/sun/faces/application/testapplicationimpl_config.<br>java,v retrieving revision 1.2 diff -you -r1.2 testapplicationimpl_config.<br>java - test/com/sun/faces/application/testapplicationimpl_config.<br>java 1 may 2003 07:42:12 -00 1.2     test/com/sun/faces/application/testapplicationimpl_config.<br>java 1 may 2003 17:46:15 -00 @@ -287,17  287,4 @@ } } - protected boolean ismember(string totest, string [] set) { - int - len   set.<br>length, - i   0; - for (i   0; i   len; i  ) { - if (set[i].<br>equals(totest) { - return true; - } - } - return false; - } - - } // end of class testapplicationimpl_config index: test/com/sun/faces/config/configfiletestcase.<br>java                                                                     rcs file: /export/cvs/jsf-ri/test/com/sun/faces/config/configfiletestcase.<br>java,v retrieving revision 1.7 diff -you -r1.7 configfiletestcase.<br>java - test/com/sun/faces/config/configfiletestcase.<br>java 1 may 2003 07:20:19 -00 1.7     test/com/sun/faces/config/configfiletestcase.<br>java 1 may 2003 17:46:16 -00 @@ -27,6  27,7 @@ import javax.<br>servlet.<br>servletcontext; import javax.<br>faces.<br>factoryfinder; import javax.<br>faces.<br>application.<br>applicationfactory;  import javax.<br>faces.<br>context.<br>messageresources; import org.<br>apache.<br>cactus.<br>servlettestcase; import org.<br>apache.<br>cactus.<br>webrequest; @@ -69,6  70,49 @@ // - individual test methods     public void testmessageresources( {   // test the default messages   applicationfactory afactory   (applicationfactory)factoryfinder.<br>getfactory(   factoryfinder.<br>application_factory)   applicationimpl application   (applicationimpl)afactory.<br>getapplication(   configbase yourbase   application.<br>getappconfig(<br>getconfigbase(   configmessageresources messageresources   null;   configmessage message   null;   map   messageresourcesmap   null,   messagesmap   null;   string apimessages []   {   "javax.<br>faces.<br>validator.<br>doublerangevalidator.<br>limit"   "javax.<br>faces.<br>validator.<br>doublerangevalidator.<br>maximum"   "javax.<br>faces.<br>validator.<br>doublerangevalidator.<br>minimum"   "javax.<br>faces.<br>validator.<br>doublerangevalidator.<br>type"   "javax.<br>faces.<br>validator.<br>lengthvalidator.<br>limit"   "javax.<br>faces.<br>validator.<br>lengthvalidator.<br>maximum"   "javax.<br>faces.<br>validator.<br>lengthvalidator.<br>minimum"   "javax.<br>faces.<br>validator.<br>requiredvalidator.<br>failed"   "javax.<br>faces.<br>validator.<br>longrangevalidator.<br>limit"   "javax.<br>faces.<br>validator.<br>longrangevalidator.<br>maximum"   "javax.<br>faces.<br>validator.<br>longrangevalidator.<br>minimum"   "javax.<br>faces.<br>validator.<br>longrangevalidator.<br>type"   "javax.<br>faces.<br>validator.<br>stringrangevalidator.<br>limit"   "javax.<br>faces.<br>validator.<br>stringrangevalidator.<br>maximum"   "javax.<br>faces.<br>validator.<br>stringrangevalidator.<br>minimum"   "javax.<br>faces.<br>validator.<br>stringrangevalidator.<br>type"   "javax.<br>faces.<br>validator.<br>requiredvalidator.<br>failed"   };   iterator messageiter   null;     asserttrue(null !<br>  (messageresourcesmap     yourbase.<br>getmessageresources(   asserttrue(null !<br>  (messageresources   (configmessageresources)   messageresourcesmap.<br>get(messageresources.<br>faces_api_messages)   asserttrue(null !<br>  (messagesmap   messageresources.<br>getmessages(   asserttrue(null !<br>  (messageiter   messagesmap.<br>keyset(<br>iterator(   while (messageiter.<br>hasnext( {   asserttrue(ismember(string) messageiter.<br>next( apimessages)   }   } original author: eburns date: 2003-05-01 18:04:08 00:00	2	-2	 7635[0] commit[0] a0f2ee2f1c5efb288dbcafd30228217a8e742089[0] [project[0] @[0] 2003[0] -05[0] -01[0] 18[0] :04[0] :00[0] by[0] eburns][0] this[0] checkin[0] adds[0] message[0] to[0] the[0] config[0] system[0] [[Sentence=-1,1=word max, 1-5]] section[0] ri[0] changes[0] a[0] src/com/sun/faces/config/configmessageresources[0] [[Sentence=-1,1=word max, 1-5]] java[0] a[0] src/com/sun/faces/config/configmessage[0] [[Sentence=-1,1=word max, 1-5]] java[0] new[0] config[0] beans[0] for[0] message[0] m[0] src/com/sun/faces/jsf[0] ri[0] config[0] [[Sentence=-1,1=word max, 1-5]] xml[0] added[0] standard[0] message[0] configuration[0] [[Sentence=-1,1=word max, 1-5]] m[0] src/com/sun/faces/config/configbase[0] [[Sentence=-1,1=word max, 1-5]] java[0] added[0] messagesmap[0] m[0] src/com/sun/faces/config/configparser[0] [[Sentence=-1,1=word max, 1-5]] java[0] digester[0] rules[0] for[0] message[0] m[0] test/com/sun/faces/facestestcaseservice[0] [[Sentence=-1,1=word max, 1-5]] java[0] refactored[0] out[0] ismember[0] method[0] to[0] here[0] from[0] testapplicationimpl_config[0] [[Sentence=-1,1=word max, 1-5]] m[0] test/com/sun/faces/jspfacestestcase[0] [[Sentence=-1,1=word max, 1-5]] java[0] m[0] test/com/sun/faces/servletfacestestcase[0] [[Sentence=-1,1=word max, 1-5]] java[0] call[0] through[0] to[0] facesservice[0] [[Sentence=-1,1=word max, 1-5]] ismember[0] m[0] test/com/sun/faces/application/testapplicationimpl_config[0] [[Sentence=-1,1=word max, 1-5]] java[0] remove[0] ismember[0] [[Sentence=-1,1=word max, 1-5]] m[0] test/com/sun/faces/config/configfiletestcase[0] [[Sentence=-1,1=word max, 1-5]] java[0] new[0] testcase[0] [[Sentence=-1,1=word max, 1-5]] section[0] ri[0] diffs[0] index[0] src/com/sun/faces/jsf[0] ri[0] config[0] [[Sentence=-1,1=word max, 1-5]] xml[0] rcs[0] file[0] /export/cvs/jsf[0] ri/src/com/sun/faces/jsf[0] ri[0] config[0] [[Sentence=-1,1=word max, 1-5]] xml[0] v[0] retrieving[0] revision[0] 1[0] .3[0] diff[0] u[0] r1[0] .3[0] jsf[0] ri[0] config[0] [[Sentence=-1,1=word max, 1-5]] xml[0] src/com/sun/faces/jsf[0] ri[0] config[0] [[Sentence=-1,1=word max, 1-5]] xml[0] 1[0] may[0] 2003[0] 07[0] :42[0] :08[0] -0000/-00[0][+0.6 MultipleLetters] 1[0] .3[0] src/com/sun/faces/jsf[0] ri[0] config[0] [[Sentence=-1,2=word max, 1-5]] xml[0] 1[0] may[0] 2003[0] 17[0] :46[0] :12[0] -0000/-00[0][+0.6 MultipleLetters] @@[0] -155[0] ,6[0] 155[0] ,80[0] @@[0] converter[0] class[0] com[0] [[Sentence=-1,2=word max, 1-5]] sun[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] convert[0] [[Sentence=-1,1=word max, 1-5]] booleanconverter[0] /converter[0] class[0] /converter[0] [[Sentence=-1,1=word max, 1-5]] standard[0] message[0] resources[0] message[0] resources[0] message[0] resources[0] id[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] context[0] [[Sentence=-1,1=word max, 1-5]] faces_api_messages[0] /message[0] resources[0] id[0] message[0] resources[0] class[0] com[0] [[Sentence=-1,1=word max, 1-5]] sun[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] context[0] [[Sentence=-1,1=word max, 1-5]] messageresourcesimpl[0] /message[0] resources[0] class[0] message[0] message[0] id[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] doublerangevalidator[0] [[Sentence=-1,1=word max, 1-5]] limit[0] /message[0] id[0] message[0] class[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] application[0] [[Sentence=-1,1=word max, 1-5]] messageimpl[0] /message[0] class[0] /message[0] message[0] message[0] id[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] doublerangevalidator[0] [[Sentence=-1,1=word max, 1-5]] maximum[0] /message[0] id[0] message[0] class[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] application[0] [[Sentence=-1,1=word max, 1-5]] messageimpl[0] /message[0] class[0] /message[0] message[0] message[0] id[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] doublerangevalidator[0] [[Sentence=-1,1=word max, 1-5]] minimum[0] /message[0] id[0] message[0] class[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] application[0] [[Sentence=-1,1=word max, 1-5]] messageimpl[0] /message[0] class[0] /message[0] message[0] message[0] id[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] doublerangevalidator[0] [[Sentence=-1,1=word max, 1-5]] type[0] /message[0] id[0] message[0] class[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] application[0] [[Sentence=-1,1=word max, 1-5]] messageimpl[0] /message[0] class[0] /message[0] message[0] message[0] id[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] lengthvalidator[0] [[Sentence=-1,1=word max, 1-5]] limit[0] /message[0] id[0] message[0] class[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] application[0] [[Sentence=-1,1=word max, 1-5]] messageimpl[0] /message[0] class[0] /message[0] message[0] message[0] id[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] lengthvalidator[0] [[Sentence=-1,1=word max, 1-5]] maximum[0] /message[0] id[0] message[0] class[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] application[0] [[Sentence=-1,1=word max, 1-5]] messageimpl[0] /message[0] class[0] /message[0] message[0] message[0] id[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] lengthvalidator[0] [[Sentence=-1,1=word max, 1-5]] minimum[0] /message[0] id[0] message[0] class[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] application[0] [[Sentence=-1,1=word max, 1-5]] messageimpl[0] /message[0] class[0] /message[0] message[0] message[0] id[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] requiredvalidator[0] [[Sentence=-1,1=word max, 1-5]] failed[0] /message[0] id[0] message[0] class[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] application[0] [[Sentence=-1,1=word max, 1-5]] messageimpl[0] /message[0] class[0] /message[0] message[0] message[0] id[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] longrangevalidator[0] [[Sentence=-1,1=word max, 1-5]] limit[0] /message[0] id[0] message[0] class[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] application[0] [[Sentence=-1,1=word max, 1-5]] messageimpl[0] /message[0] class[0] /message[0] message[0] message[0] id[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] longrangevalidator[0] [[Sentence=-1,1=word max, 1-5]] maximum[0] /message[0] id[0] message[0] class[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] application[0] [[Sentence=-1,1=word max, 1-5]] messageimpl[0] /message[0] class[0] /message[0] message[0] message[0] id[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] longrangevalidator[0] [[Sentence=-1,1=word max, 1-5]] minimum[0] /message[0] id[0] message[0] class[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] application[0] [[Sentence=-1,1=word max, 1-5]] messageimpl[0] /message[0] class[0] /message[0] message[0] message[0] id[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] longrangevalidator[0] [[Sentence=-1,1=word max, 1-5]] type[0] /message[0] id[0] message[0] class[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] application[0] [[Sentence=-1,1=word max, 1-5]] messageimpl[0] /message[0] class[0] /message[0] message[0] message[0] id[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] stringrangevalidator[0] [[Sentence=-1,1=word max, 1-5]] limit[0] /message[0] id[0] message[0] class[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] application[0] [[Sentence=-1,1=word max, 1-5]] messageimpl[0] /message[0] class[0] /message[0] message[0] message[0] id[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] stringrangevalidator[0] [[Sentence=-1,1=word max, 1-5]] maximum[0] /message[0] id[0] message[0] class[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] application[0] [[Sentence=-1,1=word max, 1-5]] messageimpl[0] /message[0] class[0] /message[0] message[0] message[0] id[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] stringrangevalidator[0] [[Sentence=-1,1=word max, 1-5]] minimum[0] /message[0] id[0] message[0] class[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] application[0] [[Sentence=-1,1=word max, 1-5]] messageimpl[0] /message[0] class[0] /message[0] message[0] message[0] id[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] stringrangevalidator[0] [[Sentence=-1,1=word max, 1-5]] type[0] /message[0] id[0] message[0] class[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] application[0] [[Sentence=-1,1=word max, 1-5]] messageimpl[0] /message[0] class[0] /message[0] message[0] message[0] id[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] requiredvalidator[0] [[Sentence=-1,1=word max, 1-5]] failed[0] /message[0] id[0] message[0] class[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] application[0] [[Sentence=-1,1=word max, 1-5]] messageimpl[0] /message[0] class[0] /message[0] /message[0] resources[0] [[Sentence=-1,1=word max, 1-5]] second[0] application[0] element[0] with[0] overapping[0] values[1] application[0] index[0] src/com/sun/faces/config/configbase[0] [[Sentence=-1,2=word max, 1-5]] java[0] rcs[0] file[0] /export/cvs/jsf[0] ri/src/com/sun/faces/config/configbase[0] [[Sentence=-1,1=word max, 1-5]] java[0] v[0] retrieving[0] revision[0] 1[0] .4[0] diff[0] u[0] r1[0] .4[0] configbase[0] [[Sentence=-1,1=word max, 1-5]] java[0] src/com/sun/faces/config/configbase[0] [[Sentence=-1,1=word max, 1-5]] java[0] 1[0] may[0] 2003[0] 07[0] :20[0] :17[0] -0000/-00[0][+0.6 MultipleLetters] 1[0] .4[0] src/com/sun/faces/config/configbase[0] [[Sentence=-1,2=word max, 1-5]] java[0] 1[0] may[0] 2003[0] 17[0] :46[0] :13[0] -0000/-00[0][+0.6 MultipleLetters] @@[0] -101[0] ,6[0] 101[0] ,23[0] @@[0] }[0] }[0] //[0] message[0] resources[0] private[0] map[0] messageresources[0] null[0] public[0] void[0] addmessageresources[0] configmessageresources[0] newresource[0] {[0] if[0] messageresources[0] null[0] {[0] messageresources[0] new[0] hashmap[0] }[0] messageresources[0] [[Sentence=-1,2=word max, 1-5]] put[0] newresource[0] [[Sentence=-1,1=word max, 1-5]] getmessageresourcesid[0] newresource[0] }[0] public[0] map[0] getmessageresources[0] {[0] if[0] messageresources[0] null[0] {[0] return[0] collections[0] [[Sentence=-1,1=word max, 1-5]] empty_map[0] }[0] else[0] {[0] return[0] this[0] [[Sentence=-1,1=word max, 1-5]] messageresources[0] }[0] }[0] //[0] validator[0] index[0] src/com/sun/faces/config/configparser[0] [[Sentence=-1,1=word max, 1-5]] java[0] rcs[0] file[0] /export/cvs/jsf[0] ri/src/com/sun/faces/config/configparser[0] [[Sentence=-1,1=word max, 1-5]] java[0] v[0] retrieving[0] revision[0] 1[0] .8[0] diff[0] u[0] r1[0] .8[0] configparser[0] [[Sentence=-1,1=word max, 1-5]] java[0] src/com/sun/faces/config/configparser[0] [[Sentence=-1,1=word max, 1-5]] java[0] 1[0] may[0] 2003[0] 07[0] :20[0] :17[0] -0000/-00[0][+0.6 MultipleLetters] 1[0] .8[0] src/com/sun/faces/config/configparser[0] [[Sentence=-1,2=word max, 1-5]] java[0] 1[0] may[0] 2003[0] 17[0] :46[0] :14[0] -0000/-00[0][+0.6 MultipleLetters] @@[0] -193[0] ,6[0] 193[0] ,7[0] @@[0] configurerulesapplication[0] digester[0] configurerulesconverter[0] digester[0] configurerulesmessageresources[0] digester[0] configurerulescomponent[0] digester[0] configurerulesvalidator[0] digester[0] configurerulesmanagedbean[0] digester[0] @@[0] -262[0] ,6[0] 263[0] ,29[0] @@[0] }[0] //[0] configure[0] the[0] rules[0] for[0] a[0] message[0] resources[0] element[0] protected[0] void[0] configurerulesmessageresources[0] digester[0] digester[0] {[0] string[0] prefix[0] faces[0] config/message[0] resources[0] digester[0] [[Sentence=-1,2=word max, 1-5]] addobjectcreate[0] prefix[0] com[0] [[Sentence=-1,1=word max, 1-5]] sun[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] config[0] [[Sentence=-1,1=word max, 1-5]] configmessageresources[0] digester[0] [[Sentence=-1,1=word max, 1-5]] addsetnext[0] prefix[0] addmessageresources[0] com[0] [[Sentence=-1,1=word max, 1-5]] sun[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] config[0] [[Sentence=-1,1=word max, 1-5]] configmessageresources[0] digester[0] [[Sentence=-1,1=word max, 1-5]] addcallmethod[0] prefix[0] "/message[0] resources[0] id[0] setmessageresourcesid[0] 0[0] digester[0] [[Sentence=-1,1=word max, 1-5]] addcallmethod[0] prefix[0] "/message[0] resources[0] class[0] setmessageresourcesclass[0] 0[0] configurerulesmessage[0] digester[0] }[0] protected[0] void[0] configurerulesmessage[0] digester[0] digester[0] {[0] string[0] prefix[0] faces[0] config/message[0] resources/message[0] digester[0] [[Sentence=-1,1=word max, 1-5]] addobjectcreate[0] prefix[0] com[0] [[Sentence=-1,1=word max, 1-5]] sun[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] config[0] [[Sentence=-1,1=word max, 1-5]] configmessage[0] digester[0] [[Sentence=-1,1=word max, 1-5]] addsetnext[0] prefix[0] addmessage[0] com[0] [[Sentence=-1,1=word max, 1-5]] sun[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] config[0] [[Sentence=-1,1=word max, 1-5]] configmessage[0] digester[0] [[Sentence=-1,1=word max, 1-5]] addcallmethod[0] prefix[0] "/message[0] id[0] setmessageid[0] 0[0] digester[0] [[Sentence=-1,1=word max, 1-5]] addcallmethod[0] prefix[0] "/message[0] class[0] setmessageclass[0] 0[0] }[0] //[0] configure[0] the[0] rules[0] for[0] a[0] property[0] element[0] protected[0] void[0] configurerulesproperty[0] digester[0] digester[0] string[0] prefix[0] {[0] index[0] test/com/sun/faces/facestestcaseservice[0] [[Sentence=-1,1=word max, 1-5]] java[0] rcs[0] file[0] /export/cvs/jsf[0] ri/test/com/sun/faces/facestestcaseservice[0] [[Sentence=-1,1=word max, 1-5]] java[0] v[0] retrieving[0] revision[0] 1[0] .13[0] diff[0] u[0] r1[0] .13[0] facestestcaseservice[0] [[Sentence=-1,1=word max, 1-5]] java[0] test/com/sun/faces/facestestcaseservice[0] [[Sentence=-1,1=word max, 1-5]] java[0] 1[0] may[0] 2003[0] 06[0] :31[0] :59[0] -0000/-00[0][+0.6 MultipleLetters] 1[0] .13[0] test/com/sun/faces/facestestcaseservice[0] [[Sentence=-1,2=word max, 1-5]] java[0] 1[0] may[0] 2003[0] 17[0] :46[0] :15[0] -0000/-00[0][+0.6 MultipleLetters] @@[0] -242[0] ,4[0] 242[0] ,16[0] @@[0] return[0] result[0] }[0] public[0] boolean[0] ismember[0] string[0] totest[0] string[0] [][0] set[0] {[0] int[0] len[0] set[0] [[Sentence=-1,2=word max, 1-5]] length[0] i[0] 0[0] for[0] i[0] 0[0] i[0] len[0] i[0] {[0] if[0] set[i][0] [[Sentence=-1,1=word max, 1-5]] equals[0] totest[0] {[0] return[0] true[1] }[0] }[0] return[0] false[0] }[0] }[0] //[0] end[0] of[0] class[0] facestestcaseservice[0] index[0] test/com/sun/faces/jspfacestestcase[0] [[Sentence=-1,2=word max, 1-5]] java[0] rcs[0] file[0] /export/cvs/jsf[0] ri/test/com/sun/faces/jspfacestestcase[0] [[Sentence=-1,1=word max, 1-5]] java[0] v[0] retrieving[0] revision[0] 1[0] .3[0] diff[0] u[0] r1[0] .3[0] jspfacestestcase[0] [[Sentence=-1,1=word max, 1-5]] java[0] test/com/sun/faces/jspfacestestcase[0] [[Sentence=-1,1=word max, 1-5]] java[0] 20[0] feb[0] 2003[0] 22[0] :49[0] :46[0] -0000/-00[0][+0.6 MultipleLetters] 1[0] .3[0] test/com/sun/faces/jspfacestestcase[0] [[Sentence=-1,2=word max, 1-5]] java[0] 1[0] may[0] 2003[0] 17[0] :46[0] :15[0] -0000/-00[0][+0.6 MultipleLetters] @@[0] -157[0] ,4[0] 157[0] ,9[0] @@[0] return[0] false[0] }[0] public[0] boolean[0] ismember[0] string[0] totest[0] string[0] [][0] set[0] {[0] return[0] facesservice[0] [[Sentence=-1,2=word max, 1-5]] ismember[0] totest[0] set[0] }[0] }[0] //[0] end[0] of[0] class[0] jspfacestestcase[0] index[0] test/com/sun/faces/servletfacestestcase[0] [[Sentence=-1,1=word max, 1-5]] java[0] rcs[0] file[0] /export/cvs/jsf[0] ri/test/com/sun/faces/servletfacestestcase[0] [[Sentence=-1,1=word max, 1-5]] java[0] v[0] retrieving[0] revision[0] 1[0] .3[0] diff[0] u[0] r1[0] .3[0] servletfacestestcase[0] [[Sentence=-1,1=word max, 1-5]] java[0] test/com/sun/faces/servletfacestestcase[0] [[Sentence=-1,1=word max, 1-5]] java[0] 20[0] feb[0] 2003[0] 22[0] :49[0] :47[0] -0000/-00[0][+0.6 MultipleLetters] 1[0] .3[0] test/com/sun/faces/servletfacestestcase[0] [[Sentence=-1,2=word max, 1-5]] java[0] 1[0] may[0] 2003[0] 17[0] :46[0] :15[0] -0000/-00[0][+0.6 MultipleLetters] @@[0] -157[0] ,4[0] 157[0] ,10[0] @@[0] return[0] facesservice[0] [[Sentence=-1,2=word max, 1-5]] verifyexpectedoutput[0] }[0] public[0] boolean[0] ismember[0] string[0] totest[0] string[0] [][0] set[0] {[0] return[0] facesservice[0] [[Sentence=-1,1=word max, 1-5]] ismember[0] totest[0] set[0] }[0] }[0] //[0] end[0] of[0] class[0] servletfacestestcase[0] index[0] test/com/sun/faces/application/testapplicationimpl_config[0] [[Sentence=-1,1=word max, 1-5]] java[0] rcs[0] file[0] /export/cvs/jsf[0] ri/test/com/sun/faces/application/testapplicationimpl_config[0] [[Sentence=-1,1=word max, 1-5]] java[0] v[0] retrieving[0] revision[0] 1[0] .2[0] diff[0] u[0] r1[0] .2[0] testapplicationimpl_config[0] [[Sentence=-1,1=word max, 1-5]] java[0] test/com/sun/faces/application/testapplicationimpl_config[0] [[Sentence=-1,1=word max, 1-5]] java[0] 1[0] may[0] 2003[0] 07[0] :42[0] :12[0] -0000/-00[0][+0.6 MultipleLetters] 1[0] .2[0] test/com/sun/faces/application/testapplicationimpl_config[0] [[Sentence=-1,2=word max, 1-5]] java[0] 1[0] may[0] 2003[0] 17[0] :46[0] :15[0] -0000/-00[0][+0.6 MultipleLetters] @@[0] -287[0] ,17[0] 287[0] ,4[0] @@[0] }[0] }[0] protected[0] boolean[0] ismember[0] string[0] totest[0] string[0] [][0] set[0] {[0] int[0] len[0] set[0] [[Sentence=-1,2=word max, 1-5]] length[0] i[0] 0[0] for[0] i[0] 0[0] i[0] len[0] i[0] {[0] if[0] set[i][0] [[Sentence=-1,1=word max, 1-5]] equals[0] totest[0] {[0] return[0] true[1] }[0] }[0] return[0] false[0] }[0] }[0] //[0] end[0] of[0] class[0] testapplicationimpl_config[0] index[0] test/com/sun/faces/config/configfiletestcase[0] [[Sentence=-1,2=word max, 1-5]] java[0] rcs[0] file[0] /export/cvs/jsf[0] ri/test/com/sun/faces/config/configfiletestcase[0] [[Sentence=-1,1=word max, 1-5]] java[0] v[0] retrieving[0] revision[0] 1[0] .7[0] diff[0] u[0] r1[0] .7[0] configfiletestcase[0] [[Sentence=-1,1=word max, 1-5]] java[0] test/com/sun/faces/config/configfiletestcase[0] [[Sentence=-1,1=word max, 1-5]] java[0] 1[0] may[0] 2003[0] 07[0] :20[0] :19[0] -0000/-00[0][+0.6 MultipleLetters] 1[0] .7[0] test/com/sun/faces/config/configfiletestcase[0] [[Sentence=-1,2=word max, 1-5]] java[0] 1[0] may[0] 2003[0] 17[0] :46[0] :16[0] -0000/-00[0][+0.6 MultipleLetters] @@[0] -27[0] ,6[0] 27[0] ,7[0] @@[0] import[0] javax[0] [[Sentence=-1,2=word max, 1-5]] servlet[0] [[Sentence=-1,1=word max, 1-5]] servletcontext[0] import[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] factoryfinder[0] import[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] application[0] [[Sentence=-1,1=word max, 1-5]] applicationfactory[0] import[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] context[0] [[Sentence=-1,1=word max, 1-5]] messageresources[0] import[0] org[0] [[Sentence=-1,1=word max, 1-5]] apache[0] [[Sentence=-1,1=word max, 1-5]] cactus[0] [[Sentence=-1,1=word max, 1-5]] servlettestcase[0] import[0] org[0] [[Sentence=-1,1=word max, 1-5]] apache[0] [[Sentence=-1,1=word max, 1-5]] cactus[0] [[Sentence=-1,1=word max, 1-5]] webrequest[0] @@[0] -69[0] ,6[0] 70[0] ,49[0] @@[0] //[0] individual[0] test[0] methods[0] public[0] void[0] testmessageresources[0] {[0] //[0] test[0] the[0] default[-1] messages[0] applicationfactory[0] afactory[0] applicationfactory[0] factoryfinder[0] [[Sentence=-2,1=word max, 1-5]] getfactory[0] factoryfinder[0] [[Sentence=-1,1=word max, 1-5]] application_factory[0] applicationimpl[0] application[0] applicationimpl[0] afactory[0] [[Sentence=-1,1=word max, 1-5]] getapplication[0] configbase[0] yourbase[0] application[0] [[Sentence=-1,1=word max, 1-5]] getappconfig[0] [[Sentence=-1,1=word max, 1-5]] getconfigbase[0] configmessageresources[0] messageresources[0] null[0] configmessage[0] message[0] null[0] map[0] messageresourcesmap[0] null[0] messagesmap[0] null[0] string[0] apimessages[0] [][0] {[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] doublerangevalidator[0] [[Sentence=-1,1=word max, 1-5]] limit[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] doublerangevalidator[0] [[Sentence=-1,1=word max, 1-5]] maximum[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] doublerangevalidator[0] [[Sentence=-1,1=word max, 1-5]] minimum[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] doublerangevalidator[0] [[Sentence=-1,1=word max, 1-5]] type[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] lengthvalidator[0] [[Sentence=-1,1=word max, 1-5]] limit[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] lengthvalidator[0] [[Sentence=-1,1=word max, 1-5]] maximum[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] lengthvalidator[0] [[Sentence=-1,1=word max, 1-5]] minimum[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] requiredvalidator[0] [[Sentence=-1,1=word max, 1-5]] failed[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] longrangevalidator[0] [[Sentence=-1,1=word max, 1-5]] limit[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] longrangevalidator[0] [[Sentence=-1,1=word max, 1-5]] maximum[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] longrangevalidator[0] [[Sentence=-1,1=word max, 1-5]] minimum[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] longrangevalidator[0] [[Sentence=-1,1=word max, 1-5]] type[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] stringrangevalidator[0] [[Sentence=-1,1=word max, 1-5]] limit[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] stringrangevalidator[0] [[Sentence=-1,1=word max, 1-5]] maximum[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] stringrangevalidator[0] [[Sentence=-1,1=word max, 1-5]] minimum[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] stringrangevalidator[0] [[Sentence=-1,1=word max, 1-5]] type[0] javax[0] [[Sentence=-1,1=word max, 1-5]] faces[0] [[Sentence=-1,1=word max, 1-5]] validator[0] [[Sentence=-1,1=word max, 1-5]] requiredvalidator[0] [[Sentence=-1,1=word max, 1-5]] failed[0] }[0] iterator[0] messageiter[0] null[0] asserttrue[0] null[0] [[Sentence=-1,1=word max, 1-5]] messageresourcesmap[0] yourbase[0] [[Sentence=-1,1=word max, 1-5]] getmessageresources[0] asserttrue[0] null[0] [[Sentence=-1,1=word max, 1-5]] messageresources[0] configmessageresources[0] messageresourcesmap[0] [[Sentence=-1,1=word max, 1-5]] get[0] messageresources[0] [[Sentence=-1,1=word max, 1-5]] faces_api_messages[0] asserttrue[0] null[0] [[Sentence=-1,1=word max, 1-5]] messagesmap[0] messageresources[0] [[Sentence=-1,1=word max, 1-5]] getmessages[0] asserttrue[0] null[0] [[Sentence=-1,1=word max, 1-5]] messageiter[0] messagesmap[0] [[Sentence=-1,1=word max, 1-5]] keyset[0] [[Sentence=-1,1=word max, 1-5]] iterator[0] while[0] messageiter[0] [[Sentence=-1,1=word max, 1-5]] hasnext[0] {[0] asserttrue[0] ismember[0] string[0] messageiter[0] [[Sentence=-1,1=word max, 1-5]] next[0] apimessages[0] }[0] }[0] original[0] author[0] eburns[0] date[0] 2003[0] -05[0] -01[0] 18[0] :04[0] :08[0] 00[0] :00[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
