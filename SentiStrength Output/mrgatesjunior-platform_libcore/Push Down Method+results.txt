Push Down Method	Translation	Positive	Negative	EmotionRationale
7040 commit a1df197865bf7c86448ad5434ac56e6a9020e2d1 dalvikrunner can run a test as an android.app.activity & pathclassloader.tostring change summary: - pathclassloader.tostring prints path - dalvikrunner --mode activity now working - new dalvikrunner --no-clean vs --no-clean-after behavior details dalvik runtime change changed pathclassloader.tostring to print the class loaders path also fixed variable name in commented out debug code libcore/dalvik/src/main/java/dalvik/system/pathclassloader.java dalvik runner changes mode is the new abstract superclass of the existing vm class. activitymode is for the new mode of running as a activity on the device. vm is now a subclass of mode and its javavm and devicedalvikvm still exist although some code has been refactored into the new environment clases (see below) libcore/tools/runner/java/dalvik/runner/mode.java libcore/tools/runner/java/dalvik/runner/activitymode.java libcore/tools/runner/java/dalvik/runner/devicedalvikvm.java libcore/tools/runner/java/dalvik/runner/javavm.java libcore/tools/runner/java/dalvik/runner/vm.java environment and its subclasses environmenthost and environmentdevice allow us to reuse some common code between the two different device modes (activitymode and devicedalvikvm). basically code that was more about where and how to do things based on where the code was running as opposed to how the code was running moved to the environment classes. for example, prepare() logic for /sdcard/ and adb code in general. libcore/tools/runner/java/dalvik/runner/devicedalvikvm.java libcore/tools/runner/java/dalvik/runner/environment.java libcore/tools/runner/java/dalvik/runner/environmentdevice.java libcore/tools/runner/java/dalvik/runner/environmenthost.java libcore/tools/runner/java/dalvik/runner/javavm.java libcore/tools/runner/java/dalvik/runner/vm.java adding new files libcore/tools/runner/android.mk aapt is a wrapper for "aapt" similar to adb and dx libcore/tools/runner/java/dalvik/runner/aapt.java added adb.install and adb.uninstall methods changed from using file.tostring to file.getpath for clarity libcore/tools/runner/java/dalvik/runner/adb.java codefinder has been extended so that driver can ask finders what they need to build and run, specifically through the new getrunnerjava and getrunnerclasspath. (as part of this namingpatterncodefinder's runnerclass was changed to getrunnerclass for consistency with the superclass.) this was important for running as an activity because we want to minimize what we pack into the apk file because of the "dx --dex" runtime and not just pull in all possible runners and supporting libraries. testrun objects also hold onto this information from their finders. libcore/tools/runner/java/dalvik/runner/driver.java libcore/tools/runner/java/dalvik/runner/codefinder.java libcore/tools/runner/java/dalvik/runner/caliperfinder.java libcore/tools/runner/java/dalvik/runner/junitfinder.java libcore/tools/runner/java/dalvik/runner/jtregfinder.java libcore/tools/runner/java/dalvik/runner/mainfinder.java libcore/tools/runner/java/dalvik/runner/namingpatterncodefinder.java libcore/tools/runner/java/dalvik/runner/testrun.java testrunner testrunner's classname is now testclass to clarifiy it from the runnerclass. libcore/tools/runner/java/dalvik/runner/testrunner.java libcore/tools/runner/java/dalvik/runner/caliperrunner.java libcore/tools/runner/java/dalvik/runner/junitrunner.java libcore/tools/runner/java/dalvik/runner/jtregrunner.java libcore/tools/runner/java/dalvik/runner/mainrunner.java classpath now has a collection.of and collection.addall that take a collection file  instead if just a file... libcore/tools/runner/java/dalvik/runner/classpath.java added command.args(file arg) to avoid a lot of args(file.getpath()) libcore/tools/runner/java/dalvik/runner/command.java option --clean has expanded to --clean-before, --clean-after, and --clean. now --no-clean will remove nothing as elliot requested. --no-clean-after is now what is useful for dalvikrunner debuggin. default is still to clean before and after. libcore/tools/runner/java/dalvik/runner/dalvikrunner.java moved vm.dalvik_runner_home to dalvikrunner.home. /tmp/ uuid  paths are now /tmp/dalvikrunner/ uuid  paths are easier cleanup. libcore/tools/runner/java/dalvik/runner/dalvikrunner.java driver was changed to use a executorcompletionservice around the executorservice so that exceptions from the execute threads could be reported on the main thread. libcore/tools/runner/java/dalvik/runner/driver.java we now build the testrunner before the test so that its classes will be around to be packed into apk files. libcore/tools/runner/java/dalvik/runner/driver.java dx.dex now takes file arguments instread of strings. dx.dex also needs to pass additional memory arguments to not run out of memory building the big dex for the apk. the values i used where from the build/core/definitions.mk libcore/tools/runner/java/dalvik/runner/dx.java postcompile was split into postcompiletestrunner and postcompiletest because the packaging requires are very different in each case for activitymode. specifically, the test runner is not post-packaged seperately, but packaged in the apk with each test. libcore/tools/runner/java/dalvik/runner/activitymode.java libcore/tools/runner/java/dalvik/runner/devicedalvikvm.java libcore/tools/runner/java/dalvik/runner/javavm.java libcore/tools/runner/java/dalvik/runner/vm.java changed testclass to test to avoid collision with new superclass field libcore/tools/runner/java/dalvik/runner/jtregrunner.java libcore/tools/runner/java/dalvik/runner/mainrunner.java added @suppresswarnings("unchecked") libcore/tools/runner/java/dalvik/runner/optionparser.java new android.app.activity based on elliot's testapk. it encapsulates an activityrunner that invokes the appropriate testrunner based on test.properties. libcore/tools/runner/java/dalvik/runner/testactivity.java new class that shared contains (old and some new) between the dalvikrunner and the testrunner. libcore/tools/runner/java/dalvik/runner/testproperties.java regression test script for debugging the matrix of various dalvikrunner modes and test types: libcore/tools/runner/test-dalvik-runner.sh 	7040 commit a1df197865bf7c86448ad5434ac56e6a9020e2d1 dalvikrunner can run a test as an android.<br>ap.<br>activity & pathclassloader.<br>tostring change summary: - pathclassloader.<br>tostring prints path - dalvikrunner -mode activity now working - new dalvikrunner -no-clean vs -no-clean-after behavior details dalvik runtime change changed pathclassloader.<br>tostring to print the class loaders path also fixed variable name in commented out debug code libcore/dalvik/src/main/java/dalvik/system/pathclassloader.<br>java dalvik runner changes mode is the new abstract superclass of the existing vm class.<br> activitymode is for the new mode of running as a activity on the device.<br> vm is now a subclass of mode and its javavm and devicedalvikvm still exist although some code has been refactored into the new environment clases (see below) libcore/tools/runner/java/dalvik/runner/mode.<br>java libcore/tools/runner/java/dalvik/runner/activitymode.<br>java libcore/tools/runner/java/dalvik/runner/devicedalvikvm.<br>java libcore/tools/runner/java/dalvik/runner/javavm.<br>java libcore/tools/runner/java/dalvik/runner/vm.<br>java environment and its subclasses environmenthost and environmentdevice allow us to reuse some common code between the two different device modes (activitymode and devicedalvikvm)<br> basically code that was more about where and how to do things based on where the code was running as opposed to how the code was running moved to the environment classes.<br> for example, prepare( logic for /sdcard/ and adb code in general.<br> libcore/tools/runner/java/dalvik/runner/devicedalvikvm.<br>java libcore/tools/runner/java/dalvik/runner/environment.<br>java libcore/tools/runner/java/dalvik/runner/environmentdevice.<br>java libcore/tools/runner/java/dalvik/runner/environmenthost.<br>java libcore/tools/runner/java/dalvik/runner/javavm.<br>java libcore/tools/runner/java/dalvik/runner/vm.<br>java adding new files libcore/tools/runner/android.<br>mk apt is a wrapper for "apt" similar to adb and dx libcore/tools/runner/java/dalvik/runner/apt.<br>java added adb.<br>install and adb.<br>uninstall methods changed from using file.<br>tostring to file.<br>getpath for clarity libcore/tools/runner/java/dalvik/runner/adb.<br>java codefinder has been extended so that driver can ask finders what they need to build and run, specifically through the new getrunnerjava and getrunnerclasspath.<br> (as part of this namingpatterncodefinder's runnerclass was changed to getrunnerclass for consistency with the superclass.<br> this was important for running as an activity because we want to minimize what we pack into the apk file because of the "dx -dex" runtime and not just pull in all possible runners and supporting libraries.<br> testrun objects also hold onto this information from their finders.<br> libcore/tools/runner/java/dalvik/runner/driver.<br>java libcore/tools/runner/java/dalvik/runner/codefinder.<br>java libcore/tools/runner/java/dalvik/runner/caliperfinder.<br>java libcore/tools/runner/java/dalvik/runner/junitfinder.<br>java libcore/tools/runner/java/dalvik/runner/jtregfinder.<br>java libcore/tools/runner/java/dalvik/runner/mainfinder.<br>java libcore/tools/runner/java/dalvik/runner/namingpatterncodefinder.<br>java libcore/tools/runner/java/dalvik/runner/testrun.<br>java testrunner testrunner's classname is now testclass to clarifiy it from the runnerclass.<br> libcore/tools/runner/java/dalvik/runner/testrunner.<br>java libcore/tools/runner/java/dalvik/runner/caliperrunner.<br>java libcore/tools/runner/java/dalvik/runner/junitrunner.<br>java libcore/tools/runner/java/dalvik/runner/jtregrunner.<br>java libcore/tools/runner/java/dalvik/runner/mainrunner.<br>java classpath now has a collection.<br>of and collection.<br>addall that take a collection file  instead if just a file.<br> libcore/tools/runner/java/dalvik/runner/classpath.<br>java added command.<br>args(file arg) to avoid a lot of args(file.<br>getpath( libcore/tools/runner/java/dalvik/runner/command.<br>java option -clean has expanded to -clean-before, -clean-after, and -clean.<br> now -no-clean will remove nothing as elliot requested.<br> -no-clean-after is now what is useful for dalvikrunner debuggin.<br> default is still to clean before and after.<br> libcore/tools/runner/java/dalvik/runner/dalvikrunner.<br>java moved vm.<br>dalvik_runner_home to dalvikrunner.<br>home.<br> /tmp/ uid  paths are now /tmp/dalvikrunner/ uid  paths are easier cleanup.<br> libcore/tools/runner/java/dalvik/runner/dalvikrunner.<br>java driver was changed to use a executorcompletionservice around the executorservice so that exceptions from the execute threads could be reported on the main thread.<br> libcore/tools/runner/java/dalvik/runner/driver.<br>java we now build the testrunner before the test so that its classes will be around to be packed into apk files.<br> libcore/tools/runner/java/dalvik/runner/driver.<br>java dx.<br>dex now takes file arguments instread of strings.<br> dx.<br>dex also needs to pass additional memory arguments to not run out of memory building the big dex for the apk.<br> the values i used where from the build/core/definitions.<br>mk libcore/tools/runner/java/dalvik/runner/dx.<br>java postcompile was split into postcompiletestrunner and postcompiletest because the packaging requires are very different in each case for activitymode.<br> specifically, the test runner is not post-packaged seperately, but packaged in the apk with each test.<br> libcore/tools/runner/java/dalvik/runner/activitymode.<br>java libcore/tools/runner/java/dalvik/runner/devicedalvikvm.<br>java libcore/tools/runner/java/dalvik/runner/javavm.<br>java libcore/tools/runner/java/dalvik/runner/vm.<br>java changed testclass to test to avoid collision with new superclass field libcore/tools/runner/java/dalvik/runner/jtregrunner.<br>java libcore/tools/runner/java/dalvik/runner/mainrunner.<br>java added @suppresswarnings(unchecked" libcore/tools/runner/java/dalvik/runner/optionparser.<br>java new android.<br>ap.<br>activity based on elliot's testapk.<br> it encapsulates an activityrunner that invokes the appropriate testrunner based on test.<br>properties.<br> libcore/tools/runner/java/dalvik/runner/testactivity.<br>java new class that shared contains (old and some new) between the dalvikrunner and the testrunner.<br> libcore/tools/runner/java/dalvik/runner/testproperties.<br>java regression test script for debugging the matrix of various dalvikrunner modes and test types: libcore/tools/runner/test-dalvik-runner.<br>sh	2	-2	 7040[0] commit[0] a1df197865bf7c86448ad5434ac56e6a9020e2d1[0] dalvikrunner[0] can[0] run[0] a[0] test[0] as[0] an[0] android[0] [[Sentence=-1,1=word max, 1-5]] app/ap[0] [[Sentence=-1,1=word max, 1-5]] activity[0] &[0] pathclassloader[0] [[Sentence=-1,1=word max, 1-5]] tostring[0] change[0] summary[0] pathclassloader[0] [[Sentence=-1,1=word max, 1-5]] tostring[0] prints[0] path[0] dalvikrunner[0] mode[0] activity[0] now[0] working[0] new[0] dalvikrunner[0] no[0] clean[0] vs[0] no[0] clean[0] after[0] behavior[0] details[0] dalvik[0] runtime[0] change[0] changed[0] pathclassloader[0] [[Sentence=-1,1=word max, 1-5]] tostring[0] to[0] print[0] the[0] class[0] loaders[0] path[0] also[0] fixed[0] variable[0] name[0] in[0] commented[0] out[0] debug[0] code[0] libcore/dalvik/src/main/java/dalvik/system/pathclassloader[0] [[Sentence=-1,1=word max, 1-5]] java[0] dalvik[0] runner[0] changes[0] mode[0] is[0] the[0] new[0] abstract[0] superclass[0] of[0] the[0] existing[0] vm[0] class[0] [[Sentence=-1,1=word max, 1-5]] activitymode[0] is[0] for[0] the[0] new[0] mode[0] of[0] running[0] as[0] a[0] activity[0] on[0] the[0] device[0] [[Sentence=-1,1=word max, 1-5]] vm[0] is[0] now[0] a[0] subclass[0] of[0] mode[0] and[0] its[0] javavm[0] and[0] devicedalvikvm[0] still[0] exist[0] although[0] some[0] code[0] has[0] been[0] refactored[0] into[0] the[0] new[0] environment[0] clases[0] see[0] below[0] libcore/tools/runner/java/dalvik/runner/mode[0] [[Sentence=-1,1=word max, 1-5]] java[0] libcore/tools/runner/java/dalvik/runner/activitymode[0] [[Sentence=-1,1=word max, 1-5]] java[0] libcore/tools/runner/java/dalvik/runner/devicedalvikvm[0] [[Sentence=-1,1=word max, 1-5]] java[0] libcore/tools/runner/java/dalvik/runner/javavm[0] [[Sentence=-1,1=word max, 1-5]] java[0] libcore/tools/runner/java/dalvik/runner/vm[0] [[Sentence=-1,1=word max, 1-5]] java[0] environment[0] and[0] its[0] subclasses[0] environmenthost[0] and[0] environmentdevice[0] allow[0] us[0] to[0] reuse[0] some[0] common[0] code[0] between[0] the[0] two[0] different[0] device[0] modes[0] activitymode[0] and[0] devicedalvikvm[0] [[Sentence=-1,1=word max, 1-5]] basically[0] code[0] that[0] was[0] more[0] about[0] where[0] and[0] how[0] to[0] do[0] things[0] based[0] on[0] where[0] the[0] code[0] was[0] running[0] as[0] opposed[0] to[0] how[0] the[0] code[0] was[0] running[0] moved[0] to[0] the[0] environment[0] classes[0] [[Sentence=-1,1=word max, 1-5]] for[0] example[0] prepare[0] logic[0] for[0] /sdcard/[0] and[0] adb[0] code[0] in[0] general[0] [[Sentence=-1,1=word max, 1-5]] libcore/tools/runner/java/dalvik/runner/devicedalvikvm[0] [[Sentence=-1,1=word max, 1-5]] java[0] libcore/tools/runner/java/dalvik/runner/environment[0] [[Sentence=-1,1=word max, 1-5]] java[0] libcore/tools/runner/java/dalvik/runner/environmentdevice[0] [[Sentence=-1,1=word max, 1-5]] java[0] libcore/tools/runner/java/dalvik/runner/environmenthost[0] [[Sentence=-1,1=word max, 1-5]] java[0] libcore/tools/runner/java/dalvik/runner/javavm[0] [[Sentence=-1,1=word max, 1-5]] java[0] libcore/tools/runner/java/dalvik/runner/vm[0] [[Sentence=-1,1=word max, 1-5]] java[0] adding[0] new[0] files[0] libcore/tools/runner/android[0] [[Sentence=-1,1=word max, 1-5]] mk[0] aapt/apt[0] is[0] a[0] wrapper[0] for[0] aapt/apt[0] similar[0] to[0] adb[0] and[0] dx[0] libcore/tools/runner/java/dalvik/runner/aapt/libcore/tools/runner/java/dalvik/runner/apt[0] [[Sentence=-1,1=word max, 1-5]] java[0] added[0] adb[0] [[Sentence=-1,1=word max, 1-5]] install[0] and[0] adb[0] [[Sentence=-1,1=word max, 1-5]] uninstall[0] methods[0] changed[0] from[0] using[0] file[0] [[Sentence=-1,1=word max, 1-5]] tostring[0] to[0] file[0] [[Sentence=-1,1=word max, 1-5]] getpath[0] for[0] clarity[0] libcore/tools/runner/java/dalvik/runner/adb[0] [[Sentence=-1,1=word max, 1-5]] java[0] codefinder[0] has[0] been[0] extended[0] so[0] that[0] driver[0] can[0] ask[0] finders[0] what[0] they[0] need[0] to[0] build[0] and[0] run[0] specifically[0] through[0] the[0] new[0] getrunnerjava[0] and[0] getrunnerclasspath[0] [[Sentence=-1,1=word max, 1-5]] as[0] part[0] of[0] this[0] namingpatterncodefinder's[0] runnerclass[0] was[0] changed[0] to[0] getrunnerclass[0] for[0] consistency[0] with[0] the[0] superclass[0] [[Sentence=-1,1=word max, 1-5]] this[0] was[0] important[0] for[0] running[0] as[0] an[0] activity[0] because[0] we[0] want[0] to[0] minimize[0] what[0] we[0] pack[0] into[0] the[0] apk[0] file[0] because[0] of[0] the[0] dx[0] dex[0] runtime[0] and[0] not[0] just[0] pull[0] in[0] all[0] possible[0] runners[0] and[0] supporting[1] libraries[0] [[Sentence=-1,2=word max, 1-5]] testrun[0] objects[0] also[0] hold[0] onto[0] this[0] information[0] from[0] their[0] finders[0] [[Sentence=-1,1=word max, 1-5]] libcore/tools/runner/java/dalvik/runner/driver[0] [[Sentence=-1,1=word max, 1-5]] java[0] libcore/tools/runner/java/dalvik/runner/codefinder[0] [[Sentence=-1,1=word max, 1-5]] java[0] libcore/tools/runner/java/dalvik/runner/caliperfinder[0] [[Sentence=-1,1=word max, 1-5]] java[0] libcore/tools/runner/java/dalvik/runner/junitfinder[0] [[Sentence=-1,1=word max, 1-5]] java[0] libcore/tools/runner/java/dalvik/runner/jtregfinder[0] [[Sentence=-1,1=word max, 1-5]] java[0] libcore/tools/runner/java/dalvik/runner/mainfinder[0] [[Sentence=-1,1=word max, 1-5]] java[0] libcore/tools/runner/java/dalvik/runner/namingpatterncodefinder[0] [[Sentence=-1,1=word max, 1-5]] java[0] libcore/tools/runner/java/dalvik/runner/testrun[0] [[Sentence=-1,1=word max, 1-5]] java[0] testrunner[0] testrunner's[0] classname[0] is[0] now[0] testclass[0] to[0] clarifiy[0] it[0] from[0] the[0] runnerclass[0] [[Sentence=-1,1=word max, 1-5]] libcore/tools/runner/java/dalvik/runner/testrunner[0] [[Sentence=-1,1=word max, 1-5]] java[0] libcore/tools/runner/java/dalvik/runner/caliperrunner[0] [[Sentence=-1,1=word max, 1-5]] java[0] libcore/tools/runner/java/dalvik/runner/junitrunner[0] [[Sentence=-1,1=word max, 1-5]] java[0] libcore/tools/runner/java/dalvik/runner/jtregrunner[0] [[Sentence=-1,1=word max, 1-5]] java[0] libcore/tools/runner/java/dalvik/runner/mainrunner[0] [[Sentence=-1,1=word max, 1-5]] java[0] classpath[0] now[0] has[0] a[0] collection[0] [[Sentence=-1,1=word max, 1-5]] of[0] and[0] collection[0] [[Sentence=-1,1=word max, 1-5]] addall[0] that[0] take[0] a[0] collection[0] file[0] instead[0] if[0] just[0] a[0] file[0] [[Sentence=-1,1=word max, 1-5]] libcore/tools/runner/java/dalvik/runner/classpath[0] [[Sentence=-1,1=word max, 1-5]] java[0] added[0] command[0] [[Sentence=-1,1=word max, 1-5]] args[0] file[0] arg[0] to[0] avoid[-1] a[0] lot[0] of[0] args[0] file[0] [[Sentence=-2,1=word max, 1-5]] getpath[0] libcore/tools/runner/java/dalvik/runner/command[0] [[Sentence=-1,1=word max, 1-5]] java[0] option[0] clean[0] has[0] expanded[0] to[0] clean[0] before[0] clean[0] after[0] and[0] clean[0] [[Sentence=-1,1=word max, 1-5]] now[0] no[0] clean[0] will[0] remove[0] nothing[0] as[0] elliot[0] requested[0] [[Sentence=-1,1=word max, 1-5]] no[0] clean[0] after[0] is[0] now[0] what[0] is[0] useful[1] for[0] dalvikrunner[0] debuggin[0] [[Sentence=-1,2=word max, 1-5]] default[-1] is[0] still[0] to[0] clean[0] before[0] and[0] after[0] [[Sentence=-2,1=word max, 1-5]] libcore/tools/runner/java/dalvik/runner/dalvikrunner[0] [[Sentence=-1,1=word max, 1-5]] java[0] moved[0] vm[0] [[Sentence=-1,1=word max, 1-5]] dalvik_runner_home[0] to[0] dalvikrunner[0] [[Sentence=-1,1=word max, 1-5]] home[0] [[Sentence=-1,1=word max, 1-5]] /tmp/[0] uuid/uid[0] paths[0] are[0] now[0] /tmp/dalvikrunner/[0] uuid/uid[0] paths[0] are[0] easier[0] cleanup[0] [[Sentence=-1,1=word max, 1-5]] libcore/tools/runner/java/dalvik/runner/dalvikrunner[0] [[Sentence=-1,1=word max, 1-5]] java[0] driver[0] was[0] changed[0] to[0] use[0] a[0] executorcompletionservice[0] around[0] the[0] executorservice[0] so[0] that[0] exceptions[0] from[0] the[0] execute[0] threads[0] could[0] be[0] reported[0] on[0] the[0] main[0] thread[0] [[Sentence=-1,1=word max, 1-5]] libcore/tools/runner/java/dalvik/runner/driver[0] [[Sentence=-1,1=word max, 1-5]] java[0] we[0] now[0] build[0] the[0] testrunner[0] before[0] the[0] test[0] so[0] that[0] its[0] classes[0] will[0] be[0] around[0] to[0] be[0] packed[0] into[0] apk[0] files[0] [[Sentence=-1,1=word max, 1-5]] libcore/tools/runner/java/dalvik/runner/driver[0] [[Sentence=-1,1=word max, 1-5]] java[0] dx[0] [[Sentence=-1,1=word max, 1-5]] dex[0] now[0] takes[0] file[0] arguments[-1] instread[0] of[0] strings[0] [[Sentence=-2,1=word max, 1-5]] dx[0] [[Sentence=-1,1=word max, 1-5]] dex[0] also[0] needs[0] to[0] pass[0] additional[0] memory[0] arguments[-1] to[0] not[0] run[0] out[0] of[0] memory[0] building[0] the[0] big[0] dex[0] for[0] the[0] apk[0] [[Sentence=-2,1=word max, 1-5]] the[0] values[1] i[0] used[0] where[0] from[0] the[0] build/core/definitions[0] [[Sentence=-1,2=word max, 1-5]] mk[0] libcore/tools/runner/java/dalvik/runner/dx[0] [[Sentence=-1,1=word max, 1-5]] java[0] postcompile[0] was[0] split[0] into[0] postcompiletestrunner[0] and[0] postcompiletest[0] because[0] the[0] packaging[0] requires[0] are[0] very[0] different[0] in[0] each[0] case[0] for[0] activitymode[0] [[Sentence=-1,1=word max, 1-5]] specifically[0] the[0] test[0] runner[0] is[0] not[0] post[0] packaged[0] seperately[0] but[0] packaged[0] in[0] the[0] apk[0] with[0] each[0] test[0] [[Sentence=-1,1=word max, 1-5]] libcore/tools/runner/java/dalvik/runner/activitymode[0] [[Sentence=-1,1=word max, 1-5]] java[0] libcore/tools/runner/java/dalvik/runner/devicedalvikvm[0] [[Sentence=-1,1=word max, 1-5]] java[0] libcore/tools/runner/java/dalvik/runner/javavm[0] [[Sentence=-1,1=word max, 1-5]] java[0] libcore/tools/runner/java/dalvik/runner/vm[0] [[Sentence=-1,1=word max, 1-5]] java[0] changed[0] testclass[0] to[0] test[0] to[0] avoid[-1] collision[-1] with[0] new[0] superclass[0] field[0] libcore/tools/runner/java/dalvik/runner/jtregrunner[0] [[Sentence=-2,1=word max, 1-5]] java[0] libcore/tools/runner/java/dalvik/runner/mainrunner[0] [[Sentence=-1,1=word max, 1-5]] java[0] added[0] @suppresswarnings[0] unchecked[0] libcore/tools/runner/java/dalvik/runner/optionparser[0] [[Sentence=-1,1=word max, 1-5]] java[0] new[0] android[0] [[Sentence=-1,1=word max, 1-5]] app/ap[0] [[Sentence=-1,1=word max, 1-5]] activity[0] based[0] on[0] elliot's[0] testapk[0] [[Sentence=-1,1=word max, 1-5]] it[0] encapsulates[0] an[0] activityrunner[0] that[0] invokes[0] the[0] appropriate[0] testrunner[0] based[0] on[0] test[0] [[Sentence=-1,1=word max, 1-5]] properties[0] [[Sentence=-1,1=word max, 1-5]] libcore/tools/runner/java/dalvik/runner/testactivity[0] [[Sentence=-1,1=word max, 1-5]] java[0] new[0] class[0] that[0] shared[0] contains[0] old[0] and[0] some[0] new[0] between[0] the[0] dalvikrunner[0] and[0] the[0] testrunner[0] [[Sentence=-1,1=word max, 1-5]] libcore/tools/runner/java/dalvik/runner/testproperties[0] [[Sentence=-1,1=word max, 1-5]] java[0] regression[0] test[0] script[0] for[0] debugging[0] the[0] matrix[0] of[0] various[0] dalvikrunner[0] modes[0] and[0] test[0] types[0] libcore/tools/runner/test[0] dalvik[0] runner[0] [[Sentence=-1,1=word max, 1-5]] sh[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
