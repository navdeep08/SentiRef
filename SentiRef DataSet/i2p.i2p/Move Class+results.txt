Move Class	Translation	Positive	Negative	EmotionRationale
624 commit a141d5090210b8e518c05f4bc7188dbe733d9140 refactor session classes out of samv3handler to their own files 	624 commit a141d5090210b8e518c05f4bc7188dbe733d9140 refactor session classes out of samv3handler to their own files	1	-1	 624[0] commit[0] a141d5090210b8e518c05f4bc7188dbe733d9140[0] refactor[0] session[0] classes[0] out[0] of[0] samv3handler[0] to[0] their[0] own[0] files[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3532 commit 680c31b843897717a48e6e96c645fb40c9d066ee fix/update/refactor inboundtest 	3532 commit 680c31b843897717a48e6e96c645fb40c9d066ee fix/update/refactor inboundtest	1	-1	 3532[0] commit[0] 680c31b843897717a48e6e96c645fb40c9d066ee[0] fix/update/refactor[0] inboundtest[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3534 commit 7a8fde6637fb56a4e56c58d2fff8608de2e96cd5 refactor common code between inbound and outbound gateway tests in a base class outboundgatewaytest still fails, investigating... 	3534 commit 7a8fde6637fb56a4e56c58d2ff8608de2e96cd5 refactor common code between inbound and outbound gateway tests in a base class outboundgatewaytest still fails, investigating.	1	-1	 3534[0] commit[0] 7a8fde6637fb56a4e56c58d2fff8608de2e96cd5/7a8fde6637fb56a4e56c58d2ff8608de2e96cd5[0] refactor[0] common[0] code[0] between[0] inbound[0] and[0] outbound[0] gateway[0] tests[0] in[0] a[0] base[0] class[0] outboundgatewaytest[0] still[0] fails[0] investigating[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3856 commit 983537b0fd77f0056e9428b94910c6d22bd43648 refactor completelistener out of snark.java 	3856 commit 983537b0fd77f0056e9428b94910c6d22bd43648 refactor completelistener out of snark.<br>java	1	-1	 3856[0] commit[0] 983537b0fd77f0056e9428b94910c6d22bd43648[0] refactor[0] completelistener[0] out[0] of[0] snark[0] [[Sentence=-1,1=word max, 1-5]] java[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4071 commit d2a7af28848fcac41d4ed4f936814539c2f3b508 refactor trimmers to their own files 	4071 commit d2a7af28848fcac41d4ed4f936814539c2f3b508 refactor trimmers to their own files	1	-1	 4071[0] commit[0] d2a7af28848fcac41d4ed4f936814539c2f3b508[0] refactor[0] trimmers[0] to[0] their[0] own[0] files[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4443 commit e62b76d2cc7ed993eec015c937b035f0d30ef9f7 big refactor of the router console update subsystem, in preparation for implementing out-of-console updaters like i2psnark. - add new update interfaces in net.i2p.update - all update implementations moved to routerconsole update/ - implement an updatemanager that registers with the routercontext - updatemanager handles multiple types of things to update (router, plugins, news, ...) and methods of updating (http, ...) - updatemanager maintains list of installed, downloaded, and available versions of everything - define updaters that can check for a new version and/or download an item - individual updaters register with the updatemanager obtained from i2pappcontext, identifying the type of update item and update method they can handle. - updaters need only core libs, no router.jar or routerconsole access required. - all checks and updates are initiated via the updatemanager. - all status on checks and updates in-progress or completed are obtained from the updatemanager. no more use of system properties to broadcast update state. - all update and checker tasks are intantiated on demand and threaded; no more static references left over. - split out the runners and checkers from the handlers and make the inheritance more sane. - no more permanent newsfetcher thread; run on the simplescheduler queue and thread a checker task only to fetch the news. - no more static newsfetcher instance in routerconsole. all helper methods that are still required are moved to newshelper. the updatemanager implements the policy for when to check and download. all requests go through the updatemanager. for each update type, there's several parts: - the xxxupdatehandler implements the updater - the xxxupdatechecker implements the updatetask for checking - the xxxupdaterunner implements the updatetask for downloading new and moved classes: web/ update/ ---- ------- new consoleupdatemanager.java new pluginupdatechecker.java from pluginupdatechecker pluginupdatechecker -  pluginupdatehandler.java pluginupdatehandler.java -  pluginupdaterunner new unsignedupdatehandler.java unsignedupdatehandler -  unsignedupdaterunner.java new unsignedupdatechecker from newsfetcher updatehandler.java remains new updatehandler.java new updaterunner.java from updatehandler move newshandler from newsfetcher new newsfetcher new newstimertask new dummyhandler initial checkin. unfinished, untested, unpolished. 	443 commit e62b76d2cc7ed993eec015c937b035f0d30ef9f7 big refactor of the router console update subsystem, in preparation for implementing out-of-console updaters like i2psnark.<br> - add new update interfaces in net.<br>i2p.<br>update - all update implementations moved to routerconsole update/ - implement an updatemanager that registers with the routercontext - updatemanager handles multiple types of things to update (router, plugins, news, .<br> and methods of updating (http, .<br> - updatemanager maintains list of installed, downloaded, and available versions of everything - define updaters that can check for a new version and/or download an item - individual updaters register with the updatemanager obtained from i2pappcontext, identifying the type of update item and update method they can handle.<br> - updaters need only core libs, no router.<br>jar or routerconsole access required.<br> - all checks and updates are initiated via the updatemanager.<br> - all status on checks and updates in-progress or completed are obtained from the updatemanager.<br> no more use of system properties to broadcast update state.<br> - all update and checker tasks are intantiated on demand and threaded; no more static references left over.<br> - split out the runners and checkers from the handlers and make the inheritance more sane.<br> - no more permanent newsfetcher thread; run on the simplescheduler queue and thread a checker task only to fetch the news.<br> - no more static newsfetcher instance in routerconsole.<br> all helper methods that are still required are moved to newshelper.<br> the updatemanager implements the policy for when to check and download.<br> all requests go through the updatemanager.<br> for each update type, there's several parts: - the xupdatehandler implements the updater - the xupdatechecker implements the updatetask for checking - the xupdaterunner implements the updatetask for downloading new and moved classes: web/ update/ - - new consoleupdatemanager.<br>java new pluginupdatechecker.<br>java from pluginupdatechecker pluginupdatechecker -  pluginupdatehandler.<br>java pluginupdatehandler.<br>java -  pluginupdaterunner new unsignedupdatehandler.<br>java unsignedupdatehandler -  unsignedupdaterunner.<br>java new unsignedupdatechecker from newsfetcher updatehandler.<br>java remains new updatehandler.<br>java new updaterunner.<br>java from updatehandler move newshandler from newsfetcher new newsfetcher new newstimertask new dummyhandler initial checkin.<br> unfinished, untested, unpolished.	1	-1	 4443/443[0] commit[0] e62b76d2cc7ed993eec015c937b035f0d30ef9f7[0] big[0] refactor[0] of[0] the[0] router[0] console[0] update[0] subsystem[0] in[0] preparation[0] for[0] implementing[0] out[0] of[0] console[0] updaters[0] like[0] i2psnark[0] [[Sentence=-1,1=word max, 1-5]] add[0] new[0] update[0] interfaces[0] in[0] net[0] [[Sentence=-1,1=word max, 1-5]] i2p[0] [[Sentence=-1,1=word max, 1-5]] update[0] all[0] update[0] implementations[0] moved[0] to[0] routerconsole[0] update/[0] implement[0] an[0] updatemanager[0] that[0] registers[0] with[0] the[0] routercontext[0] updatemanager[0] handles[0] multiple[0] types[0] of[0] things[0] to[0] update[0] router[0] plugins[0] news[0] [[Sentence=-1,1=word max, 1-5]] and[0] methods[0] of[0] updating[0] http[0] [[Sentence=-1,1=word max, 1-5]] updatemanager[0] maintains[0] list[0] of[0] installed[0] downloaded[0] and[0] available[0] versions[0] of[0] everything[0] define[0] updaters[0] that[0] can[0] check[0] for[0] a[0] new[0] version[0] and/or[0] download[0] an[0] item[0] individual[0] updaters[0] register[0] with[0] the[0] updatemanager[0] obtained[0] from[0] i2pappcontext[0] identifying[0] the[0] type[0] of[0] update[0] item[0] and[0] update[0] method[0] they[0] can[0] handle[0] [[Sentence=-1,1=word max, 1-5]] updaters[0] need[0] only[0] core[0] libs[0] no[0] router[0] [[Sentence=-1,1=word max, 1-5]] jar[0] or[0] routerconsole[0] access[0] required[0] [[Sentence=-1,1=word max, 1-5]] all[0] checks[0] and[0] updates[0] are[0] initiated[0] via[0] the[0] updatemanager[0] [[Sentence=-1,1=word max, 1-5]] all[0] status[0] on[0] checks[0] and[0] updates[0] in[0] progress[0] or[0] completed[0] are[0] obtained[0] from[0] the[0] updatemanager[0] [[Sentence=-1,1=word max, 1-5]] no[0] more[0] use[0] of[0] system[0] properties[0] to[0] broadcast[0] update[0] state[0] [[Sentence=-1,1=word max, 1-5]] all[0] update[0] and[0] checker[0] tasks[0] are[0] intantiated[0] on[0] demand[0] and[0] threaded[0] no[0] more[0] static[0] references[0] left[0] over[0] [[Sentence=-1,1=word max, 1-5]] split[0] out[0] the[0] runners[0] and[0] checkers[0] from[0] the[0] handlers[0] and[0] make[0] the[0] inheritance[0] more[0] sane[0] [[Sentence=-1,1=word max, 1-5]] no[0] more[0] permanent[0] newsfetcher[0] thread[0] run[0] on[0] the[0] simplescheduler[0] queue[0] and[0] thread[0] a[0] checker[0] task[0] only[0] to[0] fetch[0] the[0] news[0] [[Sentence=-1,1=word max, 1-5]] no[0] more[0] static[0] newsfetcher[0] instance[0] in[0] routerconsole[0] [[Sentence=-1,1=word max, 1-5]] all[0] helper[0] methods[0] that[0] are[0] still[0] required[0] are[0] moved[0] to[0] newshelper[0] [[Sentence=-1,1=word max, 1-5]] the[0] updatemanager[0] implements[0] the[0] policy[0] for[0] when[0] to[0] check[0] and[0] download[0] [[Sentence=-1,1=word max, 1-5]] all[0] requests[0] go[0] through[0] the[0] updatemanager[0] [[Sentence=-1,1=word max, 1-5]] for[0] each[0] update[0] type[0] there's[0] several[0] parts[0] the[0] xxxupdatehandler/xupdatehandler[0] implements[0] the[0] updater[0] the[0] xxxupdatechecker/xupdatechecker[0] implements[0] the[0] updatetask[0] for[0] checking[0] the[0] xxxupdaterunner/xupdaterunner[0] implements[0] the[0] updatetask[0] for[0] downloading[0] new[0] and[0] moved[0] classes[0] web/[0] update/[0] new[0] consoleupdatemanager[0] [[Sentence=-1,1=word max, 1-5]] java[0] new[0] pluginupdatechecker[0] [[Sentence=-1,1=word max, 1-5]] java[0] from[0] pluginupdatechecker[0] pluginupdatechecker[0] pluginupdatehandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] pluginupdatehandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] pluginupdaterunner[0] new[0] unsignedupdatehandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] unsignedupdatehandler[0] unsignedupdaterunner[0] [[Sentence=-1,1=word max, 1-5]] java[0] new[0] unsignedupdatechecker[0] from[0] newsfetcher[0] updatehandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] remains[0] new[0] updatehandler[0] [[Sentence=-1,1=word max, 1-5]] java[0] new[0] updaterunner[0] [[Sentence=-1,1=word max, 1-5]] java[0] from[0] updatehandler[0] move[0] newshandler[0] from[0] newsfetcher[0] new[0] newsfetcher[0] new[0] newstimertask[0] new[0] dummyhandler[0] initial[0] checkin[0] [[Sentence=-1,1=word max, 1-5]] unfinished[0] untested[0] unpolished[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4667 commit 3a2fe5e8602b33be2045b674f85dea8b1ddef3c5 * ocmosj: refactor cache to its own class, make non-static 	4667 commit 3a2fe5e8602b33be2045b674f85dea8b1ddef3c5 * ocmosj: refactor cache to its own class, make non-static	1	-1	 4667[0] commit[0] 3a2fe5e8602b33be2045b674f85dea8b1ddef3c5[0] ocmosj[0] refactor[0] cache[0] to[0] its[0] own[0] class[0] make[0] non[0] static[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5223 commit c0b9fe034021344e0f787a90a50aabdf87d685c6 * router: refactor periodic tasks to their own files 	5223 commit c0b9fe034021344e0f787a90a50abdf87d685c6 * router: refactor periodic tasks to their own files	1	-1	 5223[0] commit[0] c0b9fe034021344e0f787a90a50aabdf87d685c6/c0b9fe034021344e0f787a90a50abdf87d685c6[0] router[0] refactor[0] periodic[0] tasks[0] to[0] their[0] own[0] files[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
10447 commit ed285871bfb52c9c203957b6c8601463e18adaba migrate the profile page to the new format, and refactor the new format's servlets 	10447 commit ed285871bfb52c9c203957b6c8601463e18adaba migrate the profile page to the new format, and refactor the new format's servlets	1	-1	 10447[0] commit[0] ed285871bfb52c9c203957b6c8601463e18adaba[0] migrate[0] the[0] profile[0] page[0] to[0] the[0] new[0] format[0] and[0] refactor[0] the[0] new[0] format's[0] servlets[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
11270 commit 6151d63eacff2d3fc97de8f65a014fccf1f67abf 2004-09-07 jrandom * write the native libraries to the current directory when they are loaded from a resource, and load them from that file on subsequent runs (in turn, we no longer *cough* delete the running libraries...) * added support for a graceful restart. * added new pseudo-shutdown hook specific to the router, allowing applications to request tasks to be run when the router shuts down. we use this for integration with the service manager, since otherwise a graceful shutdown would cause a timeout, followed by a forced hard shutdown. * handle a bug in the simpletimer with requeued tasks. * made the capacity calculator a bit more dynamic by not outright ignoring the otherwise valid capacity data for a period with a single rejected tunnel (except for the 10 minute period). in addition, peers with an equal capacity are ordered by speed rather than by their hashes. * cleaned up the simpletimer, addressing some threading and synchronization issues. * when an i2ptunnel client or httpclient is explicitly closed, destroy the associated session (unless there are other clients using it), and deal with a closed session when starting a new i2ptunnel instance. * refactoring and logging. 	11270 commit 6151d63eacff2d3fc97de8f65a014fccf1f67abf 2004-09-07 jrandom * write the native libraries to the current directory when they are loaded from a resource, and load them from that file on subsequent runs (in turn, we no longer *cough* delete the running libraries.<br> * added support for a graceful restart.<br> * added new pseudo-shutdown hook specific to the router, allowing applications to request tasks to be run when the router shuts down.<br> we use this for integration with the service manager, since otherwise a graceful shutdown would cause a timeout, followed by a forced hard shutdown.<br> * handle a bug in the simpletimer with requeued tasks.<br> * made the capacity calculator a bit more dynamic by not outright ignoring the otherwise valid capacity data for a period with a single rejected tunnel (except for the 10 minute period)<br> in addition, peers with an equal capacity are ordered by speed rather than by their hashes.<br> * cleaned up the simpletimer, addressing some threading and synchronization issues.<br> * when an i2ptunnel client or httpclient is explicitly closed, destroy the associated session (unless there are other clients using it) and deal with a closed session when starting a new i2ptunnel instance.<br> * refactoring and logging.	3	-3	 11270[0] commit[0] 6151d63eacff2d3fc97de8f65a014fccf1f67abf[0] 2004[0] -09[0] -07[0] jrandom[0] write[0] the[0] native[0] libraries[0] to[0] the[0] current[0] directory[0] when[0] they[0] are[0] loaded[0] from[0] a[0] resource[0] and[0] load[0] them[0] from[0] that[0] file[0] on[0] subsequent[0] runs[0] in[0] turn[0] we[0] no[0] longer[0] cough[0] delete[0] the[0] running[0] libraries[0] [[Sentence=-1,1=word max, 1-5]] added[0] support[0] for[0] a[0] graceful[2] restart[0] [[Sentence=-1,3=word max, 1-5]] added[0] new[0] pseudo[0] shutdown[0] hook[0] specific[0] to[0] the[0] router[0] allowing[0] applications[0] to[0] request[0] tasks[0] to[0] be[0] run[0] when[0] the[0] router[0] shuts[0] down[0] [[Sentence=-1,1=word max, 1-5]] we[0] use[0] this[0] for[0] integration[0] with[0] the[0] service[0] manager[0] since[0] otherwise[0] a[0] graceful[2] shutdown[0] would[0] cause[0] a[0] timeout[0] followed[0] by[0] a[0] forced[0] hard[0] shutdown[0] [[Sentence=-1,3=word max, 1-5]] handle[0] a[0] bug[0] in[0] the[0] simpletimer[0] with[0] requeued[0] tasks[0] [[Sentence=-1,1=word max, 1-5]] made[0] the[0] capacity[0] calculator[0] a[0] bit[0] more[0] dynamic[0] by[0] not[0] outright[0] ignoring[0] the[0] otherwise[0] valid[0] capacity[0] data[0] for[0] a[0] period[0] with[0] a[0] single[0] rejected[-1] tunnel[0] except[0] for[0] the[0] 10[0] minute[0] period[0] [[Sentence=-2,1=word max, 1-5]] in[0] addition[0] peers[0] with[0] an[0] equal[0] capacity[0] are[0] ordered[0] by[0] speed[0] rather[0] than[0] by[0] their[0] hashes[0] [[Sentence=-1,1=word max, 1-5]] cleaned[0] up[0] the[0] simpletimer[0] addressing[0] some[0] threading[0] and[0] synchronization[0] issues[0] [[Sentence=-1,1=word max, 1-5]] when[0] an[0] i2ptunnel[0] client[0] or[0] httpclient[0] is[0] explicitly[0] closed[0] destroy[-2] the[0] associated[0] session[0] unless[0] there[0] are[0] other[0] clients[0] using[0] it[0] and[0] deal[0] with[0] a[0] closed[0] session[0] when[0] starting[0] a[0] new[0] i2ptunnel[0] instance[0] [[Sentence=-3,1=word max, 1-5]] refactoring[0] and[0] logging[0] [[Sentence=-1,1=word max, 1-5]][[[3,-3 max of sentences]]]
