Move Class	Translation	Positive	Negative	EmotionRationale
599 commit f73ad1c2e27d2418e428eb80d5047c5bf2b2770d bugfix/rewrite: algorithm to determine adaptor boundaries the algorithm wasn't accounting for the case where the read is the reverse strand and the insert size is negative. * fixed and rewrote for more clarity (with ryan, mark and eric). * restructured the code to handle gatksamrecords only * cleaned up the other structures and functions around it to minimize clutter and potential for error. * added unit tests for all 4 cases of adaptor boundaries. 	599 commit f73ad1c2e27d2418e428eb80d5047c5bf2b2770d bugfix/rewrite: algorithm to determine adaptor boundaries the algorithm wasn't accounting for the case where the read is the reverse strand and the insert size is negative.<br> * fixed and rewrote for more clarity (with ryan, mark and eric)<br> * restructured the code to handle gatksamrecords only * cleaned up the other structures and functions around it to minimize clutter and potential for error.<br> * added unit tests for all 4 cases of adaptor boundaries.	1	-2	 599[0] commit[0] f73ad1c2e27d2418e428eb80d5047c5bf2b2770d[0] bugfix/rewrite[0] algorithm[0] to[0] determine[0] adaptor[0] boundaries[0] the[0] algorithm[0] wasn't[0] accounting[0] for[0] the[0] case[0] where[0] the[0] read[0] is[0] the[0] reverse[0] strand[0] and[0] the[0] insert[0] size[0] is[0] negative[-1] [[Sentence=-2,1=word max, 1-5]] fixed[0] and[0] rewrote[0] for[0] more[0] clarity[0] with[0] ryan[0] mark[0] and[0] eric[0] [[Sentence=-1,1=word max, 1-5]] restructured[0] the[0] code[0] to[0] handle[0] gatksamrecords[0] only[0] cleaned[0] up[0] the[0] other[0] structures[0] and[0] functions[0] around[0] it[0] to[0] minimize[0] clutter[-1] and[0] potential[0] for[0] error[0] [[Sentence=-2,1=word max, 1-5]] added[0] unit[0] tests[0] for[0] all[0] 4[0] cases[0] of[0] adaptor[0] boundaries[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
2294 commit 03741fb6406fa8381db9786e3f038c3db7afd828 merge: a366f9a 65c5d55 merge branch 'master' into rodrefactor conflicts: public/java/src/org/broadinstitute/sting/gatk/walkers/annotator/variantannotatorengine.java public/java/test/org/broadinstitute/sting/gatk/walkers/indels/indelrealignerintegrationtest.java public/java/test/org/broadinstitute/sting/gatk/walkers/indels/indelrealignerperformancetest.java public/java/test/org/broadinstitute/sting/utils/variantcontext/variantcontextintegrationtest.java 	2294 commit 03741fb6406fa8381db9786e3f038c3db7afd828 merge: a366f9a 65c5d55 merge branch 'master' into rodrefactor conflicts: public/java/src/org/broadinstitute/sting/gatk/walkers/annotator/variantannotatorengine.<br>java public/java/test/org/broadinstitute/sting/gatk/walkers/indels/indelrealignerintegrationtest.<br>java public/java/test/org/broadinstitute/sting/gatk/walkers/indels/indelrealignerperformancetest.<br>java public/java/test/org/broadinstitute/sting/utils/variantcontext/variantcontextintegrationtest.<br>java	1	-1	 2294[0] commit[0] 03741fb6406fa8381db9786e3f038c3db7afd828[0] merge[0] a366f9a[0] 65c5d55[0] merge[0] branch[0] 'master'[0] into[0] rodrefactor[0] conflicts[0] public/java/src/org/broadinstitute/sting/gatk/walkers/annotator/variantannotatorengine[0] [[Sentence=-1,1=word max, 1-5]] java[0] public/java/test/org/broadinstitute/sting/gatk/walkers/indels/indelrealignerintegrationtest[0] [[Sentence=-1,1=word max, 1-5]] java[0] public/java/test/org/broadinstitute/sting/gatk/walkers/indels/indelrealignerperformancetest[0] [[Sentence=-1,1=word max, 1-5]] java[0] public/java/test/org/broadinstitute/sting/utils/variantcontext/variantcontextintegrationtest[0] [[Sentence=-1,1=word max, 1-5]] java[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
2392 commit f3049fba63899bfb35f245198b829472f480c9fa refdata directory cleanup removing unused files rodrecorditerator, referenceordereddata, queryabletrack, rmdtrackcreationexception, gatkfeatureiterator, referenceordereddataunittest refactored dbsnp and refseq utilities to be closer to the other files implementing these features 	2392 commit f3049fba63899bfb35f245198b829472f480c9fa refdata directory cleanup removing unused files rodrecorditerator, referenceordereddata, queryabletrack, rmdtrackcreationexception, gatkfeatureiterator, referenceordereddataunittest refactored dbsnp and refseq utilities to be closer to the other files implementing these features	1	-1	 2392[0] commit[0] f3049fba63899bfb35f245198b829472f480c9fa[0] refdata[0] directory[0] cleanup[0] removing[0] unused[0] files[0] rodrecorditerator[0] referenceordereddata[0] queryabletrack[0] rmdtrackcreationexception[0] gatkfeatureiterator[0] referenceordereddataunittest[0] refactored[0] dbsnp[0] and[0] refseq[0] utilities[0] to[0] be[0] closer[0] to[0] the[0] other[0] files[0] implementing[0] these[0] features[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3236 commit f608ed6d5a81061acae3e6b9aebce46f45845d45 removed old (and unused) reporting system, now that kiran's ve reporting system is working. refactors dictionary creation error messages into userexceptions 	3236 commit f608ed6d5a81061acae3e6b9aebce46f45845d45 removed old (and unused) reporting system, now that kiran's ve reporting system is working.<br> refactors dictionary creation error messages into userexceptions	1	-1	 3236[0] commit[0] f608ed6d5a81061acae3e6b9aebce46f45845d45[0] removed[0] old[0] and[0] unused[0] reporting[0] system[0] now[0] that[0] kiran's[0] ve[0] reporting[0] system[0] is[0] working[0] [[Sentence=-1,1=word max, 1-5]] refactors[0] dictionary[0] creation[0] error[0] messages[0] into[0] userexceptions[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3462 commit 9c36b0a39bd46381f42c0236a2d9ee4e69f31c9a refactored read clipping framework into a generic utilities class, independent of clipreadswalker, which now uses this framework. some more cleanup is really needed, as some of the arguments to the classes are really only useful for clipreads reducereadswalker -- does consensus-based read compression, v2. does all of the consensus calculations within the consensusreadcompressor per sample, and multi-sample case is handled by multisampleconsensusreadcompressor. for deeply covered data sets, this projects a significant reduction in the number of mapped reads. impact on analysis call quality tbd. expected to be relatively minor, as the system automatically detects regions without a strong consensus, and expands a window around these so that  /- 10bp of all reads are shown around the unclear sites. not usable yet -- as it does not yet support streaming output, and actually holds all reads in memory at once. 	3462 commit 9c36b0a39bd46381f42c0236a2d9ee4e69f31c9a refactored read clipping framework into a generic utilities class, independent of clipreadswalker, which now uses this framework.<br> some more cleanup is really needed, as some of the arguments to the classes are really only useful for clipreads reducereadswalker - does consensus-based read compression, v2.<br> does all of the consensus calculations within the consensusreadcompressor per sample, and multi-sample case is handled by multisampleconsensusreadcompressor.<br> for deeply covered data sets, this projects a significant reduction in the number of mapped reads.<br> impact on analysis call quality tbd.<br> expected to be relatively minor, as the system automatically detects regions without a strong consensus, and expands a window around these so that  /- 10bp of all reads are shown around the unclear sites.<br> not usable yet - as it does not yet support streaming output, and actually holds all reads in memory at once.	2	-2	 3462[0] commit[0] 9c36b0a39bd46381f42c0236a2d9ee4e69f31c9a[0] refactored[0] read[0] clipping[0] framework[0] into[0] a[0] generic[0] utilities[0] class[0] independent[0] of[0] clipreadswalker[0] which[0] now[0] uses[0] this[0] framework[0] [[Sentence=-1,1=word max, 1-5]] some[0] more[0] cleanup[0] is[0] really[0] needed[0] as[0] some[0] of[0] the[0] arguments[-1] to[0] the[0] classes[0] are[0] really[0] only[0] useful[1] for[0] clipreads[0] reducereadswalker[0] does[0] consensus[0] based[0] read[0] compression[0] v2[0] [[Sentence=-2,2=word max, 1-5]] does[0] all[0] of[0] the[0] consensus[0] calculations[0] within[0] the[0] consensusreadcompressor[0] per[0] sample[0] and[0] multi[0] sample[0] case[0] is[0] handled[0] by[0] multisampleconsensusreadcompressor[0] [[Sentence=-1,1=word max, 1-5]] for[0] deeply[0] covered[0] data[0] sets[0] this[0] projects[0] a[0] significant[0] reduction[0] in[0] the[0] number[0] of[0] mapped[0] reads[0] [[Sentence=-1,1=word max, 1-5]] impact[0] on[0] analysis[0] call[0] quality[0] tbd[0] [[Sentence=-1,1=word max, 1-5]] expected[0] to[0] be[0] relatively[0] minor[0] as[0] the[0] system[0] automatically[0] detects[0] regions[0] without[0] a[0] strong[0] consensus[0] and[0] expands[0] a[0] window[0] around[0] these[0] so[0] that[0] /[0] 10bp[0] of[0] all[0] reads[0] are[0] shown[0] around[0] the[0] unclear[-1] sites[0] [[Sentence=-2,1=word max, 1-5]] not[0] usable[0] yet[0] as[0] it[0] does[0] not[0] yet[0] support[0] streaming[0] output[0] and[0] actually[0] holds[0] all[0] reads[0] in[0] memory[0] at[0] once[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
3706 commit ef38fd1e0ee2bc92734dc4496ce75b9963e00670 major refactoring of association testing framework. new modules are now beyond trivial to implement. one hurdle remains which is how to deal with statistics that ought to be sample-normalized (e.g. depth, insert-size [when multiple libraries are used], and possibly others). 	3706 commit ef38fd1e0ee2bc92734dc4496ce75b9963e00670 major refactoring of association testing framework.<br> new modules are now beyond trivial to implement.<br> one hurdle remains which is how to deal with statistics that ought to be sample-normalized (e.<br>grinï¿½.<br> depth, insert-size [when multiple libraries are used], and possibly others)	1	-2	 3706[0] commit[0] ef38fd1e0ee2bc92734dc4496ce75b9963e00670[0] major[0] refactoring[0] of[0] association[0] testing[0] framework[0] [[Sentence=-1,1=word max, 1-5]] new[0] modules[0] are[0] now[0] beyond[0] trivial[-1] to[0] implement[0] [[Sentence=-2,1=word max, 1-5]] one[0] hurdle[0] remains[0] which[0] is[0] how[0] to[0] deal[0] with[0] statistics[0] that[0] ought[0] to[0] be[0] sample[0] normalized[0] e[0] [[Sentence=-1,1=word max, 1-5]] g[0] [[Sentence=-1,1=word max, 1-5]] depth[0] insert[0] size[0] [when[0] multiple[0] libraries[0] are[0] used][0] and[0] possibly[0] others[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
4253 commit 895cb39f41df012009701bf725903530ff3367e1 thanks to platform computing tech support, found the magical environment variable bsub_quiet. minor refactoring to add more of the clibrary including setenv(). 	4253 commit 895cb39f41df012009701bf725903530ff3367e1 thanks to platform computing tech support, found the magical environment variable bsub_quiet.<br> minor refactoring to add more of the clibrary including setenv(	2	-1	 4253[0] commit[0] 895cb39f41df012009701bf725903530ff3367e1[0] thanks[1] to[0] platform[0] computing[0] tech[0] support[0] found[0] the[0] magical[0] environment[0] variable[0] bsub_quiet[0] [[Sentence=-1,2=word max, 1-5]] minor[0] refactoring[0] to[0] add[0] more[0] of[0] the[0] clibrary[0] including[0] setenv[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
4277 commit 5d2c2bd28036adb174534508a3de3783a673fa41 just refactoring into utils/baq directory 	4277 commit 5d2c2bd28036adb174534508a3de3783a673fa41 just refactoring into utils/baq directory	1	-1	 4277[0] commit[0] 5d2c2bd28036adb174534508a3de3783a673fa41[0] just[0] refactoring[0] into[0] utils/baq[0] directory[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5564 commit ef47a69c5099927f354cf22d614482e4b3ba6035 a) first fully functional (sort of) version of walker that parses beagle imputation output files and produce a vcf with imputed genotypes. more doc/info to follow shortly. issues still to be solved: a) walker changes all genotypes based on beagle data, but annotations on the original vcf are unchanged. they should in theory be recomputed based on new genotypes. b) current implementation is ugly, dirty unwieldy and will necessitate a refactoring soon so i can keep my pride. most aesthetically affronting issue right now is that we read the full beagle files at initialization and keep them in memory, but a more delicate implementation would just read from files on a marker by marker basis. issue that currently prevents this is that bufferedreader() instances don't seem to play nice when called from the map() function. 	5564 commit ef47a69c509927f354cf22d614482e4b3ba6035 a) first fully functional (sort of) version of walker that parses beagle imputation output files and produce a vcf with imputed genotypes.<br> more doc/info to follow shortly.<br> issues still to be solved: a) walker changes all genotypes based on beagle data, but annotations on the original vcf are unchanged.<br> they should in theory be recomputed based on new genotypes.<br> b) current implementation is ugly, dirty unwieldy and will necessitate a refactoring soon so i can keep my pride.<br> most aesthetically affronting issue right now is that we read the full beagle files at initialization and keep them in memory, but a more delicate implementation would just read from files on a marker by marker basis.<br> issue that currently prevents this is that bufferedreader( instances don't seem to play nice when called from the map( function.	2	-3	 5564[0] commit[0] ef47a69c5099927f354cf22d614482e4b3ba6035/ef47a69c509927f354cf22d614482e4b3ba6035[0] a[0] first[0] fully[0] functional[0] sort[0] of[0] version[0] of[0] walker[0] that[0] parses[0] beagle[0] imputation[0] output[0] files[0] and[0] produce[0] a[0] vcf[0] with[0] imputed[0] genotypes[0] [[Sentence=-1,1=word max, 1-5]] more[0] doc/info[0] to[0] follow[0] shortly[0] [[Sentence=-1,1=word max, 1-5]] issues[0] still[0] to[0] be[0] solved[0] a[0] walker[0] changes[0] all[0] genotypes[0] based[0] on[0] beagle[0] data[0] but[0] annotations[0] on[0] the[0] original[0] vcf[0] are[0] unchanged[0] [[Sentence=-1,1=word max, 1-5]] they[0] should[0] in[0] theory[0] be[0] recomputed[0] based[0] on[0] new[0] genotypes[0] [[Sentence=-1,1=word max, 1-5]] b[0] current[0] implementation[0] is[0] ugly[-2] dirty[-1] unwieldy[0] and[0] will[0] necessitate[0] a[0] refactoring[0] soon[0] so[0] i[0] can[0] keep[0] my[0] pride[1] [[Sentence=-3,2=word max, 1-5]] most[0] aesthetically[0] affronting[0] issue[0] right[0] now[0] is[0] that[0] we[0] read[0] the[0] full[0] beagle[0] files[0] at[0] initialization[0] and[0] keep[0] them[0] in[0] memory[0] but[0] a[0] more[0] delicate[0] implementation[0] would[0] just[0] read[0] from[0] files[0] on[0] a[0] marker[0] by[0] marker[0] basis[0] [[Sentence=-1,1=word max, 1-5]] issue[0] that[0] currently[0] prevents[0] this[0] is[0] that[0] bufferedreader[0] instances[0] don't[0] seem[0] to[0] play[0] nice[1] when[0] called[0] from[0] the[0] map[0] function[0] [[Sentence=-1,2=word max, 1-5]][[[2,-3 max of sentences]]]
6155 commit 87f8fb7282dd6e43fac0ed2f797a841493f851f5 quick commit in advance of aaron's. just a bunch of refactoring (private classes separated out, put in proper package). also support added for coverage by read group rather than sample. 	6155 commit 87f8fb7282dd6e43fac0ed2f797a841493f851f5 quick commit in advance of aron's.<br> just a bunch of refactoring (private classes separated out, put in proper package)<br> also support added for coverage by read group rather than sample.	1	-1	 6155[0] commit[0] 87f8fb7282dd6e43fac0ed2f797a841493f851f5[0] quick[0] commit[0] in[0] advance[0] of[0] aaron's/aron's[0] [[Sentence=-1,1=word max, 1-5]] just[0] a[0] bunch[0] of[0] refactoring[0] private[0] classes[0] separated[0] out[0] put[0] in[0] proper[0] package[0] [[Sentence=-1,1=word max, 1-5]] also[0] support[0] added[0] for[0] coverage[0] by[0] read[0] group[0] rather[0] than[0] sample[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6364 commit c231547204f09fd5dfc6aa0fcd16fe1e07c5cce8 refactoring and migration of new allele/variantcontext/genotype code into oneoffprojects. not for use. plinkrod commented out due to dependence on this new, rapidly changing interface. 	6364 commit c231547204f09fd5dfc6a0fcd16fe1e07c5cce8 refactoring and migration of new allele/variantcontext/genotype code into oneoffprojects.<br> not for use.<br> plinkrod commented out due to dependence on this new, rapidly changing interface.	1	-1	 6364[0] commit[0] c231547204f09fd5dfc6aa0fcd16fe1e07c5cce8/c231547204f09fd5dfc6a0fcd16fe1e07c5cce8[0] refactoring[0] and[0] migration[0] of[0] new[0] allele/variantcontext/genotype[0] code[0] into[0] oneoffprojects[0] [[Sentence=-1,1=word max, 1-5]] not[0] for[0] use[0] [[Sentence=-1,1=word max, 1-5]] plinkrod[0] commented[0] out[0] due[0] to[0] dependence[0] on[0] this[0] new[0] rapidly[0] changing[0] interface[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6926 commit 1d46de6d340ff180735df1b5f2894c2cffa4638d the old recalibrator is replaced with the refactored recalibrator. added a version message to the logger output. these walkers start at version 2.0.0 	6926 commit 1d46de6d340ff180735df1b5f2894c2cffa4638d the old recalibrator is replaced with the refactored recalibrator.<br> added a version message to the logger output.<br> these walkers start at version 2.0.0	1	-1	 6926[0] commit[0] 1d46de6d340ff180735df1b5f2894c2cffa4638d[0] the[0] old[0] recalibrator[0] is[0] replaced[0] with[0] the[0] refactored[0] recalibrator[0] [[Sentence=-1,1=word max, 1-5]] added[0] a[0] version[0] message[0] to[0] the[0] logger[0] output[0] [[Sentence=-1,1=word max, 1-5]] these[0] walkers[0] start[0] at[0] version[0] 2[0] .0[0] .0[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7156 commit 3b1fabeff070fa9289c85401824e285aae2d2ea6 major code refactoring: @ pooled utils & power - removed two of the power walkers leaving only powerbelowfrequency, added some additional flags on powerbelowfrequency to give it some of the behavior that powerandcoverage had - removed a number of poolutils variables and methods that were used in those walkers or simply not used - removed analyzepowerwalker (un-necessary) - changed the location of quad/squad/readoffsetquad into poolseq @nqs - deleted all walkers but the minimum nqs walker, refactored not to use localmaptype @ basetransitiontable - added a slew of new integration tests for different flaggable and integral parameters - (scala) just a system.out that was added and commented out (no actual code change) - (java) changed a   to    and a boolean formula chris 	7156 commit 3b1fabeff070fa9289c85401824e285ae2d2ea6 major code refactoring: @ pooled utils & power - removed two of the power walkers leaving only powerbelowfrequency, added some additional flags on powerbelowfrequency to give it some of the behavior that powerandcoverage had - removed a number of poolutils variables and methods that were used in those walkers or simply not used - removed analyzepowerwalker (un-necessary) - changed the location of quad/squad/readoffsetquad into poolseq @nqs - deleted all walkers but the minimum nqs walker, refactored not to use localmaptype @ basetransitiontable - added a slew of new integration tests for different flaggable and integral parameters - (scala) just a system.<br>out that was added and commented out (no actual code change) - (java) changed a   to    and a boolean formula chris	1	-1	 7156[0] commit[0] 3b1fabeff070fa9289c85401824e285aae2d2ea6/3b1fabeff070fa9289c85401824e285ae2d2ea6[0] major[0] code[0] refactoring[0] @[0] pooled[0] utils[0] &[0] power[0] removed[0] two[0] of[0] the[0] power[0] walkers[0] leaving[0] only[0] powerbelowfrequency[0] added[0] some[0] additional[0] flags[0] on[0] powerbelowfrequency[0] to[0] give[0] it[0] some[0] of[0] the[0] behavior[0] that[0] powerandcoverage[0] had[0] removed[0] a[0] number[0] of[0] poolutils[0] variables[0] and[0] methods[0] that[0] were[0] used[0] in[0] those[0] walkers[0] or[0] simply[0] not[0] used[0] removed[0] analyzepowerwalker[0] un[0] necessary[0] changed[0] the[0] location[0] of[0] quad/squad/readoffsetquad[0] into[0] poolseq[0] @nqs[0] deleted[0] all[0] walkers[0] but[0] the[0] minimum[0] nqs[0] walker[0] refactored[0] not[0] to[0] use[0] localmaptype[0] @[0] basetransitiontable[0] added[0] a[0] slew[0] of[0] new[0] integration[0] tests[0] for[0] different[0] flaggable[0] and[0] integral[0] parameters[0] scala[0] just[0] a[0] system[0] [[Sentence=-1,1=word max, 1-5]] out[0] that[0] was[0] added[0] and[0] commented[0] out[0] no[0] actual[0] code[0] change[0] java[0] changed[0] a[0] to[0] and[0] a[0] boolean[0] formula[0] chris[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7843 commit d8fbb2b62cd21ef7ed7d2d8fc10bfee900a5a62f refactoring; make a better home for the malformedreadfilteringiterator. 	7843 commit d8fbb2b62cd21ef7ed7d2d8fc10bfee900a5a62f refactoring; make a better home for the malformedreadfilteringiterator.	1	-1	 7843[0] commit[0] d8fbb2b62cd21ef7ed7d2d8fc10bfee900a5a62f[0] refactoring[0] make[0] a[0] better[0] home[0] for[0] the[0] malformedreadfilteringiterator[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7879 commit 6a25f0b9c58ab3fa0e0509cca208671b7182e9bb refactored into new package 	7879 commit 6a25f0b9c58ab3fa0e0509cca208671b7182e9bb refactored into new package	1	-1	 7879[0] commit[0] 6a25f0b9c58ab3fa0e0509cca208671b7182e9bb[0] refactored[0] into[0] new[0] package[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8808 commit e812cfbf5542d993a7b982ca5e419485d0a8ad2d refactor common functionality out of walkermanager and into jvmutils and pathutils. add support for loading walkers from a jar. 	8808 commit e812cfbf5542d993a7b982ca5e419485d0a8ad2d refactor common functionality out of walkermanager and into jvmutils and pathutils.<br> add support for loading walkers from a jar.	1	-1	 8808[0] commit[0] e812cfbf5542d993a7b982ca5e419485d0a8ad2d[0] refactor[0] common[0] functionality[0] out[0] of[0] walkermanager[0] and[0] into[0] jvmutils[0] and[0] pathutils[0] [[Sentence=-1,1=word max, 1-5]] add[0] support[0] for[0] loading[0] walkers[0] from[0] a[0] jar[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8934 commit 6bcdac5c6253dcc329b9e00de91c0ec46ff3f221 restructured allelefrequency classes into 3 classes: allelefrequencywalker, allelefrequencymetricswalker, allelefrequencyestimate. allelefrequencymetricswalker class now calls mapper function of allelefrequencywalker and works with the result. allelefrequencyestimate is now a separate class instead of a subclass of allelefrequencywalker. 	8934 commit 6bcdac5c6253dcc329b9e00de91c0ec46ff3f221 restructured allelefrequency classes into 3 classes: allelefrequencywalker, allelefrequencymetricswalker, allelefrequencyestimate.<br> allelefrequencymetricswalker class now calls mapper function of allelefrequencywalker and works with the result.<br> allelefrequencyestimate is now a separate class instead of a subclass of allelefrequencywalker.	1	-1	 8934[0] commit[0] 6bcdac5c6253dcc329b9e00de91c0ec46ff3f221[0] restructured[0] allelefrequency[0] classes[0] into[0] 3[0] classes[0] allelefrequencywalker[0] allelefrequencymetricswalker[0] allelefrequencyestimate[0] [[Sentence=-1,1=word max, 1-5]] allelefrequencymetricswalker[0] class[0] now[0] calls[0] mapper[0] function[0] of[0] allelefrequencywalker[0] and[0] works[0] with[0] the[0] result[0] [[Sentence=-1,1=word max, 1-5]] allelefrequencyestimate[0] is[0] now[0] a[0] separate[0] class[0] instead[0] of[0] a[0] subclass[0] of[0] allelefrequencywalker[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
