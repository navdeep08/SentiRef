Rename Method	Translation	Positive	Negative	EmotionRationale
2195 commit f8a56bc64be83f1a9ff12102282672adc42c01d6 merge: f8ad91b f0ee789 merge branch 'master' into rodrefactor 	2195 commit f8a56bc64be83f1a9ff12102282672adc42c01d6 merge: f8ad91b f0ee789 merge branch 'master' into rodrefactor	1	-1	 2195[0] commit[0] f8a56bc64be83f1a9ff12102282672adc42c01d6[0] merge[0] f8ad91b[0] f0ee789[0] merge[0] branch[0] 'master'[0] into[0] rodrefactor[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
2218 commit e5fde0d16bbbbbeca9802d5828a077c8036676fa merge: 526b524 88061ed merge branch 'master' into rodrefactor 	2218 commit e5fde0d16bbeca9802d5828a077c8036676fa merge: 526b524 88061ed merge branch 'master' into rodrefactor	2	-1	 2218[0] commit[0] e5fde0d16bbbbbeca9802d5828a077c8036676fa/e5fde0d16bbeca9802d5828a077c8036676fa[0][+0.6 MultipleLetters] merge[0] 526b524[0] 88061ed[0] merge[0] branch[0] 'master'[0] into[0] rodrefactor[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
2432 commit 7420ed098e722610dbf9dcac00320a30ca1ba073 semi-working version of extradocs tag in annotation to refer to one capability being accessible in another required a significant refactoring of the gatkdoclet, which now has a unified place where the classdoc, class, annotation, and handler are all stored together. 	2432 commit 7420ed098e722610dbf9dcac00320a30ca1ba073 semi-working version of extradocs tag in annotation to refer to one capability being accessible in another required a significant refactoring of the gatkdoclet, which now has a unified place where the classdoc, class, annotation, and handler are all stored together.	1	-1	 2432[0] commit[0] 7420ed098e722610dbf9dcac00320a30ca1ba073[0] semi[0] working[0] version[0] of[0] extradocs[0] tag[0] in[0] annotation[0] to[0] refer[0] to[0] one[0] capability[0] being[0] accessible[0] in[0] another[0] required[0] a[0] significant[0] refactoring[0] of[0] the[0] gatkdoclet[0] which[0] now[0] has[0] a[0] unified[0] place[0] where[0] the[0] classdoc[0] class[0] annotation[0] and[0] handler[0] are[0] all[0] stored[0] together[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3245 commit e16bc2cbd9ff13bdb96e90c2d083908099aa82e8 contracts for java now write for genomeloc and genomelocparser. the semantics of genomeloc are now much clearer. it is no longer allowed to create invalid genomelocs -- you can only create them with well formed start, end, and contigs, with respect to the mater dictionary. where one previously created an invalid genomeloc, and asked is this valid, you must now provide the raw arguments to helper functions to assess this. providing bad arguments to genomeloc generates userexceptions now. added utilty functions contigisindictionary and indexisindictionary to help with this. refactored several interval utilties from genomelocparser to intervalutils, as one might expect they go removed genomeloc.clone() method, as this was not correctly implemented, and actually unnecessary, as genomelocs are immutable. several iterator classes have changed to remove their use of clone() removed misc. unnecessary imports disabled, temporarily, the validating pileup integration test, as it uses reads mapped to an different reference sequence for ecoli, and this now does not satisfy the contracts for genomeloc 	3245 commit e16bc2cbd9ff13bdb96e90c2d083908099a82e8 contracts for java now write for genomeloc and genomelocparser.<br> the semantics of genomeloc are now much clearer.<br> it is no longer allowed to create invalid genomelocs - you can only create them with well formed start, end, and contigs, with respect to the mater dictionary.<br> where one previously created an invalid genomeloc, and asked is this valid, you must now provide the raw arguments to helper functions to assess this.<br> providing bad arguments to genomeloc generates userexceptions now.<br> added utilty functions contigisindictionary and indexisindictionary to help with this.<br> refactored several interval utilties from genomelocparser to intervalutils, as one might expect they go removed genomeloc.<br>clone( method, as this was not correctly implemented, and actually unnecessary, as genomelocs are immutable.<br> several iterator classes have changed to remove their use of clone( removed misc.<br> unnecessary imports disabled, temporarily, the validating pileup integration test, as it uses reads mapped to an different reference sequence for ecoli, and this now does not satisfy the contracts for genomeloc	3	-2	 3245[0] commit[0] e16bc2cbd9ff13bdb96e90c2d083908099aa82e8/e16bc2cbd9ff13bdb96e90c2d083908099a82e8[0] contracts[0] for[0] java[0] now[0] write[0] for[0] genomeloc[0] and[0] genomelocparser[0] [[Sentence=-1,1=word max, 1-5]] the[0] semantics[0] of[0] genomeloc[0] are[0] now[0] much[0] clearer[0] [[Sentence=-1,1=word max, 1-5]] it[0] is[0] no[0] longer[0] allowed[0] to[0] create[0] invalid[-1] genomelocs[0] you[0] can[0] only[0] create[0] them[0] with[0] well[0] formed[0] start[0] end[0] and[0] contigs[0] with[0] respect[2] to[0] the[0] mater[0] dictionary[0] [[Sentence=-2,3=word max, 1-5]] where[0] one[0] previously[0] created[0] an[0] invalid[-1] genomeloc[0] and[0] asked[0] is[0] this[0] valid[0] you[0] must[0] now[0] provide[0] the[0] raw[0] arguments[-1] to[0] helper[0] functions[0] to[0] assess[0] this[0] [[Sentence=-2,1=word max, 1-5]] providing[0] bad[-1] arguments[-1] to[0] genomeloc[0] generates[0] userexceptions[0] now[0] [[Sentence=-2,1=word max, 1-5]] added[0] utilty[0] functions[0] contigisindictionary[0] and[0] indexisindictionary[0] to[0] help[0] with[0] this[0] [[Sentence=-1,1=word max, 1-5]] refactored[0] several[0] interval[0] utilties[0] from[0] genomelocparser[0] to[0] intervalutils[0] as[0] one[0] might[0] expect[0] they[0] go[0] removed[0] genomeloc[0] [[Sentence=-1,1=word max, 1-5]] clone[0] method[0] as[0] this[0] was[0] not[0] correctly[0] implemented[0] and[0] actually[0] unnecessary[-1] as[0] genomelocs[0] are[0] immutable[0] [[Sentence=-2,1=word max, 1-5]] several[0] iterator[0] classes[0] have[0] changed[0] to[0] remove[0] their[0] use[0] of[0] clone[0] removed[0] misc[0] [[Sentence=-1,1=word max, 1-5]] unnecessary[-1] imports[0] disabled[0] temporarily[-1] the[0] validating[0] pileup[0] integration[0] test[0] as[0] it[0] uses[0] reads[0] mapped[0] to[0] an[0] different[0] reference[0] sequence[0] for[0] ecoli[0] and[0] this[0] now[0] does[0] not[0] satisfy[1][NegatedDueToPreviousWord] the[0] contracts[0] for[0] genomeloc[0] [[Sentence=-2,1=word max, 1-5]][[[3,-2 max of sentences]]]
3385 commit f619dd3ca7f1a616f62389aa36d9597a7d92598a refactored intervalutils used to parse and scatter intervals for queue. scattering non-contig interval lists by number of loci in the intervals instead of just number of intervals. queue caches the list of locs and how to split them up instead of reloading them from disk repeatedly. todo: general purpose function to divide data evenly. skip over comments when parsing picard analysis files. 	3385 commit f619dd3ca7f1a616f62389a36d9597a7d92598a refactored intervalutils used to parse and scatter intervals for queue.<br> scattering non-contig interval lists by number of loci in the intervals instead of just number of intervals.<br> queue caches the list of locs and how to split them up instead of reloading them from disk repeatedly.<br> todo: general purpose function to divide data evenly.<br> skip over comments when parsing picard analysis files.	1	-1	 3385[0] commit[0] f619dd3ca7f1a616f62389aa36d9597a7d92598a/f619dd3ca7f1a616f62389a36d9597a7d92598a[0] refactored[0] intervalutils[0] used[0] to[0] parse[0] and[0] scatter[0] intervals[0] for[0] queue[0] [[Sentence=-1,1=word max, 1-5]] scattering[0] non[0] contig[0] interval[0] lists[0] by[0] number[0] of[0] loci[0] in[0] the[0] intervals[0] instead[0] of[0] just[0] number[0] of[0] intervals[0] [[Sentence=-1,1=word max, 1-5]] queue[0] caches[0] the[0] list[0] of[0] locs[0] and[0] how[0] to[0] split[0] them[0] up[0] instead[0] of[0] reloading[0] them[0] from[0] disk[0] repeatedly[0] [[Sentence=-1,1=word max, 1-5]] todo[0] general[0] purpose[0] function[0] to[0] divide[0] data[0] evenly[0] [[Sentence=-1,1=word max, 1-5]] skip[0] over[0] comments[0] when[0] parsing[0] picard[0] analysis[0] files[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4157 commit cba18116e4dbb56c6ce91f8c6b5de70959d9842e a significant refactoring of the rod system, done largely to simplify the process of streaming/piping vcfs into the gatk. notable changes: - public interface to rmdtrackbuilder is greatly simplified; users can use it only to build rmdtracks and lookup codecs. - roddatasource and rmdtrack are no longer functionally at the same level; roddatasources now manage rmdtracks on behalf of the gatk, and the only direct consumers of the rmdtrack class are the walkers that feel the need to access the rod system directly. (we need to stamp out this access pattern. a few minor warts were introduced as part of this process, labeled with todos. these'll be fixed as part of the vcf streaming project. 	4157 commit cba18116e4dbb56c6ce91f8c6b5de70959d9842e a significant refactoring of the rod system, done largely to simplify the process of streaming/piping vcfs into the gatk.<br> notable changes: - public interface to rmdtrackbuilder is greatly simplified; users can use it only to build rmdtracks and lookup codecs.<br> - roddatasource and rmdtrack are no longer functionally at the same level; roddatasources now manage rmdtracks on behalf of the gatk, and the only direct consumers of the rmdtrack class are the walkers that feel the need to access the rod system directly.<br> (we need to stamp out this access pattern.<br> a few minor warts were introduced as part of this process, labeled with todos.<br> these'll be fixed as part of the vcf streaming project.	3	-1	 4157[0] commit[0] cba18116e4dbb56c6ce91f8c6b5de70959d9842e[0] a[0] significant[0] refactoring[0] of[0] the[0] rod[0] system[0] done[0] largely[0] to[0] simplify[0] the[0] process[0] of[0] streaming/piping[0] vcfs[0] into[0] the[0] gatk[0] [[Sentence=-1,1=word max, 1-5]] notable[0] changes[0] public[0] interface[0] to[0] rmdtrackbuilder[0] is[0] greatly[2] simplified[0] users[0] can[0] use[0] it[0] only[0] to[0] build[0] rmdtracks[0] and[0] lookup[0] codecs[0] [[Sentence=-1,3=word max, 1-5]] roddatasource[0] and[0] rmdtrack[0] are[0] no[0] longer[0] functionally[0] at[0] the[0] same[0] level[0] roddatasources[0] now[0] manage[0] rmdtracks[0] on[0] behalf[0] of[0] the[0] gatk[0] and[0] the[0] only[0] direct[0] consumers[0] of[0] the[0] rmdtrack[0] class[0] are[0] the[0] walkers[0] that[0] feel[0] the[0] need[0] to[0] access[0] the[0] rod[0] system[0] directly[0] [[Sentence=-1,1=word max, 1-5]] we[0] need[0] to[0] stamp[0] out[0] this[0] access[0] pattern[0] [[Sentence=-1,1=word max, 1-5]] a[0] few[0] minor[0] warts[0] were[0] introduced[0] as[0] part[0] of[0] this[0] process[0] labeled[0] with[0] todos[0] [[Sentence=-1,1=word max, 1-5]] these'll[0] be[0] fixed[0] as[0] part[0] of[0] the[0] vcf[0] streaming[0] project[0] [[Sentence=-1,1=word max, 1-5]][[[3,-1 max of sentences]]]
4328 commit 102c8b1f596bb4266f1f5557423e832c1361d597 large refactoring of the ugv2 engine so that it is now truly separated into 2 distict phases: gl calculation and af calculation, where each can be done independently. this is not yet enabled in ugv2 itself though because i need to work out one last issue or two. tested on 1mb of 1000g aug allpops low-pass and results are identical as before. also, making bq capping by mq mandatory. 	4328 commit 102c8b1f596bb4266f1f557423e832c1361d597 large refactoring of the ugv2 engine so that it is now truly separated into 2 distict phases: gl calculation and af calculation, where each can be done independently.<br> this is not yet enabled in ugv2 itself though because i need to work out one last issue or two.<br> tested on 1mb of 100g aug allpops low-pass and results are identical as before.<br> also, making bq capping by mq mandatory.	2	-2	 4328[0] commit[0] 102c8b1f596bb4266f1f5557423e832c1361d597/102c8b1f596bb4266f1f557423e832c1361d597[0] large[0] refactoring[0] of[0] the[0] ugv2[0] engine[0] so[0] that[0] it[0] is[0] now[0] truly[1] separated[0] into[0] 2[0] distict[0] phases[0] gl[0] calculation[0] and[0] af[0] calculation[0] where[0] each[0] can[0] be[0] done[0] independently[0] [[Sentence=-1,2=word max, 1-5]] this[0] is[0] not[0] yet[0] enabled[0] in[0] ugv2[0] itself[0] though[0] because[0] i[0] need[0] to[0] work[0] out[0] one[0] last[0] issue[0] or[0] two[0] [[Sentence=-1,1=word max, 1-5]] tested[0] on[0] 1mb[0] of[0] 1000g/100g[0] aug[0] allpops[0] low[-1] pass[0] and[0] results[0] are[0] identical[0] as[0] before[0] [[Sentence=-2,1=word max, 1-5]] also[0] making[0] bq[0] capping[0] by[0] mq[0] mandatory[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
4388 commit ef2f6d90d20e8d261e88f7a78f204a185232619f vqsr now operates on lod scores in the info field directly, and doesn't adjust the qual field. new format for tranches file uses lod score. old file format no longer supported. log10sumlog10() function, a very useful utility in mathutils. no more extendedpileupelement! robust math calculations in gmm so that no infinities are generated! haplotypescore refactored to enable use of filtered context. not yet enabled... inferredcontext getdouble and getinteger arguments now parse values from strings if necessary 	4388 commit ef2f6d90d20e8d261e88f7a78f204a185232619f vqsr now operates on lod scores in the info field directly, and doesn't adjust the qual field.<br> new format for tranches file uses lod score.<br> old file format no longer supported.<br> log10sumlog10( function, a very useful utility in mathutils.<br> no more extendedpileupelement!<br> robust math calculations in gm so that no infinities are generated!<br> haplotypescore refactored to enable use of filtered context.<br> not yet enabled.<br> inferredcontext getdouble and getinteger arguments now parse values from strings if necessary	3	-2	 4388[0] commit[0] ef2f6d90d20e8d261e88f7a78f204a185232619f[0] vqsr[0] now[0] operates[0] on[0] lod[0] scores[0] in[0] the[0] info[0] field[0] directly[0] and[0] doesn't[0] adjust[0] the[0] qual[0] field[0] [[Sentence=-1,1=word max, 1-5]] new[0] format[0] for[0] tranches[0] file[0] uses[0] lod[0] score[0] [[Sentence=-1,1=word max, 1-5]] old[0] file[0] format[0] no[0] longer[0] supported[1] [[Sentence=-1,2=word max, 1-5]] log10sumlog10[0] function[0] a[0] very[0] useful[1][1 LastWordBoosterStrength] utility[0] in[0] mathutils[0] [[Sentence=-1,3=word max, 1-5]] no[0] more[0] extendedpileupelement[0] [[Sentence=-1,1=word max, 1-5]] robust[0] math[0] calculations[0] in[0] gmm/gm[0] so[0] that[0] no[0] infinities[0] are[0] generated[0] [[Sentence=-1,1=word max, 1-5]] haplotypescore[0] refactored[0] to[0] enable[0] use[0] of[0] filtered[0] context[0] [[Sentence=-1,1=word max, 1-5]] not[0] yet[0] enabled[0] [[Sentence=-1,1=word max, 1-5]] inferredcontext[0] getdouble[0] and[0] getinteger[0] arguments[-1] now[0] parse[0] values[1] from[0] strings[0] if[0] necessary[0] [[Sentence=-2,2=word max, 1-5]][[[3,-2 max of sentences]]]
5364 commit 178cf64a0c817b7d6c75e47ad18432e18e4ae0ec refactored argumentdefinition to absorb functionality from argumentdefinition and argumenttypedescriptor. 	5364 commit 178cf64a0c817b7d6c75e47ad18432e18e4ae0ec refactored argumentdefinition to absorb functionality from argumentdefinition and argumenttypedescriptor.	1	-2	 5364[0] commit[0] 178cf64a0c817b7d6c75e47ad18432e18e4ae0ec[0] refactored[0] argumentdefinition[-1] to[0] absorb[0] functionality[0] from[0] argumentdefinition[-1] and[0] argumenttypedescriptor[-1] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
5511 commit 7b7d3341f00fe9ed47314a58c232b91ba1f56309 trivial refactoring: isfile renamed to isintervalfile and made public 	5511 commit 7b7d3341f00fe9ed47314a58c232b91ba1f56309 trivial refactoring: isfile renamed to isintervalfile and made public	1	-2	 5511[0] commit[0] 7b7d3341f00fe9ed47314a58c232b91ba1f56309[0] trivial[-1] refactoring[0] isfile[0] renamed[0] to[0] isintervalfile[0] and[0] made[0] public[0] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
5558 commit 6eeb1693ca818c96d6e08ffbb79b4bd9940058ea jexl2 upgrade. improvements to jexl processing including dynamically resolving variable -  value bindings instead of up front adding them to a map. performance improvements and code cleanup throughout. 	558 commit 6eeb1693ca818c96d6e08ffbb79b4bd9940058ea jexl2 upgrade.<br> improvements to jexl processing including dynamically resolving variable -  value bindings instead of up front adding them to a map.<br> performance improvements and code cleanup throughout.	2	-1	 5558/558[0] commit[0] 6eeb1693ca818c96d6e08ffbb79b4bd9940058ea[0] jexl2[0] upgrade[0] [[Sentence=-1,1=word max, 1-5]] improvements[1] to[0] jexl[0] processing[0] including[0] dynamically[0] resolving[1] variable[0] value[0] bindings[0] instead[0] of[0] up[0] front[0] adding[0] them[0] to[0] a[0] map[0] [[Sentence=-1,2=word max, 1-5]] performance[0] improvements[1] and[0] code[0] cleanup[0] throughout[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
5675 commit e016491a3db9b6c71e5537b68152c9648d9fee50 major refactoring of depth of coverage to allow for more extensible partitions of data (now can do read group, sample, and library; in any combination; adding more is fairly easy). changed the by-gene code to use clones of stats objects, rather than munging the interval docs. (fix for avinash. who, hilariously, thinks my name is carl.) added sorting methods to ensure static ordering of header and body fields. 	5675 commit e016491a3db9b6c71e5537b68152c9648d9fee50 major refactoring of depth of coverage to allow for more extensible partitions of data (now can do read group, sample, and library; in any combination; adding more is fairly easy)<br> changed the by-gene code to use clones of stats objects, rather than munging the interval docs.<br> (fix for avinash.<br> who, hilariously, thinks my name is carl.<br> added sorting methods to ensure static ordering of header and body fields.	3	-2	 5675[0] commit[0] e016491a3db9b6c71e5537b68152c9648d9fee50[0] major[0] refactoring[0] of[0] depth[0] of[0] coverage[0] to[0] allow[0] for[0] more[0] extensible[0] partitions[-1] of[0] data[0] now[0] can[0] do[0] read[0] group[0] sample[0] and[0] library[0] in[0] any[0] combination[0] adding[0] more[0] is[0] fairly[0] easy[0] [[Sentence=-2,1=word max, 1-5]] changed[0] the[0] by[0] gene[0] code[0] to[0] use[0] clones[0] of[0] stats[0] objects[0] rather[0] than[0] munging[0] the[0] interval[0] docs[0] [[Sentence=-1,1=word max, 1-5]] fix[0] for[0] avinash[0] [[Sentence=-1,1=word max, 1-5]] who[0] hilariously[2] thinks[0] my[0] name[0] is[0] carl[0] [[Sentence=-1,3=word max, 1-5]] added[0] sorting[0] methods[0] to[0] ensure[0] static[0] ordering[0] of[0] header[0] and[0] body[0] fields[0] [[Sentence=-1,1=word max, 1-5]][[[3,-2 max of sentences]]]
5893 commit 8573b0bc6f1ff2e5a99c73ca2541743d79d93eaf refactoring intervals, separating the process of parsing interval lists, sorting and merging interval lists, and creating rods from intervals. this gives doug the ability to keep using our interval list parsing code when sorting intervals on our behalf. 	5893 commit 8573b0bc6f1ff2e5a99c73ca2541743d79d93eaf refactoring intervals, separating the process of parsing interval lists, sorting and merging interval lists, and creating rods from intervals.<br> this gives doug the ability to keep using our interval list parsing code when sorting intervals on our behalf.	1	-1	 5893[0] commit[0] 8573b0bc6f1ff2e5a99c73ca2541743d79d93eaf[0] refactoring[0] intervals[0] separating[0] the[0] process[0] of[0] parsing[0] interval[0] lists[0] sorting[0] and[0] merging[0] interval[0] lists[0] and[0] creating[0] rods[0] from[0] intervals[0] [[Sentence=-1,1=word max, 1-5]] this[0] gives[0] doug[0] the[0] ability[0] to[0] keep[0] using[0] our[0] interval[0] list[0] parsing[0] code[0] when[0] sorting[0] intervals[0] on[0] our[0] behalf[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6130 commit b241e0915b24b6c8744e0b31867717439fa570ee incremental update to variantoptimizer. refactored parts of the clustering code to make it more clear. more comments. 	6130 commit b241e0915b24b6c8744e0b31867717439fa570ee incremental update to variantoptimizer.<br> refactored parts of the clustering code to make it more clear.<br> more comments.	1	-1	 6130[0] commit[0] b241e0915b24b6c8744e0b31867717439fa570ee[0] incremental[0] update[0] to[0] variantoptimizer[0] [[Sentence=-1,1=word max, 1-5]] refactored[0] parts[0] of[0] the[0] clustering[0] code[0] to[0] make[0] it[0] more[0] clear[0] [[Sentence=-1,1=word max, 1-5]] more[0] comments[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6330 commit 956b570c8eba46cf4e6cf8f1f1091a833f90a04b v5 improvements to variantcontext. now fully supports genotypes. filtering enabled. significant tests throughout system. support for rebuilding variant contexts from subsets of genotypes. some code cleanup around repository 	6330 commit 956b570c8eba46cf4e6cf8f1f1091a833f90a04b v5 improvements to variantcontext.<br> now fully supports genotypes.<br> filtering enabled.<br> significant tests throughout system.<br> support for rebuilding variant contexts from subsets of genotypes.<br> some code cleanup around repository	2	-1	 6330[0] commit[0] 956b570c8eba46cf4e6cf8f1f1091a833f90a04b[0] v5[0] improvements[1] to[0] variantcontext[0] [[Sentence=-1,2=word max, 1-5]] now[0] fully[0] supports[1] genotypes[0] [[Sentence=-1,2=word max, 1-5]] filtering[0] enabled[0] [[Sentence=-1,1=word max, 1-5]] significant[0] tests[0] throughout[0] system[0] [[Sentence=-1,1=word max, 1-5]] support[0] for[0] rebuilding[0] variant[0] contexts[0] from[0] subsets[0] of[0] genotypes[0] [[Sentence=-1,1=word max, 1-5]] some[0] code[0] cleanup[0] around[0] repository[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
6583 commit 87e863b48dd45f42ec19ca194474f72a2c0d2627 removed used routines in duputils; duplicatequals to archive; docs for new duplicate traversal code; general code cleanup; bug fixes for combineduplicates; integration tests for combine duplicates walker 	6583 commit 87e863b48dd45f42ec19ca194474f72a2c0d2627 removed used routines in duputils; duplicatequals to archive; docs for new duplicate traversal code; general code cleanup; bug fixes for combineduplicates; integration tests for combine duplicates walker	1	-1	 6583[0] commit[0] 87e863b48dd45f42ec19ca194474f72a2c0d2627[0] removed[0] used[0] routines[0] in[0] duputils[0] duplicatequals[0] to[0] archive[0] docs[0] for[0] new[0] duplicate[0] traversal[0] code[0] general[0] code[0] cleanup[0] bug[0] fixes[0] for[0] combineduplicates[0] integration[0] tests[0] for[0] combine[0] duplicates[0] walker[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6776 commit 08f2214f1463c4efbc2be3439d7ad5f95cef9445 stage 1 of massive variation/genotype refactoring. this stage consists only of the code originating in the genotyper and flowing through to the genotype writers. i haven't finished refactoring the writers and haven't even touched the readers at all. the major changes here are that 1. variations which are backedbygenotypes are now correctly associated with those genotypes 2. genotypes which have an associated variation can actually be associated with it (and then return it when tovariation() is called). the only integration tests which need to be updated are msg-related (because the refactoring now made it easy for me to prevent msg from emitting tri-allelic sites). 	6776 commit 08f2214f1463c4efbc2be3439d7ad5f95cef9445 stage 1 of massive variation/genotype refactoring.<br> this stage consists only of the code originating in the genotyper and flowing through to the genotype writers.<br> i haven't finished refactoring the writers and haven't even touched the readers at all.<br> the major changes here are that 1.<br> variations which are backedbygenotypes are now correctly associated with those genotypes 2.<br> genotypes which have an associated variation can actually be associated with it (and then return it when tovariation( is called)<br> the only integration tests which need to be updated are msg-related (because the refactoring now made it easy for me to prevent msg from emitting tri-allelic sites)	1	-1	 6776[0] commit[0] 08f2214f1463c4efbc2be3439d7ad5f95cef9445[0] stage[0] 1[0] of[0] massive[0] variation/genotype[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]] this[0] stage[0] consists[0] only[0] of[0] the[0] code[0] originating[0] in[0] the[0] genotyper[0] and[0] flowing[0] through[0] to[0] the[0] genotype[0] writers[0] [[Sentence=-1,1=word max, 1-5]] i[0] haven't[0] finished[0] refactoring[0] the[0] writers[0] and[0] haven't[0] even[0] touched[0] the[0] readers[0] at[0] all[0] [[Sentence=-1,1=word max, 1-5]] the[0] major[0] changes[0] here[0] are[0] that[0] 1[0] [[Sentence=-1,1=word max, 1-5]] variations[0] which[0] are[0] backedbygenotypes[0] are[0] now[0] correctly[0] associated[0] with[0] those[0] genotypes[0] 2[0] [[Sentence=-1,1=word max, 1-5]] genotypes[0] which[0] have[0] an[0] associated[0] variation[0] can[0] actually[0] be[0] associated[0] with[0] it[0] and[0] then[0] return[0] it[0] when[0] tovariation[0] is[0] called[0] [[Sentence=-1,1=word max, 1-5]] the[0] only[0] integration[0] tests[0] which[0] need[0] to[0] be[0] updated[0] are[0] msg[0] related[0] because[0] the[0] refactoring[0] now[0] made[0] it[0] easy[0] for[0] me[0] to[0] prevent[0] msg[0] from[0] emitting[0] tri[0] allelic[0] sites[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6978 commit 9fb50e9bd99e6d48648815fbef9e732f26248627 further refactoring so that pooled calling will work. okay, mark, you should be all set. 	6978 commit 9fb50e9bd99e6d48648815fbef9e732f26248627 further refactoring so that pooled calling will work.<br> okay, mark, you should be all set.	1	-1	 6978[0] commit[0] 9fb50e9bd99e6d48648815fbef9e732f26248627[0] further[0] refactoring[0] so[0] that[0] pooled[0] calling[0] will[0] work[0] [[Sentence=-1,1=word max, 1-5]] okay[0] mark[0] you[0] should[0] be[0] all[0] set[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7651 commit a864c2f025a27642d8ecc9ad0a2a67e02352fc0f updated polarized reference priors, need diploidgenotypepriors class that is directly used by the newhotness genotypelikelihoods, more bug fixes and refactoring, etc. 	7651 commit a864c2f025a27642d8ecc9ad0a2a67e02352fc0f updated polarized reference priors, need diploidgenotypepriors class that is directly used by the newhotness genotypelikelihoods, more bug fixes and refactoring, etc.	1	-1	 7651[0] commit[0] a864c2f025a27642d8ecc9ad0a2a67e02352fc0f[0] updated[0] polarized[0] reference[0] priors[0] need[0] diploidgenotypepriors[0] class[0] that[0] is[0] directly[0] used[0] by[0] the[0] newhotness[0] genotypelikelihoods[0] more[0] bug[0] fixes[0] and[0] refactoring[0] etc[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7698 commit 0087234ed72fcf4230002ba2fafb23f503521ce5 small code cleanup, a couple of little changes to ssggenotypecall 	7698 commit 0087234ed72fcf423002ba2fafb23f503521ce5 small code cleanup, a couple of little changes to ssggenotypecall	1	-1	 7698[0] commit[0] 0087234ed72fcf4230002ba2fafb23f503521ce5/0087234ed72fcf423002ba2fafb23f503521ce5[0] small[0] code[0] cleanup[0] a[0] couple[0] of[0] little[0] changes[0] to[0] ssggenotypecall[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7827 commit 9cfd89c54f68102d6923f9f4cfcf348a36588faf a small refactoring, and some documentation cleanup 	7827 commit 9cfd89c54f68102d6923f9f4cfcf348a36588faf a small refactoring, and some documentation cleanup	1	-1	 7827[0] commit[0] 9cfd89c54f68102d6923f9f4cfcf348a36588faf[0] a[0] small[0] refactoring[0] and[0] some[0] documentation[0] cleanup[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7974 commit 9e26550b0d5e08ef89677d53fda6f896965c3121 apprach v2. added python analysis script, so java no longer must be used to analyses quality score data. about to refactor out lots of unneeded code 	7974 commit 9e26550b0d5e08ef89677d53fda6f896965c3121 apprach v2.<br> added python analysis script, so java no longer must be used to analyses quality score data.<br> about to refactor out lots of unneeded code	1	-1	 7974[0] commit[0] 9e26550b0d5e08ef89677d53fda6f896965c3121[0] apprach[0] v2[0] [[Sentence=-1,1=word max, 1-5]] added[0] python[0] analysis[0] script[0] so[0] java[0] no[0] longer[0] must[0] be[0] used[0] to[0] analyses[0] quality[0] score[0] data[0] [[Sentence=-1,1=word max, 1-5]] about[0] to[0] refactor[0] out[0] lots[0] of[0] unneeded[0] code[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8119 commit 819862e04e7475d06a01161cad83e3bda25672c8 major restructuring of generalized variant analysis framework. now trivally easy to add additional analyses. easy partitioning of all analyses by features, such as singleton status. now has transition/transversional bias, counting, dbsnp coverage, hwe violation, selecting of variants by presence/absense in dbs. also restructured the rod system to make it easier to add tracks. also, added the interval track -- if you provide an interval list, then the system autoatmically makese this available to you as a bound rod -- you can always find out where you are in the interval at every site. python scripts improved to handle more merging, etc, into population snps. 	8119 commit 819862e04e7475d06a01161cad83e3bda25672c8 major restructuring of generalized variant analysis framework.<br> now trivally easy to add additional analyses.<br> easy partitioning of all analyses by features, such as singleton status.<br> now has transition/transversional bias, counting, dbsnp coverage, hwe violation, selecting of variants by presence/absense in dbs.<br> also restructured the rod system to make it easier to add tracks.<br> also, added the interval track - if you provide an interval list, then the system autoatmically makese this available to you as a bound rod - you can always find out where you are in the interval at every site.<br> python scripts improved to handle more merging, etc, into population snps.	2	-2	 8119[0] commit[0] 819862e04e7475d06a01161cad83e3bda25672c8[0] major[0] restructuring[0] of[0] generalized[0] variant[0] analysis[0] framework[0] [[Sentence=-1,1=word max, 1-5]] now[0] trivally[0] easy[0] to[0] add[0] additional[0] analyses[0] [[Sentence=-1,1=word max, 1-5]] easy[0] partitioning[-1] of[0] all[0] analyses[0] by[0] features[0] such[0] as[0] singleton[0] status[0] [[Sentence=-2,1=word max, 1-5]] now[0] has[0] transition/transversional[0] bias[0] counting[0] dbsnp[0] coverage[0] hwe[0] violation[0] selecting[0] of[0] variants[0] by[0] presence/absense[0] in[0] dbs[0] [[Sentence=-1,1=word max, 1-5]] also[0] restructured[0] the[0] rod[0] system[0] to[0] make[0] it[0] easier[0] to[0] add[0] tracks[0] [[Sentence=-1,1=word max, 1-5]] also[0] added[0] the[0] interval[0] track[0] if[0] you[0] provide[0] an[0] interval[0] list[0] then[0] the[0] system[0] autoatmically[0] makese[0] this[0] available[0] to[0] you[0] as[0] a[0] bound[0] rod[0] you[0] can[0] always[0] find[0] out[0] where[0] you[0] are[0] in[0] the[0] interval[0] at[0] every[0] site[0] [[Sentence=-1,1=word max, 1-5]] python[0] scripts[0] improved[1] to[0] handle[0] more[0] merging[0] etc[0] into[0] population[0] snps[0] [[Sentence=-1,2=word max, 1-5]][[[2,-2 max of sentences]]]
8757 commit e3ac0cb500504f62136681db0bde456c148a5be4 - a lot of code cleaned up; separated metrics code from allelefrequencymetricswalker into allelemetrics and eliminated the former class. afmw (aside from being a name so long that it warrants an acronym) can now be implemented by passing an option to allelefreqeuncywalker that logs metrics to a file. - allelemetrics and allelemetricrswalker are now ready to take a list of clasess that implement the allelicvariant interface - switched a genome location in allelefrequencyestimate from string to genomeloc which makes way more sense. 	8757 commit e3ac0cb500504f62136681db0bde456c148a5be4 - a lot of code cleaned up; separated metrics code from allelefrequencymetricswalker into allelemetrics and eliminated the former class.<br> afmw (aside from being a name so long that it warrants an acronym) can now be implemented by passing an option to allelefreqeuncywalker that logs metrics to a file.<br> - allelemetrics and allelemetricrswalker are now ready to take a list of clasess that implement the allelicvariant interface - switched a genome location in allelefrequencyestimate from string to genomeloc which makes way more sense.	1	-1	 8757[0] commit[0] e3ac0cb500504f62136681db0bde456c148a5be4[0] a[0] lot[0] of[0] code[0] cleaned[0] up[0] separated[0] metrics[0] code[0] from[0] allelefrequencymetricswalker[0] into[0] allelemetrics[0] and[0] eliminated[0] the[0] former[0] class[0] [[Sentence=-1,1=word max, 1-5]] afmw[0] aside[0] from[0] being[0] a[0] name[0] so[0] long[0] that[0] it[0] warrants[0] an[0] acronym[0] can[0] now[0] be[0] implemented[0] by[0] passing[0] an[0] option[0] to[0] allelefreqeuncywalker[0] that[0] logs[0] metrics[0] to[0] a[0] file[0] [[Sentence=-1,1=word max, 1-5]] allelemetrics[0] and[0] allelemetricrswalker[0] are[0] now[0] ready[0] to[0] take[0] a[0] list[0] of[0] clasess[0] that[0] implement[0] the[0] allelicvariant[0] interface[0] switched[0] a[0] genome[0] location[0] in[0] allelefrequencyestimate[0] from[0] string[0] to[0] genomeloc[0] which[0] makes[0] way[0] more[0] sense[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
