Push Down Method	Translation	Positive	Negative	EmotionRationale
362 commit ffd61f4c1cdbf95dafc14976a375d31cc00e40f9 refactor the pileup element with regards to indels eric reported this bug due to the reduced reads failing with an index out of bounds on what we thought was a deletion, but turned out to be a read starting with insertion. * refactored pileupelement to distinguish clearly between deletions and read starting with insertion * modified extendedeventpileup to correctly distinguish elements with deletion when creating new pileups * refactored most of the lazyloadnextalignment() function of the locusiteratorbystate for clarity and to create clear separation between what is a pileup with a deletion and what's not one. got rid of many useless if statements. * changed the way locusiteratorbystate creates extended event pileups to differentiate between insertions in the beginning of the read and deletions. * every deletion now has an offset (start of the event) * fixed bug when locusiteratorbystate found a read starting with insertion that happened to be a reduced read. * separated the definitions of deletion/insertion (in the beginning of the read) in all ug annotations (and the annotator engine). * pileup depth of coverage for a deleted base will now return the average coverage around the deletion. * indel readpositionranksum test now uses the deletion true offset from the read, changed all appropriate md5's * the extra pileup elements now properly read by the indel mode of the ug made any subsequent call have a different random number and therefore all ranksum tests have slightly different values (in the 10 -3 range). updated all appropriate md5s after extremely careful inspection -- thanks ryan! phew! 	362 commit ffd61f4c1cdbf95dafc14976a375d31cc00e40f9 refactor the pileup element with regards to indels eric reported this bug due to the reduced reads failing with an index out of bounds on what we thought was a deletion, but turned out to be a read starting with insertion.<br> * refactored pileupelement to distinguish clearly between deletions and read starting with insertion * modified extendedeventpileup to correctly distinguish elements with deletion when creating new pileups * refactored most of the lazyloadnextalignment( function of the locusiteratorbystate for clarity and to create clear separation between what is a pileup with a deletion and what's not one.<br> got rid of many useless if statements.<br> * changed the way locusiteratorbystate creates extended event pileups to differentiate between insertions in the beginning of the read and deletions.<br> * every deletion now has an offset (start of the event) * fixed bug when locusiteratorbystate found a read starting with insertion that happened to be a reduced read.<br> * separated the definitions of deletion/insertion (in the beginning of the read) in all ug annotations (and the annotator engine)<br> * pileup depth of coverage for a deleted base will now return the average coverage around the deletion.<br> * indel readpositionranksum test now uses the deletion true offset from the read, changed all appropriate md5's * the extra pileup elements now properly read by the indel mode of the ug made any subsequent call have a different random number and therefore all ranksum tests have slightly different values (in the 10 -3 range)<br> updated all appropriate md5s after extremely careful inspection - thanks ryan!<br> phew!	2	-3	 362[0] commit[0] ffd61f4c1cdbf95dafc14976a375d31cc00e40f9[0] refactor[0] the[0] pileup[0] element[0] with[0] regards[0] to[0] indels[0] eric[0] reported[0] this[0] bug[0] due[0] to[0] the[0] reduced[0] reads[0] failing[0] with[0] an[0] index[0] out[0] of[0] bounds[0] on[0] what[0] we[0] thought[0] was[0] a[0] deletion[0] but[0] turned[0] out[0] to[0] be[0] a[0] read[0] starting[0] with[0] insertion[0] [[Sentence=-1,1=word max, 1-5]] refactored[0] pileupelement[0] to[0] distinguish[0] clearly[0] between[0] deletions[0] and[0] read[0] starting[0] with[0] insertion[0] modified[0] extendedeventpileup[0] to[0] correctly[0] distinguish[0] elements[0] with[0] deletion[0] when[0] creating[0] new[0] pileups[0] refactored[0] most[0] of[0] the[0] lazyloadnextalignment[0] function[0] of[0] the[0] locusiteratorbystate[0] for[0] clarity[0] and[0] to[0] create[0] clear[0] separation[0] between[0] what[0] is[0] a[0] pileup[0] with[0] a[0] deletion[0] and[0] what's[0] not[0] one[0] [[Sentence=-1,1=word max, 1-5]] got[0] rid[-1] of[0] many[0] useless[-2] if[0] statements[0] [[Sentence=-3,1=word max, 1-5]] changed[0] the[0] way[0] locusiteratorbystate[0] creates[0] extended[0] event[0] pileups[0] to[0] differentiate[0] between[0] insertions[0] in[0] the[0] beginning[0] of[0] the[0] read[0] and[0] deletions[0] [[Sentence=-1,1=word max, 1-5]] every[0] deletion[0] now[0] has[0] an[0] offset[0] start[0] of[0] the[0] event[0] fixed[0] bug[0] when[0] locusiteratorbystate[0] found[0] a[0] read[0] starting[0] with[0] insertion[0] that[0] happened[0] to[0] be[0] a[0] reduced[0] read[0] [[Sentence=-1,1=word max, 1-5]] separated[0] the[0] definitions[0] of[0] deletion/insertion[0] in[0] the[0] beginning[0] of[0] the[0] read[0] in[0] all[0] ug[0] annotations[0] and[0] the[0] annotator[0] engine[0] [[Sentence=-1,1=word max, 1-5]] pileup[0] depth[0] of[0] coverage[0] for[0] a[0] deleted[0] base[0] will[0] now[0] return[0] the[0] average[0] coverage[0] around[0] the[0] deletion[0] [[Sentence=-1,1=word max, 1-5]] indel[0] readpositionranksum[0] test[0] now[0] uses[0] the[0] deletion[0] true[1] offset[0] from[0] the[0] read[0] changed[0] all[0] appropriate[0] md5's[0] the[0] extra[0] pileup[0] elements[0] now[0] properly[0] read[0] by[0] the[0] indel[0] mode[0] of[0] the[0] ug[0] made[0] any[0] subsequent[0] call[0] have[0] a[0] different[0] random[0] number[0] and[0] therefore[0] all[0] ranksum[0] tests[0] have[0] slightly[0] different[0] values[1] in[0] the[0] 10[0] -3[0] range[0] [[Sentence=-1,2=word max, 1-5]] updated[0] all[0] appropriate[0] md5s[0] after[0] extremely[0] careful[0] inspection[0] thanks[1] ryan[0] [[Sentence=-1,2=word max, 1-5]] phew[0] [[Sentence=-1,1=word max, 1-5]][[[2,-3 max of sentences]]]
2598 commit d6e2e89f9994f45182071962f3d140a0569dc865 walker test system refactoring. all md5db related functions are now in md5db.java. system has the concept of a local and a global md5 db. the local one is like it operated previously. the global one lives in /humgen/gsa-hpprojects/gatk/data/integrationtests. if the system can find this directory then md5s will also be read / written to this location. this means that gsabamboo will print differences as appropriate. and all users will in effect have access to a complete history of md5 file results. a few minor code reshuffles changed variantrecalibration and vcfheader test files. 	2598 commit d6e2e89f994f45182071962f3d140a0569dc865 walker test system refactoring.<br> all md5db related functions are now in md5db.<br>java.<br> system has the concept of a local and a global md5 db.<br> the local one is like it operated previously.<br> the global one lives in /humgen/gsa-hpprojects/gatk/data/integrationtests.<br> if the system can find this directory then md5s will also be read / written to this location.<br> this means that gsabamboo will print differences as appropriate.<br> and all users will in effect have access to a complete history of md5 file results.<br> a few minor code reshuffles changed variantrecalibration and vcfheader test files.	1	-1	 2598[0] commit[0] d6e2e89f9994f45182071962f3d140a0569dc865/d6e2e89f994f45182071962f3d140a0569dc865[0] walker[0] test[0] system[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]] all[0] md5db[0] related[0] functions[0] are[0] now[0] in[0] md5db[0] [[Sentence=-1,1=word max, 1-5]] java[0] [[Sentence=-1,1=word max, 1-5]] system[0] has[0] the[0] concept[0] of[0] a[0] local[0] and[0] a[0] global[0] md5[0] db[0] [[Sentence=-1,1=word max, 1-5]] the[0] local[0] one[0] is[0] like[0] it[0] operated[0] previously[0] [[Sentence=-1,1=word max, 1-5]] the[0] global[0] one[0] lives[0] in[0] /humgen/gsa[0] hpprojects/gatk/data/integrationtests[0] [[Sentence=-1,1=word max, 1-5]] if[0] the[0] system[0] can[0] find[0] this[0] directory[0] then[0] md5s[0] will[0] also[0] be[0] read[0] /[0] written[0] to[0] this[0] location[0] [[Sentence=-1,1=word max, 1-5]] this[0] means[0] that[0] gsabamboo[0] will[0] print[0] differences[0] as[0] appropriate[0] [[Sentence=-1,1=word max, 1-5]] and[0] all[0] users[0] will[0] in[0] effect[0] have[0] access[0] to[0] a[0] complete[0] history[0] of[0] md5[0] file[0] results[0] [[Sentence=-1,1=word max, 1-5]] a[0] few[0] minor[0] code[0] reshuffles[0] changed[0] variantrecalibration[0] and[0] vcfheader[0] test[0] files[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
