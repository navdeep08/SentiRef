Extract Superclass	Translation	Positive	Negative	EmotionRationale
6131 commit 5411f979ff0e122efe9fd6e09fc200c5b5bb89cb reduce code duplication in the apr connectors (prior to aligning with the async refactoring) 	6131 commit 5411f979ff0e122efe9fd6e09fc200c5b5bb89cb reduce code duplication in the apr connectors (prior to aligning with the async refactoring)	1	-1	 6131[0] commit[0] 5411f979ff0e122efe9fd6e09fc200c5b5bb89cb[0] reduce[0] code[0] duplication[0] in[0] the[0] apr[0] connectors[0] prior[0] to[0] aligning[0] with[0] the[0] async[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8139 commit 2185fbba9dbd4bb2aff8528c31f357029aab7bf8 refactor the bio connector to align it better for async support, this means a "poller" style for timeouts etc. first step is to allow the connector to do keep alive on more connections than we have threads. more changes to follow, good chance that nio and bio can share tons of code 	8139 commit 2185fbba9dbd4bb2aff8528c31f357029ab7bf8 refactor the bio connector to align it better for async support, this means a "poller" style for timeouts etc.<br> first step is to allow the connector to do keep alive on more connections than we have threads.<br> more changes to follow, good chance that nio and bio can share tons of code	2	-1	 8139[0] commit[0] 2185fbba9dbd4bb2aff8528c31f357029aab7bf8/2185fbba9dbd4bb2aff8528c31f357029ab7bf8[0] refactor[0] the[0] bio[0] connector[0] to[0] align[0] it[0] better[0] for[0] async[0] support[0] this[0] means[0] a[0] poller[0] style[0] for[0] timeouts[0] etc[0] [[Sentence=-1,1=word max, 1-5]] first[0] step[0] is[0] to[0] allow[0] the[0] connector[0] to[0] do[0] keep[0] alive[0] on[0] more[0] connections[0] than[0] we[0] have[0] threads[0] [[Sentence=-1,1=word max, 1-5]] more[0] changes[0] to[0] follow[0] good[1] chance[0] that[0] nio[0] and[0] bio[0] can[0] share[0] tons[0] of[0] code[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
8250 commit df0b3fdfb74f13eb29ed3a2596b545e6afddc3a4 first round of refactoring connectors. remove the worker based thread pools enable local or injected executors add in a resizable executors interface to be used in future revisions start abstracting out and using a base class. there was one, deleted, since its not used anywhere 	8250 commit df0b3fdfb74f13eb29ed3a2596b545e6afddc3a4 first round of refactoring connectors.<br> remove the worker based thread pools enable local or injected executors add in a resizable executors interface to be used in future revisions start abstracting out and using a base class.<br> there was one, deleted, since its not used anywhere	1	-1	 8250[0] commit[0] df0b3fdfb74f13eb29ed3a2596b545e6afddc3a4[0] first[0] round[0] of[0] refactoring[0] connectors[0] [[Sentence=-1,1=word max, 1-5]] remove[0] the[0] worker[0] based[0] thread[0] pools[0] enable[0] local[0] or[0] injected[0] executors[0] add[0] in[0] a[0] resizable[0] executors[0] interface[0] to[0] be[0] used[0] in[0] future[0] revisions[0] start[0] abstracting[0] out[0] and[0] using[0] a[0] base[0] class[0] [[Sentence=-1,1=word max, 1-5]] there[0] was[0] one[0] deleted[0] since[0] its[0] not[0] used[0] anywhere[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
