Rename Class	Translation	Positive	Negative	EmotionRationale
2971 commit 421d5a279658a28874e07e668e2f48e31297ae0f refactor restapi to prevent body on get and delete get and delete do not accept a body. refactor the api so the content is supplied as an argument to put() and post() rather than a prior method call, making it clear get() and delete() do not accept a content argument. change-id: i3c6d06e6f128397d1ac802b78b82ee35a2ee5fb9 	2971 commit 421d5a279658a28874e07e668e2f48e31297ae0f refactor restapi to prevent body on get and delete get and delete do not accept a body.<br> refactor the api so the content is supplied as an argument to put( and post( rather than a prior method call, making it clear get( and delete( do not accept a content argument.<br> change-id: i3c6d06e6f128397d1ac802b78b82ee35a2ee5fb9	1	-2	 2971[0] commit[0] 421d5a279658a28874e07e668e2f48e31297ae0f[0] refactor[0] restapi[0] to[0] prevent[0] body[0] on[0] get[0] and[0] delete[0] get[0] and[0] delete[0] do[0] not[0] accept[0] a[0] body[0] [[Sentence=-1,1=word max, 1-5]] refactor[0] the[0] api[0] so[0] the[0] content[0] is[0] supplied[0] as[0] an[0] argument[-1] to[0] put[0] and[0] post[0] rather[0] than[0] a[0] prior[0] method[0] call[0] making[0] it[0] clear[0] get[0] and[0] delete[0] do[0] not[0] accept[0] a[0] content[0] argument[-1] [[Sentence=-2,1=word max, 1-5]] change[0] id[0] i3c6d06e6f128397d1ac802b78b82ee35a2ee5fb9[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
3830 commit b581c998a2555883ae18117785b8c323d9fab129 merge: 7669e78 73c366f merge "refactor row clickhandling into navigationtable" 	3830 commit b581c998a255883ae18117785b8c323d9fab129 merge: 7669e78 73c366f merge "refactor row clickhandling into navigationtable"	1	-1	 3830[0] commit[0] b581c998a2555883ae18117785b8c323d9fab129/b581c998a255883ae18117785b8c323d9fab129[0] merge[0] 7669e78[0] 73c366f[0] merge[0] refactor[0] row[0] clickhandling[0] into[0] navigationtable[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3831 commit 73c366f5b3f9724c0384ff49fc1874feb88c0bd9 refactor row clickhandling into navigationtable several users of navigationtable handle single and double clicks on row, and the rest of the users should. instead of implementing this handling in every subclass, setup a framework to handle them directly in navigationtable and implement a sane default policy to handle them which can easily be overridden. adapt the patchcontenttable classes to override this default behavior. change-id: i2a745f572f3c58117d471959caaee1fa2ed20f06 	3831 commit 73c366f5b3f9724c0384ff49fc1874feb88c0bd9 refactor row clickhandling into navigationtable several users of navigationtable handle single and double clicks on row, and the rest of the users should.<br> instead of implementing this handling in every subclass, setup a framework to handle them directly in navigationtable and implement a sane default policy to handle them which can easily be overridden.<br> adapt the patchcontenttable classes to override this default behavior.<br> change-id: i2a745f572f3c58117d471959caee1fa2ed20f06	1	-2	 3831[0] commit[0] 73c366f5b3f9724c0384ff49fc1874feb88c0bd9[0] refactor[0] row[0] clickhandling[0] into[0] navigationtable[0] several[0] users[0] of[0] navigationtable[0] handle[0] single[0] and[0] double[0] clicks[0] on[0] row[0] and[0] the[0] rest[0] of[0] the[0] users[0] should[0] [[Sentence=-1,1=word max, 1-5]] instead[0] of[0] implementing[0] this[0] handling[0] in[0] every[0] subclass[0] setup[0] a[0] framework[0] to[0] handle[0] them[0] directly[0] in[0] navigationtable[0] and[0] implement[0] a[0] sane[0] default[-1] policy[0] to[0] handle[0] them[0] which[0] can[0] easily[0] be[0] overridden[0] [[Sentence=-2,1=word max, 1-5]] adapt[0] the[0] patchcontenttable[0] classes[0] to[0] override[0] this[0] default[-1] behavior[0] [[Sentence=-2,1=word max, 1-5]] change[0] id[0] i2a745f572f3c58117d471959caaee1fa2ed20f06/i2a745f572f3c58117d471959caee1fa2ed20f06[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
5023 commit 619a8defc1e06732e057de10b7736c16a48b7316 merge: 1438102 b61aff0 merge "refactor commentedchangeactiondialog to be more reusable" 	5023 commit 619a8defc1e06732e057de10b7736c16a48b7316 merge: 1438102 b61aff0 merge "refactor commentedchangeactiondialog to be more reusable"	1	-1	 5023[0] commit[0] 619a8defc1e06732e057de10b7736c16a48b7316[0] merge[0] 1438102[0] b61aff0[0] merge[0] refactor[0] commentedchangeactiondialog[0] to[0] be[0] more[0] reusable[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5051 commit b61aff0702f703c74e81ee1326c0f0a215665877 refactor commentedchangeactiondialog to be more reusable this dialog was refactored out originally to be used by the revert command, then it got used by the restore command. the dialog became a bit messy with way too many arguments to the constructor and some fields which were only used once. this change reduces some of the dialog's functionality in favor of allowing differentiation to be done via extending the class instead. this change also chooses a few more common defaults for the dialog making it a bit less cumbersome to setup. and finally, since the dialog is a bit more generic and no longer tied to a change, the file is moved from the change package to the ui package. change-id: ic6deabadf4aa983c6632517168fead93623e66f7 	5051 commit b61aff0702f703c74e81ee1326c0f0a215665877 refactor commentedchangeactiondialog to be more reusable this dialog was refactored out originally to be used by the revert command, then it got used by the restore command.<br> the dialog became a bit messy with way too many arguments to the constructor and some fields which were only used once.<br> this change reduces some of the dialog's functionality in favor of allowing differentiation to be done via extending the class instead.<br> this change also chooses a few more common defaults for the dialog making it a bit less cumbersome to setup.<br> and finally, since the dialog is a bit more generic and no longer tied to a change, the file is moved from the change package to the ui package.<br> change-id: ic6deabadf4a983c6632517168fead93623e66f7	2	-2	 5051[0] commit[0] b61aff0702f703c74e81ee1326c0f0a215665877[0] refactor[0] commentedchangeactiondialog[0] to[0] be[0] more[0] reusable[0] this[0] dialog[0] was[0] refactored[0] out[0] originally[0] to[0] be[0] used[0] by[0] the[0] revert[0] command[0] then[0] it[0] got[0] used[0] by[0] the[0] restore[0] command[0] [[Sentence=-1,1=word max, 1-5]] the[0] dialog[0] became[0] a[0] bit[0] messy[0] with[0] way[0] too[0] many[0] arguments[-1] to[0] the[0] constructor[0] and[0] some[0] fields[0] which[0] were[0] only[0] used[0] once[0] [[Sentence=-2,1=word max, 1-5]] this[0] change[0] reduces[0] some[0] of[0] the[0] dialog's[0] functionality[0] in[0] favor[1] of[0] allowing[0] differentiation[0] to[0] be[0] done[0] via[0] extending[0] the[0] class[0] instead[0] [[Sentence=-1,2=word max, 1-5]] this[0] change[0] also[0] chooses[0] a[0] few[0] more[0] common[0] defaults[0] for[0] the[0] dialog[0] making[0] it[0] a[0] bit[0] less[0] cumbersome[-1] to[0] setup[0] [[Sentence=-2,1=word max, 1-5]] and[0] finally[0] since[0] the[0] dialog[0] is[0] a[0] bit[0] more[0] generic[0] and[0] no[0] longer[0] tied[0] to[0] a[0] change[0] the[0] file[0] is[0] moved[0] from[0] the[0] change[0] package[0] to[0] the[0] ui[0] package[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] ic6deabadf4aa983c6632517168fead93623e66f7/ic6deabadf4a983c6632517168fead93623e66f7[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
5222 commit 97e1bb6479e03529d0396c0c0b798a49eebf8a38 merge: 93cf32d 7fc6c3e merge "refactor abandonchange code into gerrit-server" 	522 commit 97e1bb6479e03529d0396c0c0b798a49eebf8a38 merge: 93cf32d 7fc6c3e merge "refactor abandonchange code into gerrit-server"	1	-2	 5222/522[0] commit[0] 97e1bb6479e03529d0396c0c0b798a49eebf8a38[0] merge[0] 93cf32d[0] 7fc6c3e[0] merge[0] refactor[0] abandonchange[-1] code[0] into[0] gerrit[0] server[0] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
5223 commit 7fc6c3e584f78e8349eeb68faffc0f5749fb5f02 refactor abandonchange code into gerrit-server while most of the logic for abandonchange was already in gerrit-server in changeutil, this change moves it into it's own class. using a reviewresult will allow us to perform one of several related review actions when responding to an ssh/rpc request and then handle the result (or more specifically, the errors associated with it) in a single block of code. change-id: icb70f2edbb4968a2cc43e78eba71f16f7f93d6e4 	5223 commit 7fc6c3e584f78e8349eeb68faffc0f5749fb5f02 refactor abandonchange code into gerrit-server while most of the logic for abandonchange was already in gerrit-server in changeutil, this change moves it into it's own class.<br> using a reviewresult will allow us to perform one of several related review actions when responding to an ssh/rpc request and then handle the result (or more specifically, the errors associated with it) in a single block of code.<br> change-id: icb70f2edbb4968a2cc43e78eba71f16f7f93d6e4	1	-2	 5223[0] commit[0] 7fc6c3e584f78e8349eeb68faffc0f5749fb5f02[0] refactor[0] abandonchange[-1] code[0] into[0] gerrit[0] server[0] while[0] most[0] of[0] the[0] logic[0] for[0] abandonchange[-1] was[0] already[0] in[0] gerrit[0] server[0] in[0] changeutil[0] this[0] change[0] moves[0] it[0] into[0] it's[0] own[0] class[0] [[Sentence=-2,1=word max, 1-5]] using[0] a[0] reviewresult[0] will[0] allow[0] us[0] to[0] perform[0] one[0] of[0] several[0] related[0] review[0] actions[0] when[0] responding[0] to[0] an[0] ssh/rpc[0] request[0] and[0] then[0] handle[0] the[0] result[0] or[0] more[0] specifically[0] the[0] errors[0] associated[0] with[0] it[0] in[0] a[0] single[0] block[0] of[0] code[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] icb70f2edbb4968a2cc43e78eba71f16f7f93d6e4[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
5334 commit 298afc1766c9b37f6351ed212cb2452274eeeaef use custom error messages for git-over-http ensure clients see messages related to contributor agreement not being activated even if they push over http. these used to be put into the server error log, but the new gitsmarthttptools class in jgit allows formatting it directly to the client. refactor other things like the server-level receive and upload controls to also report a custom error message that matches with the ssh version of the same code. change-id: idd35853198fcb3103ebb099bab185c0620573e0f 	5334 commit 298afc1766c9b37f6351ed212cb2452274eeaef use custom error messages for git-over-http ensure clients see messages related to contributor agreement not being activated even if they push over http.<br> these used to be put into the server error log, but the new gitsmarthttptools class in jgit allows formatting it directly to the client.<br> refactor other things like the server-level receive and upload controls to also report a custom error message that matches with the ssh version of the same code.<br> change-id: idd35853198fcb3103ebb099bab185c0620573e0f	1	-1	 5334[0] commit[0] 298afc1766c9b37f6351ed212cb2452274eeeaef/298afc1766c9b37f6351ed212cb2452274eeaef[0] use[0] custom[0] error[0] messages[0] for[0] git[0] over[0] http[0] ensure[0] clients[0] see[0] messages[0] related[0] to[0] contributor[0] agreement[0] not[0] being[0] activated[0] even[0] if[0] they[0] push[0] over[0] http[0] [[Sentence=-1,1=word max, 1-5]] these[0] used[0] to[0] be[0] put[0] into[0] the[0] server[0] error[0] log[0] but[0] the[0] new[0] gitsmarthttptools[0] class[0] in[0] jgit[0] allows[0] formatting[0] it[0] directly[0] to[0] the[0] client[0] [[Sentence=-1,1=word max, 1-5]] refactor[0] other[0] things[0] like[0] the[0] server[0] level[0] receive[0] and[0] upload[0] controls[0] to[0] also[0] report[0] a[0] custom[0] error[0] message[0] that[0] matches[0] with[0] the[0] ssh[0] version[0] of[0] the[0] same[0] code[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] idd35853198fcb3103ebb099bab185c0620573e0f[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5367 commit 8033dc204fbc3bf37a30bcf74063b3b636135459 merge: fb8a4a5 d5e04ac merge "refactor groupmembersfactory" 	5367 commit 8033dc204fbc3bf37a30bcf74063b3b636135459 merge: fb8a4a5 d5e04ac merge "refactor groupmembersfactory"	1	-1	 5367[0] commit[0] 8033dc204fbc3bf37a30bcf74063b3b636135459[0] merge[0] fb8a4a5[0] d5e04ac[0] merge[0] refactor[0] groupmembersfactory[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5404 commit d5e04ace6a44dc64a70309811665254a18559462 refactor groupmembersfactory refactor groupmembersfactory so that it can be reused and extended for a new ssh command to list group members. change-id: i4d6a15eaf65928d738e958d9558f7c23cc4add7b signed-off-by: edwin kempin  edwin.kempin@sap.com  	5404 commit d5e04ace6a44dc64a70309811665254a18559462 refactor groupmembersfactory refactor groupmembersfactory so that it can be reused and extended for a new ssh command to list group members.<br> change-id: i4d6a15eaf65928d738e958d9558f7c23cc4add7b signed-off-by: edwin kempin  edwin.<br>kempin@sap.<br>com 	1	-1	 5404[0] commit[0] d5e04ace6a44dc64a70309811665254a18559462[0] refactor[0] groupmembersfactory[0] refactor[0] groupmembersfactory[0] so[0] that[0] it[0] can[0] be[0] reused[0] and[0] extended[0] for[0] a[0] new[0] ssh[0] command[0] to[0] list[0] group[0] members[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i4d6a15eaf65928d738e958d9558f7c23cc4add7b[0] signed[0] off[0] by[0] edwin[0] kempin[0] edwin[0] [[Sentence=-1,1=word max, 1-5]] kempin@sap[0] [[Sentence=-1,1=word max, 1-5]] com[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6132 commit f9b89eedc10c620ecfd3e5ac705b08547ab4eb89 merge: 46d492f fff6b5d merge changes ie8a3ae1f,i7f97aa1e * changes: refactor class mywatchestable out of mywatchedprojectsscreen refactor widget creation in watch ui into a separate function 	6132 commit f9b89eedc10c620ecfd3e5ac705b08547ab4eb89 merge: 46d492f ff6b5d merge changes ie8a3ae1f,i7f97a1e * changes: refactor class mywatchestable out of mywatchedprojectsscreen refactor widget creation in watch ui into a separate function	1	-1	 6132[0] commit[0] f9b89eedc10c620ecfd3e5ac705b08547ab4eb89[0] merge[0] 46d492f[0] fff6b5d/ff6b5d[0] merge[0] changes[0] ie8a3ae1f[0] i7f97aa1e/i7f97a1e[0] changes[0] refactor[0] class[0] mywatchestable[0] out[0] of[0] mywatchedprojectsscreen[0] refactor[0] widget[0] creation[0] in[0] watch[0] ui[0] into[0] a[0] separate[0] function[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6149 commit fff6b5d6eb47a17fa9df301524d408d4f41baed7 refactor class mywatchestable out of mywatchedprojectsscreen refactor out the table class from the file mywatchedprojectsscreen into its own file: mywatchestable. this makes the coupling between the table and the panel more clear and isolates the internal table logic better. change-id: ie8a3ae1f3986ec533316d62ab8b4796431688de5 	6149 commit ff6b5d6eb47a17fa9df301524d408d4f41baed7 refactor class mywatchestable out of mywatchedprojectsscreen refactor out the table class from the file mywatchedprojectsscreen into its own file: mywatchestable.<br> this makes the coupling between the table and the panel more clear and isolates the internal table logic better.<br> change-id: ie8a3ae1f3986ec53316d62ab8b4796431688de5	1	-2	 6149[0] commit[0] fff6b5d6eb47a17fa9df301524d408d4f41baed7/ff6b5d6eb47a17fa9df301524d408d4f41baed7[0] refactor[0] class[0] mywatchestable[0] out[0] of[0] mywatchedprojectsscreen[0] refactor[0] out[0] the[0] table[0] class[0] from[0] the[0] file[0] mywatchedprojectsscreen[0] into[0] its[0] own[0] file[0] mywatchestable[0] [[Sentence=-1,1=word max, 1-5]] this[0] makes[0] the[0] coupling[0] between[0] the[0] table[0] and[0] the[0] panel[0] more[0] clear[0] and[0] isolates[-1] the[0] internal[0] table[0] logic[0] better[0] [[Sentence=-2,1=word max, 1-5]] change[0] id[0] ie8a3ae1f3986ec533316d62ab8b4796431688de5/ie8a3ae1f3986ec53316d62ab8b4796431688de5[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
6344 commit 270c5941d41db707ce8d5ca3f2504b7d498795a1 move project and settings tabs to left side instead of using a gwt tabpanel to show the project and settings tabs, move them onto the left as part of a vertically stacked menu. this just looks cleaner, and helps us to avoid ultra wide windows in the settings area as the number of tabs keeps increasing. while we are doing the ui refactoring, make each section proper top level screen objects. this makes it far easier to ensure the data is loaded in the background before the ui gets displayed, which removes some of the display jitter you see as you navigate to a section. this also nicely fixes some table ui layout glitches that were caused by the tabpanel forcing our content width to 100% even though we didn't want that. change-id: i5da0dadddc2746206852a0873d6014051bd9f6dc signed-off-by: shawn o. pearce  sop@google.com  	6344 commit 270c5941d41db707ce8d5ca3f2504b7d498795a1 move project and settings tabs to left side instead of using a gwt tabpanel to show the project and settings tabs, move them onto the left as part of a vertically stacked menu.<br> this just looks cleaner, and helps us to avoid ultra wide windows in the settings area as the number of tabs keeps increasing.<br> while we are doing the ui refactoring, make each section proper top level screen objects.<br> this makes it far easier to ensure the data is loaded in the background before the ui gets displayed, which removes some of the display jitter you see as you navigate to a section.<br> this also nicely fixes some table ui layout glitches that were caused by the tabpanel forcing our content width to 100% even though we didn't want that.<br> change-id: i5da0daddc2746206852a0873d6014051bd9f6dc signed-off-by: shawn o.<br> pearce  sop@google.<br>com 	2	-2	 6344[0] commit[0] 270c5941d41db707ce8d5ca3f2504b7d498795a1[0] move[0] project[0] and[0] settings[0] tabs[0] to[0] left[0] side[0] instead[0] of[0] using[0] a[0] gwt[0] tabpanel[0] to[0] show[0] the[0] project[0] and[0] settings[0] tabs[0] move[0] them[0] onto[0] the[0] left[0] as[0] part[0] of[0] a[0] vertically[0] stacked[0] menu[0] [[Sentence=-1,1=word max, 1-5]] this[0] just[0] looks[0] cleaner[0] and[0] helps[0] us[0] to[0] avoid[-1] ultra[0] wide[0] windows[0] in[0] the[0] settings[0] area[0] as[0] the[0] number[0] of[0] tabs[0] keeps[0] increasing[0] [[Sentence=-2,1=word max, 1-5]] while[0] we[0] are[0] doing[0] the[0] ui[0] refactoring[0] make[0] each[0] section[0] proper[0] top[0] level[0] screen[0] objects[0] [[Sentence=-1,1=word max, 1-5]] this[0] makes[0] it[0] far[0] easier[0] to[0] ensure[0] the[0] data[0] is[0] loaded[0] in[0] the[0] background[0] before[0] the[0] ui[0] gets[0] displayed[0] which[0] removes[0] some[0] of[0] the[0] display[0] jitter[0] you[0] see[0] as[0] you[0] navigate[0] to[0] a[0] section[0] [[Sentence=-1,1=word max, 1-5]] this[0] also[0] nicely[1] fixes[0] some[0] table[0] ui[0] layout[0] glitches[0] that[0] were[0] caused[0] by[0] the[0] tabpanel[0] forcing[0] our[0] content[0] width[0] to[0] 100%[0] even[0] though[0] we[0] didn't[0] want[0] that[0] [[Sentence=-1,2=word max, 1-5]] change[0] id[0] i5da0dadddc2746206852a0873d6014051bd9f6dc/i5da0daddc2746206852a0873d6014051bd9f6dc[0] signed[0] off[0] by[0] shawn[0] o[0] [[Sentence=-1,1=word max, 1-5]] pearce[0] sop@google[0] [[Sentence=-1,1=word max, 1-5]] com[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
6978 commit 44671f5c6929a8f05223dd359182610286ceb98a rewrite our build as modular maven components this refactoring splits the code up into different components, with their own per-component classpath. by moving all of our classes into isolated components we can better isolate the classpaths and try to avoid unexpected dependency problems. it also allows us to more clearly define which components are used by the gwt ui and thus must be compiled under gwt, and which components are run on the server and can therefore use more of the j2se api. change-id: i833cc22bacc5655d1c9099ed7c2b0e0a5b08855a signed-off-by: shawn o. pearce  sop@google.com  	6978 commit 44671f5c6929a8f05223dd359182610286ceb98a rewrite our build as modular maven components this refactoring splits the code up into different components, with their own per-component classpath.<br> by moving all of our classes into isolated components we can better isolate the classpaths and try to avoid unexpected dependency problems.<br> it also allows us to more clearly define which components are used by the gwt ui and thus must be compiled under gwt, and which components are run on the server and can therefore use more of the j2se api.<br> change-id: i833cc22bacc5655d1c9099ed7c2b0e0a5b08855a signed-off-by: shawn o.<br> pearce  sop@google.<br>com 	1	-2	 6978[0] commit[0] 44671f5c6929a8f05223dd359182610286ceb98a[0] rewrite[0] our[0] build[0] as[0] modular[0] maven[0] components[0] this[0] refactoring[0] splits[0] the[0] code[0] up[0] into[0] different[0] components[0] with[0] their[0] own[0] per[0] component[0] classpath[0] [[Sentence=-1,1=word max, 1-5]] by[0] moving[0] all[0] of[0] our[0] classes[0] into[0] isolated[-1] components[0] we[0] can[0] better[0] isolate[-1] the[0] classpaths[0] and[0] try[0] to[0] avoid[-1] unexpected[0] dependency[0] problems[-1] [[Sentence=-2,1=word max, 1-5]] it[0] also[0] allows[0] us[0] to[0] more[0] clearly[0] define[0] which[0] components[0] are[0] used[0] by[0] the[0] gwt[0] ui[0] and[0] thus[0] must[0] be[0] compiled[0] under[0] gwt[0] and[0] which[0] components[0] are[0] run[0] on[0] the[0] server[0] and[0] can[0] therefore[0] use[0] more[0] of[0] the[0] j2se[0] api[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i833cc22bacc5655d1c9099ed7c2b0e0a5b08855a[0] signed[0] off[0] by[0] shawn[0] o[0] [[Sentence=-1,1=word max, 1-5]] pearce[0] sop@google[0] [[Sentence=-1,1=word max, 1-5]] com[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
7109 commit fd00f1f678f952f1ad0ff8d15e49f0b8c7e81d65 renamed gerritservert to gitrepositorymanager and moved it to git package. after all refactorings that happened gerritserver has been reduced to class that simply manages (opens and closes) git repositories. therefore it makes sense to change its name and package that represents its purpose. apart from, removed some arguments to constructor (dependencies) which were never used. change-id: i1ca63b928013bc07220cc70adbd774856bd07bb4 signed-off-by: grzegorz kossakowski  grek@google.com  	7109 commit fd00f1f678f952f1ad0ff8d15e49f0b8c7e81d65 renamed gerritservert to gitrepositorymanager and moved it to git package.<br> after all refactorings that happened gerritserver has been reduced to class that simply manages (opens and closes) git repositories.<br> therefore it makes sense to change its name and package that represents its purpose.<br> apart from, removed some arguments to constructor (dependencies) which were never used.<br> change-id: i1ca63b928013bc07220cc70adbd774856bd07bb4 signed-off-by: grzegorz kossakowski  grek@google.<br>com 	1	-1	 7109[0] commit[0] fd00f1f678f952f1ad0ff8d15e49f0b8c7e81d65[0] renamed[0] gerritservert[0] to[0] gitrepositorymanager[0] and[0] moved[0] it[0] to[0] git[0] package[0] [[Sentence=-1,1=word max, 1-5]] after[0] all[0] refactorings[0] that[0] happened[0] gerritserver[0] has[0] been[0] reduced[0] to[0] class[0] that[0] simply[0] manages[0] opens[0] and[0] closes[0] git[0] repositories[0] [[Sentence=-1,1=word max, 1-5]] therefore[0] it[0] makes[0] sense[0] to[0] change[0] its[0] name[0] and[0] package[0] that[0] represents[0] its[0] purpose[0] [[Sentence=-1,1=word max, 1-5]] apart[0] from[0] removed[0] some[0] arguments[-1][--1 LastWordBoosterStrength] to[0] constructor[0] dependencies[0] which[0] were[0] never[0] used[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i1ca63b928013bc07220cc70adbd774856bd07bb4[0] signed[0] off[0] by[0] grzegorz[0] kossakowski[0] grek@google[0] [[Sentence=-1,1=word max, 1-5]] com[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7376 commit 22483737d884889532ee9c0bce928da8b7b901aa refactor ssh command permission checks to use currentuser this is a step in the direction of whacking the static decision logic used by baseserviceimplementation and making it based on the project and current user concepts instead. signed-off-by: shawn o. pearce  sop@google.com  	7376 commit 22483737d884889532ee9c0bce928da8b7b901a refactor ssh command permission checks to use currentuser this is a step in the direction of whacking the static decision logic used by baseserviceimplementation and making it based on the project and current user concepts instead.<br> signed-off-by: shawn o.<br> pearce  sop@google.<br>com 	1	-1	 7376[0] commit[0] 22483737d884889532ee9c0bce928da8b7b901aa/22483737d884889532ee9c0bce928da8b7b901a[0] refactor[0] ssh[0] command[0] permission[0] checks[0] to[0] use[0] currentuser[0] this[0] is[0] a[0] step[0] in[0] the[0] direction[0] of[0] whacking[0] the[0] static[0] decision[0] logic[0] used[0] by[0] baseserviceimplementation[0] and[0] making[0] it[0] based[0] on[0] the[0] project[0] and[0] current[0] user[0] concepts[0] instead[0] [[Sentence=-1,1=word max, 1-5]] signed[0] off[0] by[0] shawn[0] o[0] [[Sentence=-1,1=word max, 1-5]] pearce[0] sop@google[0] [[Sentence=-1,1=word max, 1-5]] com[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8323 commit 9a2a97d6aa5fb9dfaed1a0870e0bdaa38ff803a5 refactor the entire login panel to avoid reloading the module its significantly faster if the open id login panel is part of the same application, and simply inserts itself into the sign in dialog rather than loading through a separate html host page. we also now remember (at the user's option) the last openid url the user successfully logged in with, so it can be presented in future sign-in attempts. this helps in case the user forgets which provider they have used, or which account at that provider. signed-off-by: shawn o. pearce  sop@google.com  	8323 commit 9a2a97d6a5fb9dfaed1a0870e0bda38ff803a5 refactor the entire login panel to avoid reloading the module its significantly faster if the open id login panel is part of the same application, and simply inserts itself into the sign in dialog rather than loading through a separate html host page.<br> we also now remember (at the user's option) the last openid url the user successfully logged in with, so it can be presented in future sign-in attempts.<br> this helps in case the user forgets which provider they have used, or which account at that provider.<br> signed-off-by: shawn o.<br> pearce  sop@google.<br>com 	2	-2	 8323[0] commit[0] 9a2a97d6aa5fb9dfaed1a0870e0bdaa38ff803a5/9a2a97d6a5fb9dfaed1a0870e0bda38ff803a5[0][+0.6 MultipleLetters] refactor[0] the[0] entire[0] login[0] panel[0] to[0] avoid[-1] reloading[0] the[0] module[0] its[0] significantly[0] faster[0] if[0] the[0] open[0] id[0] login[0] panel[0] is[0] part[0] of[0] the[0] same[0] application[0] and[0] simply[0] inserts[0] itself[0] into[0] the[0] sign[0] in[0] dialog[0] rather[0] than[0] loading[0] through[0] a[0] separate[0] html[0] host[0] page[0] [[Sentence=-2,2=word max, 1-5]] we[0] also[0] now[0] remember[0] at[0] the[0] user's[0] option[0] the[0] last[0] openid[0] url[0] the[0] user[0] successfully[0] logged[0] in[0] with[0] so[0] it[0] can[0] be[0] presented[0] in[0] future[0] sign[0] in[0] attempts[0] [[Sentence=-1,1=word max, 1-5]] this[0] helps[0] in[0] case[0] the[0] user[0] forgets[0] which[0] provider[0] they[0] have[0] used[0] or[0] which[0] account[0] at[0] that[0] provider[0] [[Sentence=-1,1=word max, 1-5]] signed[0] off[0] by[0] shawn[0] o[0] [[Sentence=-1,1=word max, 1-5]] pearce[0] sop@google[0] [[Sentence=-1,1=word max, 1-5]] com[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
