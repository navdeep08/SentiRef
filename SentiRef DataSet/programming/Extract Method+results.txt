Extract Method	Translation	Positive	Negative	EmotionRationale
648 commit 9a9ad781cbd4b63df3abfbdc24a47979ec6e6e00 refactor - operations which construct messages from raw byte sequences should not throw illegalargumentexception to mark their failure. it could happen that the the raw byte sequences are corrupted messages received from the network. a more appropriate failure signal would be an exception which extends ioexception - call it malformedmessageexception. signed-off-by: clement mathieu  cmathieu@activeeon.com  	648 commit 9a9ad781cbd4b63df3abfbdc24a47979ec6e6e00 refactor - operations which construct messages from raw byte sequences should not throw illegalargumentexception to mark their failure.<br> it could happen that the the raw byte sequences are corrupted messages received from the network.<br> a more appropriate failure signal would be an exception which extends ioexception - call it malformedmessageexception.<br> signed-off-by: clement mathieu  cmathieu@activeeon.<br>com 	1	-1	 648[0] commit[0] 9a9ad781cbd4b63df3abfbdc24a47979ec6e6e00[0] refactor[0] operations[0] which[0] construct[0] messages[0] from[0] raw[0] byte[0] sequences[0] should[0] not[0] throw[0] illegalargumentexception[0] to[0] mark[0] their[0] failure[0] [[Sentence=-1,1=word max, 1-5]] it[0] could[0] happen[0] that[0] the[0] the[0] raw[0] byte[0] sequences[0] are[0] corrupted[0] messages[0] received[0] from[0] the[0] network[0] [[Sentence=-1,1=word max, 1-5]] a[0] more[0] appropriate[0] failure[0] signal[0] would[0] be[0] an[0] exception[0] which[0] extends[0] ioexception[0] call[0] it[0] malformedmessageexception[0] [[Sentence=-1,1=word max, 1-5]] signed[0] off[0] by[0] clement[0] mathieu[0] cmathieu@activeeon[0] [[Sentence=-1,1=word max, 1-5]] com[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
1627 commit 0037412efaeca142fd197629c3c16baa5df0c153 jmxmonitoring ic2d : - fixed migration bug with connections - monitor/stop monitor action now works properly - internal refactoring to enable lock-free access to hostobject#explore() - comments and clean ups 	1627 commit 0037412efaeca142fd197629c3c16ba5df0c153 jmxmonitoring ic2d : - fixed migration bug with connections - monitor/stop monitor action now works properly - internal refactoring to enable lock-free access to hostobject#explore( - comments and clean ups	1	-1	 1627[0] commit[0] 0037412efaeca142fd197629c3c16baa5df0c153/0037412efaeca142fd197629c3c16ba5df0c153[0] jmxmonitoring[0] ic2d[0] fixed[0] migration[0] bug[0] with[0] connections[0] monitor/stop[0] monitor[0] action[0] now[0] works[0] properly[0] internal[0] refactoring[0] to[0] enable[0] lock[0] free[0] access[0] to[0] hostobject#explore[0] comments[0] and[0] clean[0] ups[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3850 commit e4fcabe586ade4dfbb829d8c9dc1e39d65a17914 adding library for javadb (derby.jar and derbytools.jar) adding emptyschedulerdb refactoring createdatabase refactoring due to commit #6674 modifying abstractschedulerdb in getinstance method, if the database doesn't exists, the method will return a new instance of emptyschedulerdb 	3850 commit e4fcabe586ade4dfbb829d8c9dc1e39d65a17914 adding library for javadb (derby.<br>jar and derbytools.<br>jar) adding emptyschedulerdb refactoring createdatabase refactoring due to commit #6674 modifying abstractschedulerdb in getinstance method, if the database doesn't exists, the method will return a new instance of emptyschedulerdb	1	-1	 3850[0] commit[0] e4fcabe586ade4dfbb829d8c9dc1e39d65a17914[0] adding[0] library[0] for[0] javadb[0] derby[0] [[Sentence=-1,1=word max, 1-5]] jar[0] and[0] derbytools[0] [[Sentence=-1,1=word max, 1-5]] jar[0] adding[0] emptyschedulerdb[0] refactoring[0] createdatabase[0] refactoring[0] due[0] to[0] commit[0] #6674[0] modifying[0] abstractschedulerdb[0] in[0] getinstance[0] method[0] if[0] the[0] database[0] doesn't[0] exists[0] the[0] method[0] will[0] return[0] a[0] new[0] instance[0] of[0] emptyschedulerdb[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4594 commit 178df8d0d6c7b81f8b7f4c06de2900c57c454543 restore the behaviour as of before the refactoring in #4466. introduce an internalwaitforrequest() that does not check the queue before waiting (edge-triggered). 	4594 commit 178df8d0d6c7b81f8b7f4c06de2900c57c454543 restore the behaviour as of before the refactoring in #4466.<br> introduce an internalwaitforrequest( that does not check the queue before waiting (edge-triggered)	1	-1	 4594[0] commit[0] 178df8d0d6c7b81f8b7f4c06de2900c57c454543[0] restore[0] the[0] behaviour[0] as[0] of[0] before[0] the[0] refactoring[0] in[0] #4466[0] [[Sentence=-1,1=word max, 1-5]] introduce[0] an[0] internalwaitforrequest[0] that[0] does[0] not[0] check[0] the[0] queue[0] before[0] waiting[0] edge[0] triggered[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5362 commit 12ccbfa1e8dd0d2b0dadf6f6a6d37ff8810de847 refactoring duplicate code into runtimeregisteredperform. 	5362 commit 12ccbfa1e8dd0d2b0dadf6f6a6d37ff8810de847 refactoring duplicate code into runtimeregisteredperform.	1	-1	 5362[0] commit[0] 12ccbfa1e8dd0d2b0dadf6f6a6d37ff8810de847[0] refactoring[0] duplicate[0] code[0] into[0] runtimeregisteredperform[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5847 commit e9f2b59a91fe3c62b4111c3910aedbb2a12b3e46 removed todos and fixmes. more little bug fixing. refactored host discovery to nameandhostdialog. 	5847 commit e9f2b59a91fe3c62b411c3910aedbb2a12b3e46 removed todos and fixmes.<br> more little bug fixing.<br> refactored host discovery to nameandhostdialog.	1	-1	 5847[0] commit[0] e9f2b59a91fe3c62b4111c3910aedbb2a12b3e46/e9f2b59a91fe3c62b411c3910aedbb2a12b3e46[0] removed[0] todos[0] and[0] fixmes[0] [[Sentence=-1,1=word max, 1-5]] more[0] little[0] bug[0] fixing[0] [[Sentence=-1,1=word max, 1-5]] refactored[0] host[0] discovery[0] to[0] nameandhostdialog[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5849 commit feb205e44ad808bcfe2f33002933567d2fddf0c3 code cleanup. dispatcher lookup improved. bug fixed (user refresh after migration), thanks marc. 	5849 commit feb205e44ad808bcfe2f33002933567d2fddf0c3 code cleanup.<br> dispatcher lookup improved.<br> bug fixed (user refresh after migration) thanks marc.	2	-1	 5849[0] commit[0] feb205e44ad808bcfe2f33002933567d2fddf0c3[0] code[0] cleanup[0] [[Sentence=-1,1=word max, 1-5]] dispatcher[0] lookup[0] improved[1] [[Sentence=-1,2=word max, 1-5]] bug[0] fixed[0] user[0] refresh[0] after[0] migration[0] thanks[1] marc[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
6290 commit 06b560655759a706264e4e30bfa21b9d16e467dc javadoc update   code cleanup 	6290 commit 06b560655759a706264e4e30bfa21b9d16e467dc javadoc update   code cleanup	1	-1	 6290[0] commit[0] 06b560655759a706264e4e30bfa21b9d16e467dc[0] javadoc[0] update[0] code[0] cleanup[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6693 commit afaa122600459b8efad830b16a9fd410144f7e5b refactor some code. 	6693 commit afa122600459b8efad830b16a9fd410144f7e5b refactor some code.	1	-1	 6693[0] commit[0] afaa122600459b8efad830b16a9fd410144f7e5b/afa122600459b8efad830b16a9fd410144f7e5b[0] refactor[0] some[0] code[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7837 commit b475849ebb08a9de0c6597f110c281acd27f4aef major cleanup, and some refactoring 	7837 commit b475849ebb08a9de0c6597f110c281acd27f4aef major cleanup, and some refactoring	1	-1	 7837[0] commit[0] b475849ebb08a9de0c6597f110c281acd27f4aef[0] major[0] cleanup[0] and[0] some[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8232 commit 4cac7884c49da34059a0c7f792c672676ef81844 method to kill nodes ,vn, runtime added . urls refactored 	8232 commit 4cac7884c49da34059a0c7f792c672676ef81844 method to kill nodes ,vn, runtime added .<br> urls refactored	1	-1	 8232[0] commit[0] 4cac7884c49da34059a0c7f792c672676ef81844[0] method[0] to[0] kill[0] nodes[0] vn[0] runtime[0] added[0] [[Sentence=-1,1=word max, 1-5]] urls[0] refactored[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
