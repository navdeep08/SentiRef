Move Class	Translation	Positive	Negative	EmotionRationale
698 commit 908753734919c32cc5d4b538fea68f45c1eaf31f reorganize sdklib.repository packages. this splits the sdklib repository in 3 sub-packages for archives, packages and sources. there are a lot of files moved around but its just a move refactoring and the only thing changes are imports and a few methods made public. change-id: i6ce0e872ac7afea2a6a4eb70ee7bbad0c04b6678 	698 commit 908753734919c32cc5d4b538fea68f45c1eaf31f reorganize sdklib.<br>repository packages.<br> this splits the sdklib repository in 3 sub-packages for archives, packages and sources.<br> there are a lot of files moved around but its just a move refactoring and the only thing changes are imports and a few methods made public.<br> change-id: i6ce0e872ac7afea2a6a4eb70ee7bbad0c04b6678	1	-2	 698[0] commit[0] 908753734919c32cc5d4b538fea68f45c1eaf31f[0] reorganize[0] sdklib[0] [[Sentence=-1,1=word max, 1-5]] repository[0] packages[0] [[Sentence=-1,1=word max, 1-5]] this[0] splits[0] the[0] sdklib[0] repository[0] in[0] 3[0] sub[0] packages[0] for[0] archives[0] packages[0] and[0] sources[-1] [[Sentence=-2,1=word max, 1-5]] there[0] are[0] a[0] lot[0] of[0] files[0] moved[0] around[0] but[0] its[0] just[0] a[0] move[0] refactoring[0] and[0] the[0] only[0] thing[0] changes[0] are[0] imports[0] and[0] a[0] few[0] methods[0] made[0] public[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i6ce0e872ac7afea2a6a4eb70ee7bbad0c04b6678[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
1063 commit 35803ee3b4362248489db1dd1fc6d483f3c3ee65 more fixes to the test projects. - add eclipse files for a bunch of them - package name refactoring to match the folder structure somehow (more need this) - updated the javaproject to have an extra java project and to have code that access java resources to test packaging too. change-id: ie13842c1b891e495e04d8a157a12cac9db13f30e 	1063 commit 35803ee3b4362248489db1dd1fc6d483f3c3ee65 more fixes to the test projects.<br> - add eclipse files for a bunch of them - package name refactoring to match the folder structure somehow (more need this) - updated the javaproject to have an extra java project and to have code that access java resources to test packaging too.<br> change-id: ie13842c1b891e495e04d8a157a12cac9db13f30e	1	-1	 1063[0] commit[0] 35803ee3b4362248489db1dd1fc6d483f3c3ee65[0] more[0] fixes[0] to[0] the[0] test[0] projects[0] [[Sentence=-1,1=word max, 1-5]] add[0] eclipse[0] files[0] for[0] a[0] bunch[0] of[0] them[0] package[0] name[0] refactoring[0] to[0] match[0] the[0] folder[0] structure[0] somehow[0] more[0] need[0] this[0] updated[0] the[0] javaproject[0] to[0] have[0] an[0] extra[0] java[0] project[0] and[0] to[0] have[0] code[0] that[0] access[0] java[0] resources[0] to[0] test[0] packaging[0] too[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] ie13842c1b891e495e04d8a157a12cac9db13f30e[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
1335 commit d6124a176326169bc87cb29823ca2dc906689680 a few simple name changes this changeset contains no semantic changes, just a couple of simple refactorings: (1) rename the "lint" class to "lintdriver". "lint" is a bit generic (there's already lintclient for example), and this object was already referred to as a driver from various other api's, such as context.getdriver(). (2) rename lintrunner in eclipse to eclipselintrunner, similar to the other eclipselintclient in the same package - and to avoid confusion with lintdriver. (3) move all the lint fix inner classes inside the lintfix class out as top level classes. the class was getting really large and there's really no good reason to keep all the individual fixes as inner classes; there's already a separate lint package for them. change-id: ifc0004bfb38f8e11e33e9ddc477b6cf07ca319f2 	1335 commit d6124a176326169bc87cb29823ca2dc906689680 a few simple name changes this changeset contains no semantic changes, just a couple of simple refactorings: (1) rename the "lint" class to "lintdriver"<br> "lint" is a bit generic (there's already lintclient for example) and this object was already referred to as a driver from various other api's, such as context.<br>getdriver(<br> (2) rename lintrunner in eclipse to eclipselintrunner, similar to the other eclipselintclient in the same package - and to avoid confusion with lintdriver.<br> (3) move all the lint fix inner classes inside the lintfix class out as top level classes.<br> the class was getting really large and there's really no good reason to keep all the individual fixes as inner classes; there's already a separate lint package for them.<br> change-id: ifc004bfb38f8e11e33e9ddc477b6cf07ca319f2	2	-2	 1335[0] commit[0] d6124a176326169bc87cb29823ca2dc906689680[0] a[0] few[0] simple[0] name[0] changes[0] this[0] changeset[0] contains[0] no[0] semantic[0] changes[0] just[0] a[0] couple[0] of[0] simple[0] refactorings[0] (1[0] rename[0] the[0] lint[0] class[0] to[0] lintdriver[0] [[Sentence=-1,1=word max, 1-5]] lint[0] is[0] a[0] bit[0] generic[0] there's[0] already[0] lintclient[0] for[0] example[0] and[0] this[0] object[0] was[0] already[0] referred[0] to[0] as[0] a[0] driver[0] from[0] various[0] other[0] api's[0] such[0] as[0] context[0] [[Sentence=-1,1=word max, 1-5]] getdriver[0] [[Sentence=-1,1=word max, 1-5]] (2[0] rename[0] lintrunner[0] in[0] eclipse[0] to[0] eclipselintrunner[0] similar[0] to[0] the[0] other[0] eclipselintclient[0] in[0] the[0] same[0] package[0] and[0] to[0] avoid[-1] confusion[-1] with[0] lintdriver[0] [[Sentence=-2,1=word max, 1-5]] (3[0] move[0] all[0] the[0] lint[0] fix[0] inner[0] classes[0] inside[0] the[0] lintfix[0] class[0] out[0] as[0] top[0] level[0] classes[0] [[Sentence=-1,1=word max, 1-5]] the[0] class[0] was[0] getting[0] really[0] large[0] and[0] there's[0] really[0] no[0] good[1] reason[0] to[0] keep[0] all[0] the[0] individual[0] fixes[0] as[0] inner[0] classes[0] there's[0] already[0] a[0] separate[0] lint[0] package[0] for[0] them[0] [[Sentence=-1,2=word max, 1-5]] change[0] id[0] ifc0004bfb38f8e11e33e9ddc477b6cf07ca319f2/ifc004bfb38f8e11e33e9ddc477b6cf07ca319f2[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
1475 commit 822f9455a9443da388572be16b48bc02f10b5047 merge: 942e457 734d947 merge "adt: refactor commonxmleditor in its own package." 	1475 commit 822f9455a9443da388572be16b48bc02f10b5047 merge: 942e457 734d947 merge "adt: refactor commonxmleditor in its own package.	1	-1	 1475[0] commit[0] 822f9455a9443da388572be16b48bc02f10b5047[0] merge[0] 942e457[0] 734d947[0] merge[0] adt[0] refactor[0] commonxmleditor[0] in[0] its[0] own[0] package[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
1476 commit 942e45774dac5f3ca8735c979d5627117e28cfea merge: 1864a92 bc08339 merge "adt: refactor editors.xml and editors.resources." 	1476 commit 942e45774dac5f3ca8735c979d5627117e28cfea merge: 1864a92 bc08339 merge "adt: refactor editors.<br>xml and editors.<br>resources.	1	-1	 1476[0] commit[0] 942e45774dac5f3ca8735c979d5627117e28cfea[0] merge[0] 1864a92[0] bc08339[0] merge[0] adt[0] refactor[0] editors[0] [[Sentence=-1,1=word max, 1-5]] xml[0] and[0] editors[0] [[Sentence=-1,1=word max, 1-5]] resources[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
1482 commit 734d947687f3f3a761f404dbb0bf3dfe8f3f5843 adt: refactor commonxmleditor in its own package. change-id: i0ee61ade9ea15335268fa313b74d9a949ecb189f 	1482 commit 734d947687f3f3a761f404dbb0bf3dfe8f3f5843 adt: refactor commonxmleditor in its own package.<br> change-id: i0ee61ade9ea15335268fa313b74d9a949ecb189f	1	-1	 1482[0] commit[0] 734d947687f3f3a761f404dbb0bf3dfe8f3f5843[0] adt[0] refactor[0] commonxmleditor[0] in[0] its[0] own[0] package[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i0ee61ade9ea15335268fa313b74d9a949ecb189f[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
1483 commit bc083393e77f8139a436683644065e396646d671 adt: refactor editors.xml and editors.resources. this renames: - xml.xmleditor to otherxml.otherxmleditor, - resources.resourceseditor to values.valueseditor the change to rename resources to values matches the folder name being /res/values. that's just a trivial refactoring with no logic change. change-id: i68bfa760f254fbbd3f2d5e3801a5092308e92f7f 	1483 commit bc083393e77f8139a436683644065e396646d671 adt: refactor editors.<br>xml and editors.<br>resources.<br> this renames: - xml.<br>xmleditor to otherxml.<br>otherxmleditor, - resources.<br>resourceseditor to values.<br>valueseditor the change to rename resources to values matches the folder name being /res/values.<br> that's just a trivial refactoring with no logic change.<br> change-id: i68bfa760f254fbbd3f2d5e3801a5092308e92f7f	2	-2	 1483[0] commit[0] bc083393e77f8139a436683644065e396646d671[0] adt[0] refactor[0] editors[0] [[Sentence=-1,1=word max, 1-5]] xml[0] and[0] editors[0] [[Sentence=-1,1=word max, 1-5]] resources[0] [[Sentence=-1,1=word max, 1-5]] this[0] renames[0] xml[0] [[Sentence=-1,1=word max, 1-5]] xmleditor[0] to[0] otherxml[0] [[Sentence=-1,1=word max, 1-5]] otherxmleditor[0] resources[0] [[Sentence=-1,1=word max, 1-5]] resourceseditor[0] to[0] values[1] [[Sentence=-1,2=word max, 1-5]] valueseditor[0] the[0] change[0] to[0] rename[0] resources[0] to[0] values[1] matches[0] the[0] folder[0] name[0] being[0] /res/values[0] [[Sentence=-1,2=word max, 1-5]] that's[0] just[0] a[0] trivial[-1] refactoring[0] with[0] no[0] logic[0] change[0] [[Sentence=-2,1=word max, 1-5]] change[0] id[0] i68bfa760f254fbbd3f2d5e3801a5092308e92f7f[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
1581 commit 581ca2e75fd638f6e95570ac54ff9e6b7b7cde84 extract positional xml parser into common and fix encoding issues the xml dom parser used by the lint cli driver (which tracks positions) is needed outside of lint, so pull it out of the lint/cli project, and refactor it such that it does not directly reference the lint position apis (but can utilize them when subclassed in lint). in addition, handle non-utf-8 file encodings. xml files can be encoded in other character sets, and can specify this via the encoding attribute in the xml prologue. until now, the cli lint runner would just read the xml file contents in using the default encoding and parse this. now there's a new utility method which takes a byte[] and infers the desired encoding and uses that to convert the byte[] into a string using the correct encoding. (we can't just pass an inputstream and let the sax parser handle this on its own because the xml parser needs to access the character stream in order to assign correct node offsets.) this code now also handles the byte order mark more cleanly. there are some new unit tests too to check the new encoding, bom and offset handling. change-id: ib0badbbe72172e3408c6d5af2413be51280a7724 	1581 commit 581ca2e75fd638f6e95570ac54ff9e6b7b7cde84 extract positional xml parser into common and fix encoding issues the xml dom parser used by the lint cli driver (which tracks positions) is needed outside of lint, so pull it out of the lint/cli project, and refactor it such that it does not directly reference the lint position apis (but can utilize them when subclassed in lint)<br> in addition, handle non-utf-8 file encodings.<br> xml files can be encoded in other character sets, and can specify this via the encoding attribute in the xml prologue.<br> until now, the cli lint runner would just read the xml file contents in using the default encoding and parse this.<br> now there's a new utility method which takes a byte[] and infers the desired encoding and uses that to convert the byte[] into a string using the correct encoding.<br> (we can't just pass an inputstream and let the sax parser handle this on its own because the xml parser needs to access the character stream in order to assign correct node offsets.<br> this code now also handles the byte order mark more cleanly.<br> there are some new unit tests too to check the new encoding, bom and offset handling.<br> change-id: ib0badbbe72172e3408c6d5af2413be51280a7724	1	-2	 1581[0] commit[0] 581ca2e75fd638f6e95570ac54ff9e6b7b7cde84[0] extract[0] positional[0] xml[0] parser[0] into[0] common[0] and[0] fix[0] encoding[0] issues[0] the[0] xml[0] dom[0] parser[0] used[0] by[0] the[0] lint[0] cli[0] driver[0] which[0] tracks[0] positions[0] is[0] needed[0] outside[0] of[0] lint[0] so[0] pull[0] it[0] out[0] of[0] the[0] lint/cli[0] project[0] and[0] refactor[0] it[0] such[0] that[0] it[0] does[0] not[0] directly[0] reference[0] the[0] lint[0] position[0] apis[0] but[0] can[0] utilize[0] them[0] when[0] subclassed[0] in[0] lint[0] [[Sentence=-1,1=word max, 1-5]] in[0] addition[0] handle[0] non[0] utf[0] -8[0] file[0] encodings[0] [[Sentence=-1,1=word max, 1-5]] xml[0] files[0] can[0] be[0] encoded[0] in[0] other[0] character[0] sets[0] and[0] can[0] specify[0] this[0] via[0] the[0] encoding[0] attribute[0] in[0] the[0] xml[0] prologue[0] [[Sentence=-1,1=word max, 1-5]] until[0] now[0] the[0] cli[0] lint[0] runner[0] would[0] just[0] read[0] the[0] xml[0] file[0] contents[0] in[0] using[0] the[0] default[-1] encoding[0] and[0] parse[0] this[0] [[Sentence=-2,1=word max, 1-5]] now[0] there's[0] a[0] new[0] utility[0] method[0] which[0] takes[0] a[0] byte[][0] and[0] infers[0] the[0] desired[0] encoding[0] and[0] uses[0] that[0] to[0] convert[0] the[0] byte[][0] into[0] a[0] string[0] using[0] the[0] correct[0] encoding[0] [[Sentence=-1,1=word max, 1-5]] we[0] can't[0] just[0] pass[0] an[0] inputstream[0] and[0] let[0] the[0] sax[0] parser[0] handle[0] this[0] on[0] its[0] own[0] because[0] the[0] xml[0] parser[0] needs[0] to[0] access[0] the[0] character[0] stream[0] in[0] order[0] to[0] assign[0] correct[0] node[0] offsets[0] [[Sentence=-1,1=word max, 1-5]] this[0] code[0] now[0] also[0] handles[0] the[0] byte[0] order[0] mark[0] more[0] cleanly[0] [[Sentence=-1,1=word max, 1-5]] there[0] are[0] some[0] new[0] unit[0] tests[0] too[0] to[0] check[0] the[0] new[0] encoding[0] bom[0] and[0] offset[0] handling[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] ib0badbbe72172e3408c6d5af2413be51280a7724[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
3081 commit a1fbe916c2642ccc71762f9dd9b77e1e12a87900 merge: 3d411c5 e8793fd merge "sdk manager: refactor classes for manager 1 versus 2." 	3081 commit a1fbe916c2642cc71762f9dd9b77e1e12a87900 merge: 3d411c5 e8793fd merge "sdk manager: refactor classes for manager 1 versus 2.	1	-1	 3081[0] commit[0] a1fbe916c2642ccc71762f9dd9b77e1e12a87900/a1fbe916c2642cc71762f9dd9b77e1e12a87900[0] merge[0] 3d411c5[0] e8793fd[0] merge[0] sdk[0] manager[0] refactor[0] classes[0] for[0] manager[0] 1[0] versus[0] 2[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3087 commit 52b554f195bbd9e6ee82b4a5c1cc3c7f4347523b split packagespage and packageloader inner classes. packagespage and packageloader have quite a number of inner classes. this splits them in separate package-protected classes, making the page source a tad shorter. this is a pure refactoring move/rename. no logic is modified. change-id: i88885aed40e34bd28de4b1ea4e1de66ea2ed89b8 	3087 commit 52b554f195bbd9e6ee82b4a5c1cc3c7f4347523b split packagespage and packageloader inner classes.<br> packagespage and packageloader have quite a number of inner classes.<br> this splits them in separate package-protected classes, making the page source a tad shorter.<br> this is a pure refactoring move/rename.<br> no logic is modified.<br> change-id: i885aed40e34bd28de4b1ea4e1de66ea2ed89b8	2	-2	 3087[0] commit[0] 52b554f195bbd9e6ee82b4a5c1cc3c7f4347523b[0] split[0] packagespage[0] and[0] packageloader[0] inner[0] classes[0] [[Sentence=-1,1=word max, 1-5]] packagespage[0] and[0] packageloader[0] have[0] quite[0] a[0] number[0] of[0] inner[0] classes[0] [[Sentence=-1,1=word max, 1-5]] this[0] splits[0] them[0] in[0] separate[0] package[0] protected[0] classes[0] making[0] the[0] page[0] source[-1] a[0] tad[0] shorter[0] [[Sentence=-2,1=word max, 1-5]] this[0] is[0] a[0] pure[0] refactoring[0] move/rename[0] [[Sentence=-1,1=word max, 1-5]] no[0] logic[0] is[0] modified[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i88885aed40e34bd28de4b1ea4e1de66ea2ed89b8/i885aed40e34bd28de4b1ea4e1de66ea2ed89b8[0][+0.6 MultipleLetters] [[Sentence=-1,2=word max, 1-5]][[[2,-2 max of sentences]]]
3088 commit e8793fdb6dcb917c26b09e6352624eb3bcaf3ce5 sdk manager: refactor classes for manager 1 versus 2. this moves sdk manager 1 versus 2 classes in different packages, ..repository.sdkman1 versus ..repository.sdkman2. there is no change to any actual logic. only edits to fix imports and make some classes public. change-id: ia5ea2ef55fb6913816b27d81c496434d80a00c58 	3088 commit e8793fdb6dcb917c26b09e6352624eb3bcaf3ce5 sdk manager: refactor classes for manager 1 versus 2.<br> this moves sdk manager 1 versus 2 classes in different packages, .<br>repository.<br>sdkman1 versus .<br>repository.<br>sdkman2.<br> there is no change to any actual logic.<br> only edits to fix imports and make some classes public.<br> change-id: ia5ea2ef55fb6913816b27d81c496434d80a00c58	1	-1	 3088[0] commit[0] e8793fdb6dcb917c26b09e6352624eb3bcaf3ce5[0] sdk[0] manager[0] refactor[0] classes[0] for[0] manager[0] 1[0] versus[0] 2[0] [[Sentence=-1,1=word max, 1-5]] this[0] moves[0] sdk[0] manager[0] 1[0] versus[0] 2[0] classes[0] in[0] different[0] packages[0] [[Sentence=-1,1=word max, 1-5]] repository[0] [[Sentence=-1,1=word max, 1-5]] sdkman1[0] versus[0] [[Sentence=-1,1=word max, 1-5]] repository[0] [[Sentence=-1,1=word max, 1-5]] sdkman2[0] [[Sentence=-1,1=word max, 1-5]] there[0] is[0] no[0] change[0] to[0] any[0] actual[0] logic[0] [[Sentence=-1,1=word max, 1-5]] only[0] edits[0] to[0] fix[0] imports[0] and[0] make[0] some[0] classes[0] public[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] ia5ea2ef55fb6913816b27d81c496434d80a00c58[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3235 commit 122ed4977a42719239e501fc522592994267bd9d sdkmanager: fix issue with double-packages on reload. rewrote the merge in place   sort of packages by api. did some refactoring   added some unit tests. change-id: i168b306853185866606ed76c324a8db6051b15bb 	3235 commit 122ed4977a42719239e501fc522592994267bd9d sdkmanager: fix issue with double-packages on reload.<br> rewrote the merge in place   sort of packages by api.<br> did some refactoring   added some unit tests.<br> change-id: i168b30685318586606ed76c324a8db6051b15bb	1	-1	 3235[0] commit[0] 122ed4977a42719239e501fc522592994267bd9d[0] sdkmanager[0] fix[0] issue[0] with[0] double[0] packages[0] on[0] reload[0] [[Sentence=-1,1=word max, 1-5]] rewrote[0] the[0] merge[0] in[0] place[0] sort[0] of[0] packages[0] by[0] api[0] [[Sentence=-1,1=word max, 1-5]] did[0] some[0] refactoring[0] added[0] some[0] unit[0] tests[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i168b306853185866606ed76c324a8db6051b15bb/i168b30685318586606ed76c324a8db6051b15bb[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3302 commit 890caaaa39b983b44a528e96da046a402dff39d5 merge: c233709 8c09f35 merge "refactored monkeyrunner to use chimpchat" 	3302 commit 890ca39b983b44a528e96da046a402dff39d5 merge: c233709 8c09f35 merge "refactored monkeyrunner to use chimpchat"	2	-1	 3302[0] commit[0] 890caaaa39b983b44a528e96da046a402dff39d5/890ca39b983b44a528e96da046a402dff39d5[0][+0.6 MultipleLetters] merge[0] c233709[0] 8c09f35[0] merge[0] refactored[0] monkeyrunner[0] to[0] use[0] chimpchat[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
3325 commit 8c09f35fe02c38c18f8f7b9e0a531d6ac158476e refactored monkeyrunner to use chimpchat change-id: icbe5bcb066021d578faae43aa49b58ab1595870b 	3325 commit 8c09f35fe02c38c18f8f7b9e0a531d6ac158476e refactored monkeyrunner to use chimpchat change-id: icbe5bcb066021d578fae43a49b58ab1595870b	2	-1	 3325[0] commit[0] 8c09f35fe02c38c18f8f7b9e0a531d6ac158476e[0] refactored[0] monkeyrunner[0] to[0] use[0] chimpchat[0] change[0] id[0] icbe5bcb066021d578faae43aa49b58ab1595870b/icbe5bcb066021d578fae43a49b58ab1595870b[0][+0.6 MultipleLetters] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
3772 commit 9920695ea25aec4589d28c88f8874c86a6e908af separate monkeyrunner core logic refactored the monkeyrunner code to separate core logic from the jython wrapper. the core logic is now usable directly from java w/o the pollution from jython. the existing monkeyrunner classes are now just a thin and dumb wrapper atop the core. change-id: i6ef18ea92e0e9284c1fde949b4efb0e2e7170e57 	3772 commit 9920695ea25aec4589d28c88f8874c86a6e908af separate monkeyrunner core logic refactored the monkeyrunner code to separate core logic from the jython wrapper.<br> the core logic is now usable directly from java w/o the pollution from jython.<br> the existing monkeyrunner classes are now just a thin and dumb wrapper atop the core.<br> change-id: i6ef18ea92e0e9284c1fde949b4efb0e2e7170e57	1	-2	 3772[0] commit[0] 9920695ea25aec4589d28c88f8874c86a6e908af[0] separate[0] monkeyrunner[0] core[0] logic[0] refactored[0] the[0] monkeyrunner[0] code[0] to[0] separate[0] core[0] logic[0] from[0] the[0] jython[0] wrapper[0] [[Sentence=-1,1=word max, 1-5]] the[0] core[0] logic[0] is[0] now[0] usable[0] directly[0] from[0] java[0] w/o[0] the[0] pollution[-1] from[0] jython[0] [[Sentence=-2,1=word max, 1-5]] the[0] existing[0] monkeyrunner[0] classes[0] are[0] now[0] just[0] a[0] thin[0] and[0] dumb[-1] wrapper[0] atop[0] the[0] core[0] [[Sentence=-2,1=word max, 1-5]] change[0] id[0] i6ef18ea92e0e9284c1fde949b4efb0e2e7170e57[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
3933 commit 7016ca24cca083efa9570fcc4b53fe696eaad937 merge: 56cabf8 65e36c2 merge "fix unit tests from the previous refactor." 	3933 commit 7016ca24cca083efa9570fcc4b53fe696ead937 merge: 56cabf8 65e36c2 merge "fix unit tests from the previous refactor.	1	-1	 3933[0] commit[0] 7016ca24cca083efa9570fcc4b53fe696eaad937/7016ca24cca083efa9570fcc4b53fe696ead937[0] merge[0] 56cabf8[0] 65e36c2[0] merge[0] fix[0] unit[0] tests[0] from[0] the[0] previous[0] refactor[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3940 commit 65e36c24654b47f4fc314566d2883582fc2708ba fix unit tests from the previous refactor. change-id: i464fe3f94e701e619b474f82aaf84ee04d158e71 	3940 commit 65e36c24654b47f4fc314566d2883582fc2708ba fix unit tests from the previous refactor.<br> change-id: i464fe3f94e701e619b474f82af84ee04d158e71	1	-1	 3940[0] commit[0] 65e36c24654b47f4fc314566d2883582fc2708ba[0] fix[0] unit[0] tests[0] from[0] the[0] previous[0] refactor[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i464fe3f94e701e619b474f82aaf84ee04d158e71/i464fe3f94e701e619b474f82af84ee04d158e71[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3983 commit 5e4103bba9ff1b8a0faaee7fb70504ca515d796b merge: 403096e 86be31d merge "a bit more refactoring around the resource repository." 	3983 commit 5e4103bba9ff1b8a0faee7fb70504ca515d796b merge: 403096e 86be31d merge "a bit more refactoring around the resource repository.	1	-1	 3983[0] commit[0] 5e4103bba9ff1b8a0faaee7fb70504ca515d796b/5e4103bba9ff1b8a0faee7fb70504ca515d796b[0] merge[0] 403096e[0] 86be31d[0] merge[0] a[0] bit[0] more[0] refactoring[0] around[0] the[0] resource[0] repository[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
3984 commit 86be31dde602ef2af040a73940849d0c66c9991f a bit more refactoring around the resource repository. - move configurable in the same package as folderconfiguration. - move resourcemanager.getconfig in folderconfiguration. - move resourcemaanger.processfolder in resourcerepository. - move resourcemanager.processfile in resourcefolder. - rename some misc methods. change-id: ifa557c7db22c3fb82327a68f4365c08d152d9cf4 	3984 commit 86be31dde602ef2af040a73940849d0c66c991f a bit more refactoring around the resource repository.<br> - move configurable in the same package as folderconfiguration.<br> - move resourcemanager.<br>getconfig in folderconfiguration.<br> - move resourcemanger.<br>processfolder in resourcerepository.<br> - move resourcemanager.<br>processfile in resourcefolder.<br> - rename some misc methods.<br> change-id: ifa557c7db22c3fb82327a68f4365c08d152d9cf4	1	-1	 3984[0] commit[0] 86be31dde602ef2af040a73940849d0c66c9991f/86be31dde602ef2af040a73940849d0c66c991f[0] a[0] bit[0] more[0] refactoring[0] around[0] the[0] resource[0] repository[0] [[Sentence=-1,1=word max, 1-5]] move[0] configurable[0] in[0] the[0] same[0] package[0] as[0] folderconfiguration[0] [[Sentence=-1,1=word max, 1-5]] move[0] resourcemanager[0] [[Sentence=-1,1=word max, 1-5]] getconfig[0] in[0] folderconfiguration[0] [[Sentence=-1,1=word max, 1-5]] move[0] resourcemaanger/resourcemanger[0] [[Sentence=-1,1=word max, 1-5]] processfolder[0] in[0] resourcerepository[0] [[Sentence=-1,1=word max, 1-5]] move[0] resourcemanager[0] [[Sentence=-1,1=word max, 1-5]] processfile[0] in[0] resourcefolder[0] [[Sentence=-1,1=word max, 1-5]] rename[0] some[0] misc[0] methods[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] ifa557c7db22c3fb82327a68f4365c08d152d9cf4[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4633 commit 18284d7b4da35a990268f51cdab0abc3a8e6e061 merge: 77e0fde 95b17a5 merge "layoutlib api refactoring" 	4633 commit 18284d7b4da35a990268f51cdab0abc3a8e6e061 merge: 77e0fde 95b17a5 merge "layoutlib api refactoring"	1	-1	 4633[0] commit[0] 18284d7b4da35a990268f51cdab0abc3a8e6e061[0] merge[0] 77e0fde[0] 95b17a5[0] merge[0] layoutlib[0] api[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4634 commit 95b17a5e62eeeb7b38ef668508df43a1ee9e0880 layoutlib api refactoring change-id: i40abba4c4f786755c2a1c0e70df4d7bc08e2bcde 	4634 commit 95b17a5e62eeb7b38ef668508df43a1ee9e0880 layoutlib api refactoring change-id: i40abba4c4f786755c2a1c0e70df4d7bc08e2bcde	1	-1	 4634[0] commit[0] 95b17a5e62eeeb7b38ef668508df43a1ee9e0880/95b17a5e62eeb7b38ef668508df43a1ee9e0880[0] layoutlib[0] api[0] refactoring[0] change[0] id[0] i40abba4c4f786755c2a1c0e70df4d7bc08e2bcde[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4879 commit 681d85054670b922fcc311246eb1d2b5254b7584 adt: cleanup renamepackage action. move it to the refactoring package. split action code from refactoring code. no change in functionality nor invocation (via context menu project   android tools.) change-id: ieec945b37fdd33d497bf745d207eb5d6b5445d9f 	4879 commit 681d85054670b922fcc311246eb1d2b5254b7584 adt: cleanup renamepackage action.<br> move it to the refactoring package.<br> split action code from refactoring code.<br> no change in functionality nor invocation (via context menu project   android tools.<br> change-id: ieec945b37fdd33d497bf745d207eb5d6b5445d9f	1	-1	 4879[0] commit[0] 681d85054670b922fcc311246eb1d2b5254b7584[0] adt[0] cleanup[0] renamepackage[0] action[0] [[Sentence=-1,1=word max, 1-5]] move[0] it[0] to[0] the[0] refactoring[0] package[0] [[Sentence=-1,1=word max, 1-5]] split[0] action[0] code[0] from[0] refactoring[0] code[0] [[Sentence=-1,1=word max, 1-5]] no[0] change[0] in[0] functionality[0] nor[0] invocation[0] via[0] context[0] menu[0] project[0] android[0] tools[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] ieec945b37fdd33d497bf745d207eb5d6b5445d9f[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
4970 commit f85ad3e3e3f3686d0bdaa3177ed10348cf72375e adt: extract attrsxmlparser in com.android.ide.common this is a pure-refactoring cl that moves attrsxmlparser into an ide.common.resources.platform package. in a next cl, the parser should be cleanup to remove some references to external classes (e.g. adtplugin is only used for logging so it will become an ilog reference.) the goal of the resources.platform package is to allow other ides to parse the manifest schema. an utility class would be provided here that would then be used by androidtargetparser. the rest of the data parsing (widgets, resources, etc.) is a non-goal. maybe later. change-id: i4fb8eb5d168b75ef8bfab57d0b2883aea85b6167 	4970 commit f85ad3e3e3f3686d0bda3177ed10348cf72375e adt: extract attrsxmlparser in com.<br>android.<br>ide.<br>common this is a pure-refactoring cl that moves attrsxmlparser into an ide.<br>common.<br>resources.<br>platform package.<br> in a next cl, the parser should be cleanup to remove some references to external classes (e.<br>grin�.<br> adtplugin is only used for logging so it will become an ilog reference.<br> the goal of the resources.<br>platform package is to allow other ides to parse the manifest schema.<br> an utility class would be provided here that would then be used by androidtargetparser.<br> the rest of the data parsing (widgets, resources, etc.<br> is a non-goal.<br> maybe later.<br> change-id: i4fb8eb5d168b75ef8bfab57d0b2883aea85b6167	1	-1	 4970[0] commit[0] f85ad3e3e3f3686d0bdaa3177ed10348cf72375e/f85ad3e3e3f3686d0bda3177ed10348cf72375e[0] adt[0] extract[0] attrsxmlparser[0] in[0] com[0] [[Sentence=-1,1=word max, 1-5]] android[0] [[Sentence=-1,1=word max, 1-5]] ide[0] [[Sentence=-1,1=word max, 1-5]] common[0] this[0] is[0] a[0] pure[0] refactoring[0] cl[0] that[0] moves[0] attrsxmlparser[0] into[0] an[0] ide[0] [[Sentence=-1,1=word max, 1-5]] common[0] [[Sentence=-1,1=word max, 1-5]] resources[0] [[Sentence=-1,1=word max, 1-5]] platform[0] package[0] [[Sentence=-1,1=word max, 1-5]] in[0] a[0] next[0] cl[0] the[0] parser[0] should[0] be[0] cleanup[0] to[0] remove[0] some[0] references[0] to[0] external[0] classes[0] e[0] [[Sentence=-1,1=word max, 1-5]] g[0] [[Sentence=-1,1=word max, 1-5]] adtplugin[0] is[0] only[0] used[0] for[0] logging[0] so[0] it[0] will[0] become[0] an[0] ilog[0] reference[0] [[Sentence=-1,1=word max, 1-5]] the[0] goal[0] of[0] the[0] resources[0] [[Sentence=-1,1=word max, 1-5]] platform[0] package[0] is[0] to[0] allow[0] other[0] ides[0] to[0] parse[0] the[0] manifest[0] schema[0] [[Sentence=-1,1=word max, 1-5]] an[0] utility[0] class[0] would[0] be[0] provided[0] here[0] that[0] would[0] then[0] be[0] used[0] by[0] androidtargetparser[0] [[Sentence=-1,1=word max, 1-5]] the[0] rest[0] of[0] the[0] data[0] parsing[0] widgets[0] resources[0] etc[0] [[Sentence=-1,1=word max, 1-5]] is[0] a[0] non[0] goal[0] [[Sentence=-1,1=word max, 1-5]] maybe[0] later[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i4fb8eb5d168b75ef8bfab57d0b2883aea85b6167[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5068 commit b293bb776f0e48674fb5f6e6a822a23011dab305 merge: 12479c5 83dba50 merge "add gesture support, marquee selection, and refactoring" 	5068 commit b293bb776f0e48674fb5f6e6a822a23011dab305 merge: 12479c5 83dba50 merge "add gesture support, marquee selection, and refactoring"	1	-1	 5068[0] commit[0] b293bb776f0e48674fb5f6e6a822a23011dab305[0] merge[0] 12479c5[0] 83dba50[0] merge[0] add[0] gesture[0] support[0] marquee[0] selection[0] and[0] refactoring[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5072 commit 83dba505e22985fd2f9414e7c6ef14ce29d31713 add gesture support, marquee selection, and refactoring this checkin adds support for gestures and overlays. gestures are sessions of mouse/keyboard activity, and this is documented in the javadoc for the new gesture class. overlays are units of graphics, and these are documented in the overlay javadoc. the gesture architecture lets us isolate the logic for each different type of operation (marquee, resize, move, etc), and with associated overlays we don't attempt to for example paint drag feedback during a resize operation, etc. the checkin also adds marquee selection (as a second gesture, in addition to the existing drag & drop based move gesture), along with some associated changes in how the root view is treated. as part of isolating the mouse handling and painting related to gestures, painting etc., i also refactored the code quite a bit. layoutcanvas which used to be a large class has been split into a number of new classes, one for each area of responsibility: - the mouse listener and drag & drop code has been moved into a gesturemanager. (a lot of the drop handling code also came from the canvasdroplistener class.) - code related to maintaining the set of rendered views, and performing searches in the views, has been moved into a viewhierarchy class. - code related to selection has been moved into a selectionmanager. - various individual painting pieces (outline, hover, etc) have been moved into individual overlay classes such as outlineoverlay, hoveroverlay, selectionoverlay, etc. this also moved associated resource allocation and cleanup into the overlays. - new coordinate classes, controlpoint and layoutpoint, are used instead of ints and plain points to make it really clear which methods require coordinates in the layout (such as the viewhieararchy search methods) and which ones require coordinates in the canvas control (such as paint methods). there are factory methods to automatically construct the right kind of coordinate from different types of mouse events, as well as methods to convert between the two. i also tweaked the visual appearance of selection a bit more, and some other misc cleanup. change-id: i666aabdcd36720bebe406b68237e8966d985fb8f 	5072 commit 83dba505e22985fd2f9414e7c6ef14ce29d31713 add gesture support, marquee selection, and refactoring this checkin adds support for gestures and overlays.<br> gestures are sessions of mouse/keyboard activity, and this is documented in the javadoc for the new gesture class.<br> overlays are units of graphics, and these are documented in the overlay javadoc.<br> the gesture architecture lets us isolate the logic for each different type of operation (marquee, resize, move, etc) and with associated overlays we don't attempt to for example paint drag feedback during a resize operation, etc.<br> the checkin also adds marquee selection (as a second gesture, in addition to the existing drag & drop based move gesture) along with some associated changes in how the root view is treated.<br> as part of isolating the mouse handling and painting related to gestures, painting etc.<br> i also refactored the code quite a bit.<br> layoutcanvas which used to be a large class has been split into a number of new classes, one for each area of responsibility: - the mouse listener and drag & drop code has been moved into a gesturemanager.<br> (a lot of the drop handling code also came from the canvasdroplistener class.<br> - code related to maintaining the set of rendered views, and performing searches in the views, has been moved into a viewhierarchy class.<br> - code related to selection has been moved into a selectionmanager.<br> - various individual painting pieces (outline, hover, etc) have been moved into individual overlay classes such as outlineoverlay, hoveroverlay, selectionoverlay, etc.<br> this also moved associated resource allocation and cleanup into the overlays.<br> - new coordinate classes, controlpoint and layoutpoint, are used instead of ints and plain points to make it really clear which methods require coordinates in the layout (such as the viewhieararchy search methods) and which ones require coordinates in the canvas control (such as paint methods)<br> there are factory methods to automatically construct the right kind of coordinate from different types of mouse events, as well as methods to convert between the two.<br> i also tweaked the visual appearance of selection a bit more, and some other misc cleanup.<br> change-id: i66abdcd36720bebe406b68237e8966d985fb8f	2	-2	 5072[0] commit[0] 83dba505e22985fd2f9414e7c6ef14ce29d31713[0] add[0] gesture[0] support[0] marquee[0] selection[0] and[0] refactoring[0] this[0] checkin[0] adds[0] support[0] for[0] gestures[0] and[0] overlays[0] [[Sentence=-1,1=word max, 1-5]] gestures[0] are[0] sessions[0] of[0] mouse/keyboard[0] activity[0] and[0] this[0] is[0] documented[0] in[0] the[0] javadoc[0] for[0] the[0] new[0] gesture[0] class[0] [[Sentence=-1,1=word max, 1-5]] overlays[0] are[0] units[0] of[0] graphics[0] and[0] these[0] are[0] documented[0] in[0] the[0] overlay[0] javadoc[0] [[Sentence=-1,1=word max, 1-5]] the[0] gesture[0] architecture[0] lets[0] us[0] isolate[-1] the[0] logic[0] for[0] each[0] different[0] type[0] of[0] operation[0] marquee[0] resize[0] move[0] etc[0] and[0] with[0] associated[0] overlays[0] we[0] don't[0] attempt[0] to[0] for[0] example[0] paint[0] drag[0] feedback[0] during[0] a[0] resize[0] operation[0] etc[0] [[Sentence=-2,1=word max, 1-5]] the[0] checkin[0] also[0] adds[0] marquee[0] selection[0] as[0] a[0] second[0] gesture[0] in[0] addition[0] to[0] the[0] existing[0] drag[0] &[0] drop[-1] based[0] move[0] gesture[0] along[0] with[0] some[0] associated[0] changes[0] in[0] how[0] the[0] root[0] view[0] is[0] treated[0] [[Sentence=-2,1=word max, 1-5]] as[0] part[0] of[0] isolating[-1] the[0] mouse[0] handling[0] and[0] painting[0] related[0] to[0] gestures[0] painting[0] etc[0] [[Sentence=-2,1=word max, 1-5]] i[0] also[0] refactored[0] the[0] code[0] quite[0] a[0] bit[0] [[Sentence=-1,1=word max, 1-5]] layoutcanvas[0] which[0] used[0] to[0] be[0] a[0] large[0] class[0] has[0] been[0] split[0] into[0] a[0] number[0] of[0] new[0] classes[0] one[0] for[0] each[0] area[0] of[0] responsibility[0] the[0] mouse[0] listener[0] and[0] drag[0] &[0] drop[-1] code[0] has[0] been[0] moved[0] into[0] a[0] gesturemanager[0] [[Sentence=-2,1=word max, 1-5]] a[0] lot[0] of[0] the[0] drop[-1] handling[0] code[0] also[0] came[0] from[0] the[0] canvasdroplistener[0] class[0] [[Sentence=-2,1=word max, 1-5]] code[0] related[0] to[0] maintaining[0] the[0] set[0] of[0] rendered[0] views[0] and[0] performing[0] searches[0] in[0] the[0] views[0] has[0] been[0] moved[0] into[0] a[0] viewhierarchy[0] class[0] [[Sentence=-1,1=word max, 1-5]] code[0] related[0] to[0] selection[0] has[0] been[0] moved[0] into[0] a[0] selectionmanager[0] [[Sentence=-1,1=word max, 1-5]] various[0] individual[0] painting[0] pieces[0] outline[0] hover[0] etc[0] have[0] been[0] moved[0] into[0] individual[0] overlay[0] classes[0] such[0] as[0] outlineoverlay[0] hoveroverlay[0] selectionoverlay[0] etc[0] [[Sentence=-1,1=word max, 1-5]] this[0] also[0] moved[0] associated[0] resource[0] allocation[0] and[0] cleanup[0] into[0] the[0] overlays[0] [[Sentence=-1,1=word max, 1-5]] new[0] coordinate[0] classes[0] controlpoint[0] and[0] layoutpoint[0] are[0] used[0] instead[0] of[0] ints[0] and[0] plain[0] points[0] to[0] make[0] it[0] really[0] clear[0] which[0] methods[0] require[0] coordinates[0] in[0] the[0] layout[0] such[0] as[0] the[0] viewhieararchy[0] search[0] methods[0] and[0] which[0] ones[0] require[0] coordinates[0] in[0] the[0] canvas[0] control[0] such[0] as[0] paint[0] methods[0] [[Sentence=-1,1=word max, 1-5]] there[0] are[0] factory[0] methods[0] to[0] automatically[0] construct[0] the[0] right[0] kind[1] of[0] coordinate[0] from[0] different[0] types[0] of[0] mouse[0] events[0] as[0] well[0] as[0] methods[0] to[0] convert[0] between[0] the[0] two[0] [[Sentence=-1,2=word max, 1-5]] i[0] also[0] tweaked[0] the[0] visual[0] appearance[0] of[0] selection[0] a[0] bit[0] more[0] and[0] some[0] other[0] misc[0] cleanup[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i666aabdcd36720bebe406b68237e8966d985fb8f/i66abdcd36720bebe406b68237e8966d985fb8f[0][+0.6 MultipleLetters] [[Sentence=-1,2=word max, 1-5]][[[2,-2 max of sentences]]]
5133 commit 2be70bde5a6dcd6447c32ef55866020be372f96c port layout rules to java we had a number of layout implementations in the tool written in groovy; these were hard to deal with because of lack of good tool support (debugging didn't work, refactoring didn't work, code completion didn't (always) work, go to declaration didn't work, semantic checks like unused code didn't work, etc. etc.) since these layout helpers are only getting larger, replace them by equivalent java code to make development easier. this checkin also moves the api classes formerly used by groovy scripts into a new package (next to the java layout rules) under com.android.ide.common (api and layout) since this code isn't eclipse specific and could be used by other ide vendors. these interfaces were left identical (only the package statements and directory location changed), with two exceptions: i added a new method called "in" to iattributeinfo.java, and i added a parameter to iviewrule's oninitialize method. the groovy code was kept as close to the original as possible; i copied in the groovy code, and then replaced the groovy-specific constructs (closure-iteration on collections, literal map syntax, etc) with equivalent java code. the only tricky part was ensuring that groovy's handling of the    and !  operators were translated into .equals calls. change-id: idf7660ddea3766eac0a4a65ce6524d3f5119f7b2 	5133 commit 2be70bde5a6dcd6447c32ef55866020be372f96c port layout rules to java we had a number of layout implementations in the tool written in groovy; these were hard to deal with because of lack of good tool support (debugging didn't work, refactoring didn't work, code completion didn't (always) work, go to declaration didn't work, semantic checks like unused code didn't work, etc.<br> etc.<br> since these layout helpers are only getting larger, replace them by equivalent java code to make development easier.<br> this checkin also moves the api classes formerly used by groovy scripts into a new package (next to the java layout rules) under com.<br>android.<br>ide.<br>common (api and layout) since this code isn't eclipse specific and could be used by other ide vendors.<br> these interfaces were left identical (only the package statements and directory location changed) with two exceptions: i added a new method called "in" to iattributeinfo.<br>java, and i added a parameter to iviewrule's oninitialize method.<br> the groovy code was kept as close to the original as possible; i copied in the groovy code, and then replaced the groovy-specific constructs (closure-iteration on collections, literal map syntax, etc) with equivalent java code.<br> the only tricky part was ensuring that groovy's handling of the    and !<br>  operators were translated into .<br>equals calls.<br> change-id: idf7660ddea3766eac0a4a65ce6524d3f5119f7b2	2	-2	 5133[0] commit[0] 2be70bde5a6dcd6447c32ef55866020be372f96c[0] port[0] layout[0] rules[0] to[0] java[0] we[0] had[0] a[0] number[0] of[0] layout[0] implementations[0] in[0] the[0] tool[0] written[0] in[0] groovy[0] these[0] were[0] hard[0] to[0] deal[0] with[0] because[0] of[0] lack[-1] of[0] good[1] tool[0] support[0] debugging[0] didn't[0] work[0] refactoring[0] didn't[0] work[0] code[0] completion[0] didn't[0] always[0] work[0] go[0] to[0] declaration[0] didn't[0] work[0] semantic[0] checks[0] like[0] unused[0] code[0] didn't[0] work[0] etc[0] [[Sentence=-2,2=word max, 1-5]] etc[0] [[Sentence=-1,1=word max, 1-5]] since[0] these[0] layout[0] helpers[0] are[0] only[0] getting[0] larger[0] replace[0] them[0] by[0] equivalent[0] java[0] code[0] to[0] make[0] development[0] easier[0] [[Sentence=-1,1=word max, 1-5]] this[0] checkin[0] also[0] moves[0] the[0] api[0] classes[0] formerly[0] used[0] by[0] groovy[0] scripts[0] into[0] a[0] new[0] package[0] next[0] to[0] the[0] java[0] layout[0] rules[0] under[0] com[0] [[Sentence=-1,1=word max, 1-5]] android[0] [[Sentence=-1,1=word max, 1-5]] ide[0] [[Sentence=-1,1=word max, 1-5]] common[0] api[0] and[0] layout[0] since[0] this[0] code[0] isn't[0] eclipse[0] specific[0] and[0] could[0] be[0] used[0] by[0] other[0] ide[0] vendors[0] [[Sentence=-1,1=word max, 1-5]] these[0] interfaces[0] were[0] left[0] identical[0] only[0] the[0] package[0] statements[0] and[0] directory[0] location[0] changed[0] with[0] two[0] exceptions[0] i[0] added[0] a[0] new[0] method[0] called[0] in[0] to[0] iattributeinfo[0] [[Sentence=-1,1=word max, 1-5]] java[0] and[0] i[0] added[0] a[0] parameter[0] to[0] iviewrule's[0] oninitialize[0] method[0] [[Sentence=-1,1=word max, 1-5]] the[0] groovy[0] code[0] was[0] kept[0] as[0] close[0] to[0] the[0] original[0] as[0] possible[0] i[0] copied[0] in[0] the[0] groovy[0] code[0] and[0] then[0] replaced[0] the[0] groovy[0] specific[0] constructs[0] closure[0] iteration[0] on[0] collections[0] literal[0] map[0] syntax[0] etc[0] with[0] equivalent[0] java[0] code[0] [[Sentence=-1,1=word max, 1-5]] the[0] only[0] tricky[-1] part[0] was[0] ensuring[0] that[0] groovy's[0] handling[0] of[0] the[0] and[0] [[Sentence=-2,1=word max, 1-5]] operators[0] were[0] translated[0] into[0] [[Sentence=-1,1=word max, 1-5]] equals[0] calls[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] idf7660ddea3766eac0a4a65ce6524d3f5119f7b2[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
5496 commit dc251ccc3b44c65c30c1aedeef8d8aa486fa5b89 merge: 68ae080 59f8d50 merge "adt refactor the builders into their own package." 	5496 commit dc251cc3b44c65c30c1aedeef8d8a486fa5b89 merge: 68ae080 59f8d50 merge "adt refactor the builders into their own package.	2	-1	 5496[0] commit[0] dc251ccc3b44c65c30c1aedeef8d8aa486fa5b89/dc251cc3b44c65c30c1aedeef8d8a486fa5b89[0][+0.6 MultipleLetters] merge[0] 68ae080[0] 59f8d50[0] merge[0] adt[0] refactor[0] the[0] builders[0] into[0] their[0] own[0] package[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
5498 commit 59f8d5012426884e40b77b02a7c3274eb66019a1 adt refactor the builders into their own package. put the growing list of generic build classes into the main build package. change-id: i65d7067bb2547d7cc9b71674f4df8a6778dd8ac8 	5498 commit 59f8d5012426884e40b77b02a7c3274eb66019a1 adt refactor the builders into their own package.<br> put the growing list of generic build classes into the main build package.<br> change-id: i65d7067bb2547d7cc9b71674f4df8a6778dd8ac8	1	-1	 5498[0] commit[0] 59f8d5012426884e40b77b02a7c3274eb66019a1[0] adt[0] refactor[0] the[0] builders[0] into[0] their[0] own[0] package[0] [[Sentence=-1,1=word max, 1-5]] put[0] the[0] growing[0] list[0] of[0] generic[0] build[0] classes[0] into[0] the[0] main[0] build[0] package[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i65d7067bb2547d7cc9b71674f4df8a6778dd8ac8[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5567 commit 99bd6912e7b5b97fc6d4bb787e76b2d9dfffd7ae refactoring and integrating into eclipse change-id: i1fd3c3828fb2474f2f7394ee2831fcd7eb675878 	5567 commit 99bd6912e7b5b97fc6d4bb787e76b2d9dffd7ae refactoring and integrating into eclipse change-id: i1fd3c3828fb2474f2f7394ee2831fcd7eb675878	1	-1	 5567[0] commit[0] 99bd6912e7b5b97fc6d4bb787e76b2d9dfffd7ae/99bd6912e7b5b97fc6d4bb787e76b2d9dffd7ae[0] refactoring[0] and[0] integrating[0] into[0] eclipse[0] change[0] id[0] i1fd3c3828fb2474f2f7394ee2831fcd7eb675878[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5825 commit b9a220dbb0fc481e5744417ca599176961f207b4 merge: e1da4a2 452ff02 merge "refactoring of apkbuilder to prepare for its integration into sdklib." 	5825 commit b9a220dbb0fc481e574417ca599176961f207b4 merge: e1da4a2 452ff02 merge "refactoring of apkbuilder to prepare for its integration into sdklib.	1	-1	 5825[0] commit[0] b9a220dbb0fc481e5744417ca599176961f207b4/b9a220dbb0fc481e574417ca599176961f207b4[0] merge[0] e1da4a2[0] 452ff02[0] merge[0] refactoring[0] of[0] apkbuilder[0] to[0] prepare[0] for[0] its[0] integration[0] into[0] sdklib[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5826 commit 452ff02ae286668819d1f4ca94f1ed15d2553807 refactoring of apkbuilder to prepare for its integration into sdklib. change-id: if75b9262126813769537435546be0ad4e4648ac2 	5826 commit 452ff02ae28668819d1f4ca94f1ed15d2553807 refactoring of apkbuilder to prepare for its integration into sdklib.<br> change-id: if75b9262126813769537435546be0ad4e4648ac2	1	-1	 5826[0] commit[0] 452ff02ae286668819d1f4ca94f1ed15d2553807/452ff02ae28668819d1f4ca94f1ed15d2553807[0] refactoring[0] of[0] apkbuilder[0] to[0] prepare[0] for[0] its[0] integration[0] into[0] sdklib[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] if75b9262126813769537435546be0ad4e4648ac2[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5841 commit 006471e6d11a7893b3bfc030e6369fb91c3eeef3 merge: f264a2f 59243b8 merge "refactor most of the apkbuilder into a separate helper class." 	5841 commit 006471e6d11a7893b3bfc030e6369fb91c3eef3 merge: f264a2f 59243b8 merge "refactor most of the apkbuilder into a separate helper class.	1	-1	 5841[0] commit[0] 006471e6d11a7893b3bfc030e6369fb91c3eeef3/006471e6d11a7893b3bfc030e6369fb91c3eef3[0] merge[0] f264a2f[0] 59243b8[0] merge[0] refactor[0] most[0] of[0] the[0] apkbuilder[0] into[0] a[0] separate[0] helper[0] class[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5845 commit 59243b8de886379e7154c886adbefc74dac24055 refactor most of the apkbuilder into a separate helper class. the eclipse incremental builder will call the helper, as will the multi-apk export code (that is not an eclipse builder). change-id: ibac9aff4557232a3fa0033336c5d4d4327ae3883 	5845 commit 59243b8de886379e7154c886adbefc74dac24055 refactor most of the apkbuilder into a separate helper class.<br> the eclipse incremental builder will call the helper, as will the multi-apk export code (that is not an eclipse builder)<br> change-id: ibac9aff4557232a3fa00336c5d4d4327ae3883	2	-1	 5845[0] commit[0] 59243b8de886379e7154c886adbefc74dac24055[0] refactor[0] most[0] of[0] the[0] apkbuilder[0] into[0] a[0] separate[0] helper[0] class[0] [[Sentence=-1,1=word max, 1-5]] the[0] eclipse[0] incremental[0] builder[0] will[0] call[0] the[0] helper[0] as[0] will[0] the[0] multi[0] apk[0] export[0] code[0] that[0] is[0] not[0] an[0] eclipse[0] builder[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] ibac9aff4557232a3fa0033336c5d4d4327ae3883/ibac9aff4557232a3fa00336c5d4d4327ae3883[0][+0.6 MultipleLetters] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
5857 commit 953aeea61efb31402198b969478d1bda5dcbe613 adt gle2: access attributeinfo from groovy scripts. this cl extracts iattributeinfo from declarestyleable -- this used to be the metadata extracted from an attribute declared in attrs.xml. the interface that is now available to groovy scripts lets them check whether an attribute is a reference, a string, etc. for an enum or flag that means having access to the defined values too. in the case of the absolutelayout drop, we use this info to check if an attribute is a reference. for example when duplicating a relativelayout dropped in an absolutelayout, we need to create new ids and the relativelayout is prone to have inner self-references that can be automatically adjusted that way. a large part of the cl is about refactoring the various manually-created attributes in the descriptors for resources, xml, and such. in this case the iattributeinfo that is made available via the attributedescriptor is not used, but it made sense to keep this consistent in case we want to expose it later and to avoid having to care about special cases. change-id: ic02f69bc16f0e549fcac3956ae93b86651c5be3c 	5857 commit 953aeea61efb31402198b969478d1bda5dcbe613 adt gle2: access attributeinfo from groovy scripts.<br> this cl extracts iattributeinfo from declarestyleable - this used to be the metadata extracted from an attribute declared in attrs.<br>xml.<br> the interface that is now available to groovy scripts lets them check whether an attribute is a reference, a string, etc.<br> for an enum or flag that means having access to the defined values too.<br> in the case of the absolutelayout drop, we use this info to check if an attribute is a reference.<br> for example when duplicating a relativelayout dropped in an absolutelayout, we need to create new ids and the relativelayout is prone to have inner self-references that can be automatically adjusted that way.<br> a large part of the cl is about refactoring the various manually-created attributes in the descriptors for resources, xml, and such.<br> in this case the iattributeinfo that is made available via the attributedescriptor is not used, but it made sense to keep this consistent in case we want to expose it later and to avoid having to care about special cases.<br> change-id: ic02f69bc16f0e549fcac3956ae93b86651c5be3c	2	-2	 5857[0] commit[0] 953aeea61efb31402198b969478d1bda5dcbe613[0] adt[0] gle2[0] access[0] attributeinfo[0] from[0] groovy[0] scripts[0] [[Sentence=-1,1=word max, 1-5]] this[0] cl[0] extracts[0] iattributeinfo[0] from[0] declarestyleable[0] this[0] used[0] to[0] be[0] the[0] metadata[0] extracted[0] from[0] an[0] attribute[0] declared[0] in[0] attrs[0] [[Sentence=-1,1=word max, 1-5]] xml[0] [[Sentence=-1,1=word max, 1-5]] the[0] interface[0] that[0] is[0] now[0] available[0] to[0] groovy[0] scripts[0] lets[0] them[0] check[0] whether[0] an[0] attribute[0] is[0] a[0] reference[0] a[0] string[0] etc[0] [[Sentence=-1,1=word max, 1-5]] for[0] an[0] enum[0] or[0] flag[0] that[0] means[0] having[0] access[0] to[0] the[0] defined[0] values[1] too[0] [[Sentence=-1,2=word max, 1-5]] in[0] the[0] case[0] of[0] the[0] absolutelayout[0] drop[-1] we[0] use[0] this[0] info[0] to[0] check[0] if[0] an[0] attribute[0] is[0] a[0] reference[0] [[Sentence=-2,1=word max, 1-5]] for[0] example[0] when[0] duplicating[0] a[0] relativelayout[0] dropped[0] in[0] an[0] absolutelayout[0] we[0] need[0] to[0] create[0] new[0] ids[0] and[0] the[0] relativelayout[0] is[0] prone[0] to[0] have[0] inner[0] self[0] references[0] that[0] can[0] be[0] automatically[0] adjusted[0] that[0] way[0] [[Sentence=-1,1=word max, 1-5]] a[0] large[0] part[0] of[0] the[0] cl[0] is[0] about[0] refactoring[0] the[0] various[0] manually[0] created[0] attributes[0] in[0] the[0] descriptors[0] for[0] resources[0] xml[0] and[0] such[0] [[Sentence=-1,1=word max, 1-5]] in[0] this[0] case[0] the[0] iattributeinfo[0] that[0] is[0] made[0] available[0] via[0] the[0] attributedescriptor[0] is[0] not[0] used[0] but[0] it[0] made[0] sense[0] to[0] keep[0] this[0] consistent[0] in[0] case[0] we[0] want[0] to[0] expose[-1] it[0] later[0] and[0] to[0] avoid[-1] having[0] to[0] care[1] about[0] special[1] cases[0] [[Sentence=-2,2=word max, 1-5]] change[0] id[0] ic02f69bc16f0e549fcac3956ae93b86651c5be3c[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
5911 commit a51d4ddc3cc08e445eb426a6a6108fad3fa842b9 refactor the manifest parser test in the correct package. and don't make it use the parser helper that's eclipse specific. also fixed the versioncode parsing (bug introduced in previous cl) change-id: ie472d7d6c4847e3fae660873cca7d71e801a2a34 	5911 commit a51d4ddc3cc08e445eb426a6a6108fad3fa842b9 refactor the manifest parser test in the correct package.<br> and don't make it use the parser helper that's eclipse specific.<br> also fixed the versioncode parsing (bug introduced in previous cl) change-id: ie472d7d6c4847e3fae660873cca7d71e801a2a34	1	-1	 5911[0] commit[0] a51d4ddc3cc08e445eb426a6a6108fad3fa842b9[0] refactor[0] the[0] manifest[0] parser[0] test[0] in[0] the[0] correct[0] package[0] [[Sentence=-1,1=word max, 1-5]] and[0] don't[0] make[0] it[0] use[0] the[0] parser[0] helper[0] that's[0] eclipse[0] specific[0] [[Sentence=-1,1=word max, 1-5]] also[0] fixed[0] the[0] versioncode[0] parsing[0] bug[0] introduced[0] in[0] previous[0] cl[0] change[0] id[0] ie472d7d6c4847e3fae660873cca7d71e801a2a34[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5915 commit af98417f9748cf449473478dda209cb60b20263b minor refactor, moving manifestdata out of the parser class. also started added new data parsing (screen support) change-id: i783e973fa16598a777eec4536746e6e5b9cb3e74 	5915 commit af98417f9748cf449473478dda209cb60b20263b minor refactor, moving manifestdata out of the parser class.<br> also started added new data parsing (screen support) change-id: i783e973fa16598a77eec4536746e6e5b9cb3e74	1	-1	 5915[0] commit[0] af98417f9748cf449473478dda209cb60b20263b[0] minor[0] refactor[0] moving[0] manifestdata[0] out[0] of[0] the[0] parser[0] class[0] [[Sentence=-1,1=word max, 1-5]] also[0] started[0] added[0] new[0] data[0] parsing[0] screen[0] support[0] change[0] id[0] i783e973fa16598a777eec4536746e6e5b9cb3e74/i783e973fa16598a77eec4536746e6e5b9cb3e74[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
5920 commit d5579c79e7dcb1eda9835f5a2c7299be7eab28b0 refactored the android manifest into sdklib. api change to make it use ifilewrapper instead of ifile. old androidmanifestparser changed to androidmanifesthelper which is now mostly wrapper methods to add eclipse specific parameters. also moved adt...androidconstants.class_* to sdklib...sdkconstants (needed by the parser) and removed androidconstants.fn_android_manifest since sdkconstants.fn_android_manifest_xml existed too. moved the eclipse implementation of iabstractfile/folder change-id: i59bdbe90ba9a4c0b5bb2c4c68945b8877d4eed3d 	5920 commit d5579c79e7dcb1eda9835f5a2c7299be7eab28b0 refactored the android manifest into sdklib.<br> api change to make it use ifilewrapper instead of ifile.<br> old androidmanifestparser changed to androidmanifesthelper which is now mostly wrapper methods to add eclipse specific parameters.<br> also moved adt.<br>androidconstants.<br>class_* to sdklib.<br>sdkconstants (needed by the parser) and removed androidconstants.<br>fn_android_manifest since sdkconstants.<br>fn_android_manifest_xml existed too.<br> moved the eclipse implementation of iabstractfile/folder change-id: i59bdbe90ba9a4c0b5bb2c4c68945b8877d4eed3d	1	-1	 5920[0] commit[0] d5579c79e7dcb1eda9835f5a2c7299be7eab28b0[0] refactored[0] the[0] android[0] manifest[0] into[0] sdklib[0] [[Sentence=-1,1=word max, 1-5]] api[0] change[0] to[0] make[0] it[0] use[0] ifilewrapper[0] instead[0] of[0] ifile[0] [[Sentence=-1,1=word max, 1-5]] old[0] androidmanifestparser[0] changed[0] to[0] androidmanifesthelper[0] which[0] is[0] now[0] mostly[0] wrapper[0] methods[0] to[0] add[0] eclipse[0] specific[0] parameters[0] [[Sentence=-1,1=word max, 1-5]] also[0] moved[0] adt[0] [[Sentence=-1,1=word max, 1-5]] androidconstants[0] [[Sentence=-1,1=word max, 1-5]] class_[0] to[0] sdklib[0] [[Sentence=-1,1=word max, 1-5]] sdkconstants[0] needed[0] by[0] the[0] parser[0] and[0] removed[0] androidconstants[0] [[Sentence=-1,1=word max, 1-5]] fn_android_manifest[0] since[0] sdkconstants[0] [[Sentence=-1,1=word max, 1-5]] fn_android_manifest_xml[0] existed[0] too[0] [[Sentence=-1,1=word max, 1-5]] moved[0] the[0] eclipse[0] implementation[0] of[0] iabstractfile/folder[0] change[0] id[0] i59bdbe90ba9a4c0b5bb2c4c68945b8877d4eed3d[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6456 commit 0ea2d8b3d8352681c5ed0b632fc5ed2b6a4a64fa merge: 1905fbd 39111bb am 39111bbe: am d6be297b: merge change i2c1b68ce into eclair merge commit '39111bbe906e41efa82194a5e9aaa4f713a632bf' * commit '39111bbe906e41efa82194a5e9aaa4f713a632bf': adt: refactor gle1 and gle2 classes in their own package. 	6456 commit 0ea2d8b3d8352681c5ed0b632fc5ed2b6a4a64fa merge: 1905fbd 3911bb am 3911bbe: am d6be297b: merge change i2c1b68ce into eclair merge commit '3911bbe906e41efa82194a5e9a4f713a632bf' * commit '3911bbe906e41efa82194a5e9a4f713a632bf': adt: refactor gle1 and gle2 classes in their own package.	2	-1	 6456[0] commit[0] 0ea2d8b3d8352681c5ed0b632fc5ed2b6a4a64fa[0] merge[0] 1905fbd[0] 39111bb/3911bb[0] am[0] 39111bbe/3911bbe[0] am[0] d6be297b[0] merge[0] change[0] i2c1b68ce[0] into[0] eclair[0] merge[0] commit[0] '39111bbe906e41efa82194a5e9aaa4f713a632bf'/'3911bbe906e41efa82194a5e9a4f713a632bf'[0][+0.6 MultipleLetters] commit[0] '39111bbe906e41efa82194a5e9aaa4f713a632bf'/'3911bbe906e41efa82194a5e9a4f713a632bf'[0][+0.6 MultipleLetters] adt[0] refactor[0] gle1[0] and[0] gle2[0] classes[0] in[0] their[0] own[0] package[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
6457 commit 39111bbe906e41efa82194a5e9aaa4f713a632bf merge: 661eb23 d6be297 am d6be297b: merge change i2c1b68ce into eclair merge commit 'd6be297b37453bec1120c7f398f3e22554440446' into eclair-plus-aosp * commit 'd6be297b37453bec1120c7f398f3e22554440446': adt: refactor gle1 and gle2 classes in their own package. 	6457 commit 3911bbe906e41efa82194a5e9a4f713a632bf merge: 661eb23 d6be297 am d6be297b: merge change i2c1b68ce into eclair merge commit 'd6be297b37453bec1120c7f398f3e2255440446' into eclair-plus-aosp * commit 'd6be297b37453bec1120c7f398f3e2255440446': adt: refactor gle1 and gle2 classes in their own package.	2	-1	 6457[0] commit[0] 39111bbe906e41efa82194a5e9aaa4f713a632bf/3911bbe906e41efa82194a5e9a4f713a632bf[0][+0.6 MultipleLetters] merge[0] 661eb23[0] d6be297[0] am[0] d6be297b[0] merge[0] change[0] i2c1b68ce[0] into[0] eclair[0] merge[0] commit[0] 'd6be297b37453bec1120c7f398f3e22554440446'/'d6be297b37453bec1120c7f398f3e2255440446'[0] into[0] eclair[0] plus[0] aosp[0] commit[0] 'd6be297b37453bec1120c7f398f3e22554440446'/'d6be297b37453bec1120c7f398f3e2255440446'[0] adt[0] refactor[0] gle1[0] and[0] gle2[0] classes[0] in[0] their[0] own[0] package[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
6458 commit d6be297b37453bec1120c7f398f3e22554440446 merge: 93041be fe56e77 merge change i2c1b68ce into eclair * changes: adt: refactor gle1 and gle2 classes in their own package. 	6458 commit d6be297b37453bec1120c7f398f3e2255440446 merge: 93041be fe56e77 merge change i2c1b68ce into eclair * changes: adt: refactor gle1 and gle2 classes in their own package.	1	-1	 6458[0] commit[0] d6be297b37453bec1120c7f398f3e22554440446/d6be297b37453bec1120c7f398f3e2255440446[0] merge[0] 93041be[0] fe56e77[0] merge[0] change[0] i2c1b68ce[0] into[0] eclair[0] changes[0] adt[0] refactor[0] gle1[0] and[0] gle2[0] classes[0] in[0] their[0] own[0] package[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
6459 commit fe56e7727202f85b4a682b2dce6558607c8cf0df adt: refactor gle1 and gle2 classes in their own package. this means we have to change a couple classes to public instead of package protected. however it makes it easier to read the project and see what files we'll want to deprecate with gle1. change-id: i2c1b68ce27773253473cbef5bcef085f9eecfafe 	6459 commit fe56e7727202f85b4a682b2dce6558607c8cf0df adt: refactor gle1 and gle2 classes in their own package.<br> this means we have to change a couple classes to public instead of package protected.<br> however it makes it easier to read the project and see what files we'll want to deprecate with gle1.<br> change-id: i2c1b68ce2773253473cbef5bcef085f9eecfafe	1	-1	 6459[0] commit[0] fe56e7727202f85b4a682b2dce6558607c8cf0df[0] adt[0] refactor[0] gle1[0] and[0] gle2[0] classes[0] in[0] their[0] own[0] package[0] [[Sentence=-1,1=word max, 1-5]] this[0] means[0] we[0] have[0] to[0] change[0] a[0] couple[0] classes[0] to[0] public[0] instead[0] of[0] package[0] protected[0] [[Sentence=-1,1=word max, 1-5]] however[0] it[0] makes[0] it[0] easier[0] to[0] read[0] the[0] project[0] and[0] see[0] what[0] files[0] we'll[0] want[0] to[0] deprecate[0] with[0] gle1[0] [[Sentence=-1,1=word max, 1-5]] change[0] id[0] i2c1b68ce27773253473cbef5bcef085f9eecfafe/i2c1b68ce2773253473cbef5bcef085f9eecfafe[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7566 commit 8aded2db86d1232d9d50b4ab59cbd9fdfc7381a1 merge: 6c18e49 c556783 am 4db669b9: am 603899e5: merge change i95a34d28 into eclair merge commit '4db669b91e576c9eaeb8e44af594953f85de3788' * commit '4db669b91e576c9eaeb8e44af594953f85de3788': adt xml string refactoring: fix refusing to edit @ id/blah. 	7566 commit 8aded2db86d1232d9d50b4ab59cbd9fdfc7381a1 merge: 6c18e49 c556783 am 4db669b9: am 603899e5: merge change i95a34d28 into eclair merge commit '4db669b91e576c9eaeb8e44af594953f85de3788' * commit '4db669b91e576c9eaeb8e44af594953f85de3788': adt xml string refactoring: fix refusing to edit @ id/blah.	1	-1	 7566[0] commit[0] 8aded2db86d1232d9d50b4ab59cbd9fdfc7381a1[0] merge[0] 6c18e49[0] c556783[0] am[0] 4db669b9[0] am[0] 603899e5[0] merge[0] change[0] i95a34d28[0] into[0] eclair[0] merge[0] commit[0] '4db669b91e576c9eaeb8e44af594953f85de3788'[0] commit[0] '4db669b91e576c9eaeb8e44af594953f85de3788'[0] adt[0] xml[0] string[0] refactoring[0] fix[0] refusing[0] to[0] edit[0] @[0] id/blah[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7592 commit c5567831aed276ab7bfa3e235da4ad32abf43680 merge: dad7d04 409b143 am 603899e5: merge change i95a34d28 into eclair merge commit '603899e5a9c50bcfd2149c7932050fda0524ec6b' into eclair-plus-aosp * commit '603899e5a9c50bcfd2149c7932050fda0524ec6b': adt xml string refactoring: fix refusing to edit @ id/blah. 	7592 commit c5567831aed276ab7bfa3e235da4ad32abf43680 merge: dad7d04 409b143 am 603899e5: merge change i95a34d28 into eclair merge commit '603899e5a9c50bcfd2149c7932050fda0524ec6b' into eclair-plus-aosp * commit '603899e5a9c50bcfd2149c7932050fda0524ec6b': adt xml string refactoring: fix refusing to edit @ id/blah.	1	-1	 7592[0] commit[0] c5567831aed276ab7bfa3e235da4ad32abf43680[0] merge[0] dad7d04[0] 409b143[0] am[0] 603899e5[0] merge[0] change[0] i95a34d28[0] into[0] eclair[0] merge[0] commit[0] '603899e5a9c50bcfd2149c7932050fda0524ec6b'[0] into[0] eclair[0] plus[0] aosp[0] commit[0] '603899e5a9c50bcfd2149c7932050fda0524ec6b'[0] adt[0] xml[0] string[0] refactoring[0] fix[0] refusing[0] to[0] edit[0] @[0] id/blah[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
7596 commit 409b1434a8d7c190985631bde824794b3eba20b8 merge: 3c20000 245991f merge change i95a34d28 into eclair * changes: adt xml string refactoring: fix refusing to edit @ id/blah. 	7596 commit 409b1434a8d7c190985631bde824794b3eba20b8 merge: 3c200 245991f merge change i95a34d28 into eclair * changes: adt xml string refactoring: fix refusing to edit @ id/blah.	2	-1	 7596[0] commit[0] 409b1434a8d7c190985631bde824794b3eba20b8[0] merge[0] 3c20000/3c200[0][+0.6 MultipleLetters] 245991f[0] merge[0] change[0] i95a34d28[0] into[0] eclair[0] changes[0] adt[0] xml[0] string[0] refactoring[0] fix[0] refusing[0] to[0] edit[0] @[0] id/blah[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
7603 commit 245991f7b16b8733bf14adf1f2dd13c50cab8a93 adt xml string refactoring: fix refusing to edit @ id/blah. it correctly only refuses to edit @string/blah now. this cl also does a bit of refactoring; i extracted some methods and a class to make it a bit easier to read. bug 2066460 change-id: i95a34d28d6390ab0cc075f05ea83ceec04993ae9 	7603 commit 245991f7b16b8733bf14adf1f2dd13c50cab8a93 adt xml string refactoring: fix refusing to edit @ id/blah.<br> it correctly only refuses to edit @string/blah now.<br> this cl also does a bit of refactoring; i extracted some methods and a class to make it a bit easier to read.<br> bug 2066460 change-id: i95a34d28d6390ab0cc075f05ea83ceec04993ae9	1	-2	 7603[0] commit[0] 245991f7b16b8733bf14adf1f2dd13c50cab8a93[0] adt[0] xml[0] string[0] refactoring[0] fix[0] refusing[0] to[0] edit[0] @[0] id/blah[0] [[Sentence=-1,1=word max, 1-5]] it[0] correctly[0] only[0] refuses[-1] to[0] edit[0] @string/blah[0] now[0] [[Sentence=-2,1=word max, 1-5]] this[0] cl[0] also[0] does[0] a[0] bit[0] of[0] refactoring[0] i[0] extracted[0] some[0] methods[0] and[0] a[0] class[0] to[0] make[0] it[0] a[0] bit[0] easier[0] to[0] read[0] [[Sentence=-1,1=word max, 1-5]] bug[0] 2066460[0] change[0] id[0] i95a34d28d6390ab0cc075f05ea83ceec04993ae9[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
8460 commit d3f6da7052bd692e678a1f79878d1a32b57fe9f2 merge: 53b9914 c49aefc am ada18333: merge change 8196 into donut merge commit 'ada18333257cdc14d3cafbddf5d1395574e5132b' * commit 'ada18333257cdc14d3cafbddf5d1395574e5132b': refactored androidxpathfactory into sdklib. 	8460 commit d3f6da7052bd692e678a1f79878d1a32b57fe9f2 merge: 53b9914 c49aefc am ada1833: merge change 8196 into donut merge commit 'ada1833257cdc14d3cafbddf5d1395574e5132b' * commit 'ada1833257cdc14d3cafbddf5d1395574e5132b': refactored androidxpathfactory into sdklib.	1	-1	 8460[0] commit[0] d3f6da7052bd692e678a1f79878d1a32b57fe9f2[0] merge[0] 53b9914[0] c49aefc[0] am[0] ada18333/ada1833[0] merge[0] change[0] 8196[0] into[0] donut[0] merge[0] commit[0] 'ada18333257cdc14d3cafbddf5d1395574e5132b'/'ada1833257cdc14d3cafbddf5d1395574e5132b'[0] commit[0] 'ada18333257cdc14d3cafbddf5d1395574e5132b'/'ada1833257cdc14d3cafbddf5d1395574e5132b'[0] refactored[0] androidxpathfactory[0] into[0] sdklib[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8462 commit c49aefc64c23d013479b56947f019252c924e380 merge: 43a0b0c 79c1241 merge change 8196 into donut * changes: refactored androidxpathfactory into sdklib. 	8462 commit c49aefc64c23d013479b56947f019252c924e380 merge: 43a0b0c 79c1241 merge change 8196 into donut * changes: refactored androidxpathfactory into sdklib.	1	-1	 8462[0] commit[0] c49aefc64c23d013479b56947f019252c924e380[0] merge[0] 43a0b0c[0] 79c1241[0] merge[0] change[0] 8196[0] into[0] donut[0] changes[0] refactored[0] androidxpathfactory[0] into[0] sdklib[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
8463 commit 79c1241417c3774487c3372423a51ee9fca6019d refactored androidxpathfactory into sdklib. 	8463 commit 79c1241417c3774487c3372423a51ee9fca6019d refactored androidxpathfactory into sdklib.	1	-1	 8463[0] commit[0] 79c1241417c3774487c3372423a51ee9fca6019d[0] refactored[0] androidxpathfactory[0] into[0] sdklib[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9032 commit d4579ba67bfc0788a716485003d14064a5266b69 merge: 5b6490d c77d5c0 am 906e6529: merge change 2300 into donut merge commit '906e6529fce5e5c4473d9bcdb05c03b13dac2b8f' * commit '906e6529fce5e5c4473d9bcdb05c03b13dac2b8f': sdk updater: some refactoring and some new features. 	9032 commit d4579ba67bfc0788a716485003d14064a5266b69 merge: 5b6490d c77d5c0 am 906e6529: merge change 2300 into donut merge commit '906e6529fce5e5c4473d9bcdb05c03b13dac2b8f' * commit '906e6529fce5e5c4473d9bcdb05c03b13dac2b8f': sdk updater: some refactoring and some new features.	1	-1	 9032[0] commit[0] d4579ba67bfc0788a716485003d14064a5266b69[0] merge[0] 5b6490d[0] c77d5c0[0] am[0] 906e6529[0] merge[0] change[0] 2300[0] into[0] donut[0] merge[0] commit[0] '906e6529fce5e5c4473d9bcdb05c03b13dac2b8f'[0] commit[0] '906e6529fce5e5c4473d9bcdb05c03b13dac2b8f'[0] sdk[0] updater[0] some[0] refactoring[0] and[0] some[0] new[0] features[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9033 commit c77d5c0e2971720263b79fc328253512a7c1b129 merge: 6076db8 e2c0e97 merge change 2300 into donut * changes: sdk updater: some refactoring and some new features. 	9033 commit c77d5c0e2971720263b79fc328253512a7c1b129 merge: 6076db8 e2c0e97 merge change 2300 into donut * changes: sdk updater: some refactoring and some new features.	1	-1	 9033[0] commit[0] c77d5c0e2971720263b79fc328253512a7c1b129[0] merge[0] 6076db8[0] e2c0e97[0] merge[0] change[0] 2300[0] into[0] donut[0] changes[0] sdk[0] updater[0] some[0] refactoring[0] and[0] some[0] new[0] features[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9035 commit e2c0e975c244290674db1eb42e27bc03eb8d3b77 sdk updater: some refactoring and some new features. the refactoring part involves moving as much as possible stuff in sdklib/internal/repository. the ui has moved in sdkuilib/internal/repository except a specific public wrapper for calling the sdk updater window. there are also a bunch of new classes to handle the internal structures: package is the base type and to match the xml element names we have platformpackage, addonpackage, docpackage and toolpackage. all headers have been fixed. 	9035 commit e2c0e975c244290674db1eb42e27bc03eb8d3b77 sdk updater: some refactoring and some new features.<br> the refactoring part involves moving as much as possible stuff in sdklib/internal/repository.<br> the ui has moved in sdkuilib/internal/repository except a specific public wrapper for calling the sdk updater window.<br> there are also a bunch of new classes to handle the internal structures: package is the base type and to match the xml element names we have platformpackage, addonpackage, docpackage and toolpackage.<br> all headers have been fixed.	1	-1	 9035[0] commit[0] e2c0e975c244290674db1eb42e27bc03eb8d3b77[0] sdk[0] updater[0] some[0] refactoring[0] and[0] some[0] new[0] features[0] [[Sentence=-1,1=word max, 1-5]] the[0] refactoring[0] part[0] involves[0] moving[0] as[0] much[0] as[0] possible[0] stuff[0] in[0] sdklib/internal/repository[0] [[Sentence=-1,1=word max, 1-5]] the[0] ui[0] has[0] moved[0] in[0] sdkuilib/internal/repository[0] except[0] a[0] specific[0] public[0] wrapper[0] for[0] calling[0] the[0] sdk[0] updater[0] window[0] [[Sentence=-1,1=word max, 1-5]] there[0] are[0] also[0] a[0] bunch[0] of[0] new[0] classes[0] to[0] handle[0] the[0] internal[0] structures[0] package[0] is[0] the[0] base[0] type[0] and[0] to[0] match[0] the[0] xml[0] element[0] names[0] we[0] have[0] platformpackage[0] addonpackage[0] docpackage[0] and[0] toolpackage[0] [[Sentence=-1,1=word max, 1-5]] all[0] headers[0] have[0] been[0] fixed[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9158 commit e3ed76a5100c1e3b83c0d4a4abc57ce673df56f6 merge: c0ec2bb 60a544a am 770dfc5: adt: refactoring classes dealing with android resources out merge commit '770dfc5ed43089228af1892eef3a73a0e7220bc7' * commit '770dfc5ed43089228af1892eef3a73a0e7220bc7': adt: refactoring classes dealing with android resources out of the editor. 	9158 commit e3ed76a5100c1e3b83c0d4a4abc57ce673df56f6 merge: c0ec2bb 60a544a am 770dfc5: adt: refactoring classes dealing with android resources out merge commit '770dfc5ed43089228af1892eef3a73a0e7220bc7' * commit '770dfc5ed43089228af1892eef3a73a0e7220bc7': adt: refactoring classes dealing with android resources out of the editor.	1	-1	 9158[0] commit[0] e3ed76a5100c1e3b83c0d4a4abc57ce673df56f6[0] merge[0] c0ec2bb[0] 60a544a[0] am[0] 770dfc5[0] adt[0] refactoring[0] classes[0] dealing[0] with[0] android[0] resources[0] out[0] merge[0] commit[0] '770dfc5ed43089228af1892eef3a73a0e7220bc7'[0] commit[0] '770dfc5ed43089228af1892eef3a73a0e7220bc7'[0] adt[0] refactoring[0] classes[0] dealing[0] with[0] android[0] resources[0] out[0] of[0] the[0] editor[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9160 commit 60a544ae112b5b6a7bba76e3357f143bc207ce6b adt: refactoring classes dealing with android resources out of the editor. basically: editors.resources.manager -  resources.manager editors.resources.configurations -  resources.configurations this is to make it less confusing between the "resources editors" and the class parsing/handling android resources (either in a project or in the framework). also moved the resourceexplorerview out of the resources editors, and clean up a few other misc classes. 	9160 commit 60a544ae112b5b6a7bba76e3357f143bc207ce6b adt: refactoring classes dealing with android resources out of the editor.<br> basically: editors.<br>resources.<br>manager -  resources.<br>manager editors.<br>resources.<br>configurations -  resources.<br>configurations this is to make it less confusing between the "resources editors" and the class parsing/handling android resources (either in a project or in the framework)<br> also moved the resourceexplorerview out of the resources editors, and clean up a few other misc classes.	1	-2	 9160[0] commit[0] 60a544ae112b5b6a7bba76e3357f143bc207ce6b[0] adt[0] refactoring[0] classes[0] dealing[0] with[0] android[0] resources[0] out[0] of[0] the[0] editor[0] [[Sentence=-1,1=word max, 1-5]] basically[0] editors[0] [[Sentence=-1,1=word max, 1-5]] resources[0] [[Sentence=-1,1=word max, 1-5]] manager[0] resources[0] [[Sentence=-1,1=word max, 1-5]] manager[0] editors[0] [[Sentence=-1,1=word max, 1-5]] resources[0] [[Sentence=-1,1=word max, 1-5]] configurations[0] resources[0] [[Sentence=-1,1=word max, 1-5]] configurations[0] this[0] is[0] to[0] make[0] it[0] less[0] confusing[-1] between[0] the[0] resources[0] editors[0] and[0] the[0] class[0] parsing/handling[0] android[0] resources[0] either[0] in[0] a[0] project[0] or[0] in[0] the[0] framework[0] [[Sentence=-2,1=word max, 1-5]] also[0] moved[0] the[0] resourceexplorerview[0] out[0] of[0] the[0] resources[0] editors[0] and[0] clean[0] up[0] a[0] few[0] other[0] misc[0] classes[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
9162 commit 69425d803b34589309a69eddc53a338e1409b30c adt: move more packages into internal: editors -  adt.internal.editors. this also marks the final refactoring of combining previous editors/common plugin under the adt package. 	9162 commit 69425d803b34589309a69eddc53a338e1409b30c adt: move more packages into internal: editors -  adt.<br>internal.<br>editors.<br> this also marks the final refactoring of combining previous editors/common plugin under the adt package.	1	-1	 9162[0] commit[0] 69425d803b34589309a69eddc53a338e1409b30c[0] adt[0] move[0] more[0] packages[0] into[0] internal[0] editors[0] adt[0] [[Sentence=-1,1=word max, 1-5]] internal[0] [[Sentence=-1,1=word max, 1-5]] editors[0] [[Sentence=-1,1=word max, 1-5]] this[0] also[0] marks[0] the[0] final[0] refactoring[0] of[0] combining[0] previous[0] editors/common[0] plugin[0] under[0] the[0] adt[0] package[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9166 commit 99b9ad2143e5e9e626879309ecc6f883403bdcae adt: move more packages into internal project.* refactorings.* also: moved the export wizard from project.export to wizards.export, moved some actions out of project into the new internal package actions. 	9166 commit 99b9ad2143e5e9e626879309ecc6f883403bdcae adt: move more packages into internal project.<br> refactorings.<br> also: moved the export wizard from project.<br>export to wizards.<br>export, moved some actions out of project into the new internal package actions.	1	-1	 9166[0] commit[0] 99b9ad2143e5e9e626879309ecc6f883403bdcae[0] adt[0] move[0] more[0] packages[0] into[0] internal[0] project[0] [[Sentence=-1,1=word max, 1-5]] refactorings[0] [[Sentence=-1,1=word max, 1-5]] also[0] moved[0] the[0] export[0] wizard[0] from[0] project[0] [[Sentence=-1,1=word max, 1-5]] export[0] to[0] wizards[0] [[Sentence=-1,1=word max, 1-5]] export[0] moved[0] some[0] actions[0] out[0] of[0] project[0] into[0] the[0] new[0] internal[0] package[0] actions[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9695 commit d0b384b30ae5c034aedcedf10c541080d1d80c70 ai 144490: am: cl 144488 am: cl 144486 adt: call the extract string refactoring to create a new xml string id when selecting a string reference. original author: raphael merged from: //branches/cupcake/... original author: android-build automated import of cl 144490 	9695 commit d0b384b30ae5c034aedcedf10c541080d1d80c70 ai 14490: am: cl 14488 am: cl 14486 adt: call the extract string refactoring to create a new xml string id when selecting a string reference.<br> original author: raphael merged from: //branches/cupcake/.<br> original author: android-build automated import of cl 14490	1	-1	 9695[0] commit[0] d0b384b30ae5c034aedcedf10c541080d1d80c70[0] ai[0] 144490/14490[0] am[0] cl[0] 144488/14488[0] am[0] cl[0] 144486/14486[0] adt[0] call[0] the[0] extract[0] string[0] refactoring[0] to[0] create[0] a[0] new[0] xml[0] string[0] id[0] when[0] selecting[0] a[0] string[0] reference[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] raphael[0] merged[0] from[0] //branches/cupcake/[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] android[0] build[0] automated[0] import[0] of[0] cl[0] 144490/14490[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9697 commit 4fcaf6a92b08fa7ed2a4c868d139d138f8c281b8 ai 144486: adt: call the extract string refactoring to create a new xml string id when selecting a string reference. bug 1722971 automated import of cl 144486 	9697 commit 4fcaf6a92b08fa7ed2a4c868d139d138f8c281b8 ai 14486: adt: call the extract string refactoring to create a new xml string id when selecting a string reference.<br> bug 1722971 automated import of cl 14486	1	-1	 9697[0] commit[0] 4fcaf6a92b08fa7ed2a4c868d139d138f8c281b8[0] ai[0] 144486/14486[0] adt[0] call[0] the[0] extract[0] string[0] refactoring[0] to[0] create[0] a[0] new[0] xml[0] string[0] id[0] when[0] selecting[0] a[0] string[0] reference[0] [[Sentence=-1,1=word max, 1-5]] bug[0] 1722971[0] automated[0] import[0] of[0] cl[0] 144486/14486[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9698 commit 36936dfeeca9ff39abf49d24dd8435769908cd51 ai 144488: am: cl 144486 adt: call the extract string refactoring to create a new xml string id when selecting a string reference. original author: raphael merged from: //branches/cupcake/... automated import of cl 144488 	9698 commit 36936dfeeca9ff39abf49d24dd8435769908cd51 ai 14488: am: cl 14486 adt: call the extract string refactoring to create a new xml string id when selecting a string reference.<br> original author: raphael merged from: //branches/cupcake/.<br> automated import of cl 14488	1	-1	 9698[0] commit[0] 36936dfeeca9ff39abf49d24dd8435769908cd51[0] ai[0] 144488/14488[0] am[0] cl[0] 144486/14486[0] adt[0] call[0] the[0] extract[0] string[0] refactoring[0] to[0] create[0] a[0] new[0] xml[0] string[0] id[0] when[0] selecting[0] a[0] string[0] reference[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] raphael[0] merged[0] from[0] //branches/cupcake/[0] [[Sentence=-1,1=word max, 1-5]] automated[0] import[0] of[0] cl[0] 144488/14488[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9710 commit 45299317fe7d0dbfca0c5811fe1248d92b1a986f ai 144402: am: cl 144284 am: cl 144283 adt: enhance resource chooser with ability to create new xml strings. that's a first pass. there's a fair bit of refactoring involved, so it's split in two cls. next cl will add more functionality. original author: raphael merged from: //branches/cupcake/... original author: android-build automated import of cl 144402 	9710 commit 45299317fe7d0dbfca0c5811fe1248d92b1a986f ai 14402: am: cl 144284 am: cl 144283 adt: enhance resource chooser with ability to create new xml strings.<br> that's a first pass.<br> there's a fair bit of refactoring involved, so it's split in two cls.<br> next cl will add more functionality.<br> original author: raphael merged from: //branches/cupcake/.<br> original author: android-build automated import of cl 14402	1	-1	 9710[0] commit[0] 45299317fe7d0dbfca0c5811fe1248d92b1a986f[0] ai[0] 144402/14402[0] am[0] cl[0] 144284[0] am[0] cl[0] 144283[0] adt[0] enhance[0] resource[0] chooser[0] with[0] ability[0] to[0] create[0] new[0] xml[0] strings[0] [[Sentence=-1,1=word max, 1-5]] that's[0] a[0] first[0] pass[0] [[Sentence=-1,1=word max, 1-5]] there's[0] a[0] fair[0] bit[0] of[0] refactoring[0] involved[0] so[0] it's[0] split[0] in[0] two[0] cls[0] [[Sentence=-1,1=word max, 1-5]] next[0] cl[0] will[0] add[0] more[0] functionality[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] raphael[0] merged[0] from[0] //branches/cupcake/[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] android[0] build[0] automated[0] import[0] of[0] cl[0] 144402/14402[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9724 commit 1d4c7481b53214effc069d4269c4c17f888ff43f ai 144284: am: cl 144283 adt: enhance resource chooser with ability to create new xml strings. that's a first pass. there's a fair bit of refactoring involved, so it's split in two cls. next cl will add more functionality. original author: raphael merged from: //branches/cupcake/... automated import of cl 144284 	9724 commit 1d4c7481b53214effc069d4269c4c17f88ff43f ai 144284: am: cl 144283 adt: enhance resource chooser with ability to create new xml strings.<br> that's a first pass.<br> there's a fair bit of refactoring involved, so it's split in two cls.<br> next cl will add more functionality.<br> original author: raphael merged from: //branches/cupcake/.<br> automated import of cl 144284	1	-1	 9724[0] commit[0] 1d4c7481b53214effc069d4269c4c17f888ff43f/1d4c7481b53214effc069d4269c4c17f88ff43f[0] ai[0] 144284[0] am[0] cl[0] 144283[0] adt[0] enhance[0] resource[0] chooser[0] with[0] ability[0] to[0] create[0] new[0] xml[0] strings[0] [[Sentence=-1,1=word max, 1-5]] that's[0] a[0] first[0] pass[0] [[Sentence=-1,1=word max, 1-5]] there's[0] a[0] fair[0] bit[0] of[0] refactoring[0] involved[0] so[0] it's[0] split[0] in[0] two[0] cls[0] [[Sentence=-1,1=word max, 1-5]] next[0] cl[0] will[0] add[0] more[0] functionality[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] raphael[0] merged[0] from[0] //branches/cupcake/[0] [[Sentence=-1,1=word max, 1-5]] automated[0] import[0] of[0] cl[0] 144284[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9725 commit b6ae62d621b3ce744727fb4cac7e6ae79b524657 ai 144283: adt: enhance resource chooser with ability to create new xml strings. that's a first pass. there's a fair bit of refactoring involved, so it's split in two cls. next cl will add more functionality. bug 1722971 automated import of cl 144283 	9725 commit b6ae62d621b3ce744727fb4cac7e6ae79b524657 ai 144283: adt: enhance resource chooser with ability to create new xml strings.<br> that's a first pass.<br> there's a fair bit of refactoring involved, so it's split in two cls.<br> next cl will add more functionality.<br> bug 1722971 automated import of cl 144283	1	-1	 9725[0] commit[0] b6ae62d621b3ce744727fb4cac7e6ae79b524657[0] ai[0] 144283[0] adt[0] enhance[0] resource[0] chooser[0] with[0] ability[0] to[0] create[0] new[0] xml[0] strings[0] [[Sentence=-1,1=word max, 1-5]] that's[0] a[0] first[0] pass[0] [[Sentence=-1,1=word max, 1-5]] there's[0] a[0] fair[0] bit[0] of[0] refactoring[0] involved[0] so[0] it's[0] split[0] in[0] two[0] cls[0] [[Sentence=-1,1=word max, 1-5]] next[0] cl[0] will[0] add[0] more[0] functionality[0] [[Sentence=-1,1=word max, 1-5]] bug[0] 1722971[0] automated[0] import[0] of[0] cl[0] 144283[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9749 commit ee76a2912fa5611f18dd6d46d7ed4c7b6037bbb8 ai 143886: am: cl 143882 adt #1743364: refactor misc ui widgets together in package adt.ui. original author: raphael merged from: //branches/cupcake/... automated import of cl 143886 	9749 commit ee76a2912fa5611f18dd6d46d7ed4c7b6037bb8 ai 143886: am: cl 143882 adt #1743364: refactor misc ui widgets together in package adt.<br>ui.<br> original author: raphael merged from: //branches/cupcake/.<br> automated import of cl 143886	1	-1	 9749[0] commit[0] ee76a2912fa5611f18dd6d46d7ed4c7b6037bbb8/ee76a2912fa5611f18dd6d46d7ed4c7b6037bb8[0] ai[0] 143886[0] am[0] cl[0] 143882[0] adt[0] #1743364[0] refactor[0] misc[0] ui[0] widgets[0] together[0] in[0] package[0] adt[0] [[Sentence=-1,1=word max, 1-5]] ui[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] raphael[0] merged[0] from[0] //branches/cupcake/[0] [[Sentence=-1,1=word max, 1-5]] automated[0] import[0] of[0] cl[0] 143886[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9750 commit 1389a6b5f99f79e9eb2a1ff2b2a8dff24bc0d817 ai 143887: am: cl 143886 am: cl 143882 adt #1743364: refactor misc ui widgets together in package adt.ui. original author: raphael merged from: //branches/cupcake/... original author: android-build merged from: //branches/donutburger/... automated import of cl 143887 	9750 commit 1389a6b5f99f79e9eb2a1ff2b2a8dff24bc0d817 ai 143887: am: cl 143886 am: cl 143882 adt #1743364: refactor misc ui widgets together in package adt.<br>ui.<br> original author: raphael merged from: //branches/cupcake/.<br> original author: android-build merged from: //branches/donutburger/.<br> automated import of cl 143887	1	-1	 9750[0] commit[0] 1389a6b5f99f79e9eb2a1ff2b2a8dff24bc0d817[0] ai[0] 143887[0] am[0] cl[0] 143886[0] am[0] cl[0] 143882[0] adt[0] #1743364[0] refactor[0] misc[0] ui[0] widgets[0] together[0] in[0] package[0] adt[0] [[Sentence=-1,1=word max, 1-5]] ui[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] raphael[0] merged[0] from[0] //branches/cupcake/[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] android[0] build[0] merged[0] from[0] //branches/donutburger/[0] [[Sentence=-1,1=word max, 1-5]] automated[0] import[0] of[0] cl[0] 143887[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9753 commit 0b98ec74ff26f922ef99c4acf1431f6e8d3dac27 ai 143882: adt #1743364: refactor misc ui widgets together in package adt.ui. bug 1743364 automated import of cl 143882 	9753 commit 0b98ec74ff26f922ef99c4acf1431f6e8d3dac27 ai 143882: adt #1743364: refactor misc ui widgets together in package adt.<br>ui.<br> bug 1743364 automated import of cl 143882	1	-1	 9753[0] commit[0] 0b98ec74ff26f922ef99c4acf1431f6e8d3dac27[0] ai[0] 143882[0] adt[0] #1743364[0] refactor[0] misc[0] ui[0] widgets[0] together[0] in[0] package[0] adt[0] [[Sentence=-1,1=word max, 1-5]] ui[0] [[Sentence=-1,1=word max, 1-5]] bug[0] 1743364[0] automated[0] import[0] of[0] cl[0] 143882[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9785 commit 555b20d30ea06c324b5097cd03280f0b5f962630 ai 143273: am: cl 143259 adt #1743364: refactor all wizard classes & their actions together. original author: raphael merged from: //branches/cupcake/... automated import of cl 143273 	9785 commit 55b20d30ea06c324b5097cd03280f0b5f962630 ai 143273: am: cl 143259 adt #1743364: refactor all wizard classes & their actions together.<br> original author: raphael merged from: //branches/cupcake/.<br> automated import of cl 143273	1	-1	 9785[0] commit[0] 555b20d30ea06c324b5097cd03280f0b5f962630/55b20d30ea06c324b5097cd03280f0b5f962630[0] ai[0] 143273[0] am[0] cl[0] 143259[0] adt[0] #1743364[0] refactor[0] all[0] wizard[0] classes[0] &[0] their[0] actions[0] together[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] raphael[0] merged[0] from[0] //branches/cupcake/[0] [[Sentence=-1,1=word max, 1-5]] automated[0] import[0] of[0] cl[0] 143273[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9790 commit ad32f86d2449aaf91c1769652d5e4a5343cee957 ai 143401: am: cl 143273 am: cl 143259 adt #1743364: refactor all wizard classes & their actions together. original author: raphael merged from: //branches/cupcake/... original author: android-build merged from: //branches/donutburger/... automated import of cl 143401 	9790 commit ad32f86d2449af91c1769652d5e4a5343cee957 ai 143401: am: cl 143273 am: cl 143259 adt #1743364: refactor all wizard classes & their actions together.<br> original author: raphael merged from: //branches/cupcake/.<br> original author: android-build merged from: //branches/donutburger/.<br> automated import of cl 143401	1	-1	 9790[0] commit[0] ad32f86d2449aaf91c1769652d5e4a5343cee957/ad32f86d2449af91c1769652d5e4a5343cee957[0] ai[0] 143401[0] am[0] cl[0] 143273[0] am[0] cl[0] 143259[0] adt[0] #1743364[0] refactor[0] all[0] wizard[0] classes[0] &[0] their[0] actions[0] together[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] raphael[0] merged[0] from[0] //branches/cupcake/[0] [[Sentence=-1,1=word max, 1-5]] original[0] author[0] android[0] build[0] merged[0] from[0] //branches/donutburger/[0] [[Sentence=-1,1=word max, 1-5]] automated[0] import[0] of[0] cl[0] 143401[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
9810 commit b512deacf3dfbae3a5f7244a5776e3f2b9171956 ai 143259: adt #1743364: refactor all wizard classes & their actions together. bug 1743364 automated import of cl 143259 	9810 commit b512deacf3dfbae3a5f7244a5776e3f2b9171956 ai 143259: adt #1743364: refactor all wizard classes & their actions together.<br> bug 1743364 automated import of cl 143259	1	-1	 9810[0] commit[0] b512deacf3dfbae3a5f7244a5776e3f2b9171956[0] ai[0] 143259[0] adt[0] #1743364[0] refactor[0] all[0] wizard[0] classes[0] &[0] their[0] actions[0] together[0] [[Sentence=-1,1=word max, 1-5]] bug[0] 1743364[0] automated[0] import[0] of[0] cl[0] 143259[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
